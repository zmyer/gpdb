The Greenplum pg_upgrade code is based on pg_upgrade from 9.0.23 and has
been extended to work with Greenplum. This README is intended to document the
changes that have been done.

Operation of pg_upgrade remains unchanged as are the available command line
parameters. Upgrading a Greenplum cluster with pg_upgrade is done by first
upgrading the QD and then the QEs.


Extensions to upstream pg_upgrade
---------------------------------

pg_upgrade is in PostgreSQL only maintaning the Oids of types, Greenplum
however requires all Oids to be maintained such that they are synchronized
between QD and QEs after upgrade. The binary-upgrade option in pg_dump has
been extended to inject Oid preservation calls for all required object types
in the dump. Technically, the Oids needn't be preserved during upgrade as
long as they are synchronized between QD/QEs after the upgrade. The current
implementation preserves the Oids rather than allocate new ones.

Functionality for restoring the append-only catalog relations is in
aotable.c, Greenplum specific checks for upgrading from GPDB 4 are added to
version_old_gpdb4.c.


Upgrading from 4.3 to 5.0
-------------------------

When upgrading from 4.3 to 5.0 the QD must be upgraded before any QEs are
upgraded. This is because new Oids are allocated during the QD upgrade and
these needs to be distributed to the QEs in order to preserve the QD/QE Oid
synchronization.

* Each base relation type is in 5.0 defined as an array type, something which
  is not supported in 4.3. The arraytypes for base relations will be created
  during upgrade and thier Oids recorded. To be able to distribute the Oids to
  the QEs, the upgrade will leave a dump file in the working directory named
  pg_upgrade_dump_arraytypes.sql. If this file is placed in the working
  directory of upgrading a QE, pg_upgrade will use it to ensure that the Oids
  are synchronized.

* The on-disk format of the NUMERIC data type was changed in 5.0 due to the
  merge of PostgreSQL 8.3, both heap and AO tables are affected by this. There
  were also changes to the flags in the heap page header. PostgreSQL doesn't
  support upgrading with pg_upgrade from 8.2 to 8.3, thus handling this format
  change was added to pg_upgrade for Greenplum:

  - Heap tables are rewritten as part of the upgrade, any pages containing
    numeric attributes will be converted when the segment files are copied
	to the new data directory.

  - AO table segment files will be rewritten when a segment containing numeric
    attributes are written to from database operations.

