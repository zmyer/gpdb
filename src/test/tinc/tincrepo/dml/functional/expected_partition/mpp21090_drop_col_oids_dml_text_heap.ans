DROP TABLE IF EXISTS oidtab;
DROP TABLE
CREATE TABLE oidtab(
col1 serial,
col2 decimal,
col3 char,
col4 text,
col5 int
) WITH OIDS DISTRIBUTED by(col4);
psql:/data/prabhd/test/tincrepo/main/dml/functional/output/mpp21090_drop_col_oids_dml_text_heap_opt.sql:21: NOTICE:  CREATE TABLE will create implicit sequence "oidtab_col1_seq" for serial column "oidtab.col1"
psql:/data/prabhd/test/tincrepo/main/dml/functional/output/mpp21090_drop_col_oids_dml_text_heap_opt.sql:21: NOTICE:  OIDS=TRUE is not recommended for user-created tables. Use OIDS=FALSE to prevent wrap-around of the OID counter
CREATE TABLE
ALTER TABLE oidtab DROP COLUMN col2;
ALTER TABLE
INSERT INTO oidtab(col3,col4,col5) SELECT 'a','abcdefghijklmnop',1;
INSERT 59122 1
SELECT * FROM oidtab ORDER BY 1,2,3,4;
 col1 | col3 |       col4       | col5 
------+------+------------------+------
    1 | a    | abcdefghijklmnop |    1
(1 row)

DROP TABLE IF EXISTS tempoid;
DROP TABLE
CREATE TABLE tempoid as SELECT oid,col1,col3,col4,col5 FROM oidtab ORDER BY 1;
psql:/data/prabhd/test/tincrepo/main/dml/functional/output/mpp21090_drop_col_oids_dml_text_heap_opt.sql:29: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'col4' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 1
UPDATE oidtab SET col4='qrstuvwxyz' WHERE col3 = 'a' AND col5 = 1;
UPDATE 1
SELECT * FROM oidtab ORDER BY 1,2,3,4;
 col1 | col3 |    col4    | col5 
------+------+------------+------
    1 | a    | qrstuvwxyz |    1
(1 row)

SELECT * FROM ((SELECT COUNT(*) FROM oidtab) UNION (SELECT COUNT(*) FROM tempoid, oidtab WHERE tempoid.oid = oidtab.oid AND tempoid.col5 = oidtab.col5))foo;
 count 
-------
     1
(1 row)

