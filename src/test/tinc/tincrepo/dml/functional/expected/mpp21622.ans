-- @author prabhd
-- @created 2014-03-10 12:00:00
-- @modified 2014-03-10 12:00:00
-- @tags dml MPP-21622
-- @db_name dmldb
-- @product_version gpdb: [4.3.0.0-] 
-- @optimizer_mode on
-- @description MPP-21622 Update with primary key: only sort if the primary key is updated
--start_ignore
explain update r set b = 5;
                                    QUERY PLAN                                    
----------------------------------------------------------------------------------
 Update  (cost=0.00..5.47 rows=1 width=1)
   ->  Result  (cost=0.00..4.28 rows=1 width=48)
         ->  Assert  (cost=0.00..3.19 rows=1 width=36)
               Assert Cond: "ColRef_0010" = 0 OR (NOT public.r.a IS NULL)
               ->  Split  (cost=0.00..2.12 rows=1 width=36)
                     ->  Result  (cost=0.00..1.05 rows=1 width=36)
                           ->  Table Scan on r  (cost=0.00..0.01 rows=1 width=24)
 Settings:  optimizer=on
(8 rows)

--end_ignore
update r set b = 5;
UPDATE 1
select * from r order by 1,2;
 a | b 
---+---
 1 | 5
(1 row)

--start_ignore
explain update r set a = 5;
                                             QUERY PLAN                                              
-----------------------------------------------------------------------------------------------------
 Update  (cost=0.00..7.53 rows=1 width=1)
   ->  Sort  (cost=0.00..6.34 rows=1 width=48)
         Sort Key: "ColRef_0010"
         ->  Result  (cost=0.00..5.34 rows=1 width=48)
               ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=0.00..4.25 rows=1 width=40)
                     Hash Key: a
                     ->  Assert  (cost=0.00..3.21 rows=1 width=40)
                           Assert Cond: "ColRef_0010" = 0 OR (NOT a IS NULL)
                           ->  Split  (cost=0.00..2.13 rows=1 width=40)
                                 ->  Result  (cost=0.00..1.05 rows=1 width=40)
                                       ->  Table Scan on r  (cost=0.00..0.01 rows=1 width=24)
 Settings:  optimizer=on
(12 rows)

--end_ignore
update r set a = 5;
UPDATE 1
select * from r order by 1,2;
 a | b 
---+---
 5 | 5
(1 row)

