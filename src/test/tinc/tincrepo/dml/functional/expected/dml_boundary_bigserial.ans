-- @author prabhd 
-- @created 2012-12-05 12:00:00 
-- @modified 2012-12-05 12:00:00 
-- @tags dml 
-- @db_name dmldb
-- @description test: Boundary test for bigserial
DROP TABLE IF EXISTS dml_bigserial;
DROP TABLE
CREATE TABLE dml_bigserial (a bigserial) distributed by (a);
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
-- Simple DML
INSERT INTO dml_bigserial VALUES(9223372036854775807);
INSERT 0 1
SELECT * FROM dml_bigserial ORDER BY 1;
          a          
---------------------
 9223372036854775807
(1 row)

INSERT INTO dml_bigserial VALUES(0);
INSERT 0 1
SELECT * FROM dml_bigserial ORDER BY 1;
          a          
---------------------
                   0
 9223372036854775807
(2 rows)

UPDATE dml_bigserial SET a = 9223372036854775807;
UPDATE 2
SELECT * FROM dml_bigserial ORDER BY 1;
          a          
---------------------
 9223372036854775807
 9223372036854775807
(2 rows)

UPDATE dml_bigserial SET a = 0;
UPDATE 2
SELECT * FROM dml_bigserial ORDER BY 1;
 a 
---
 0
 0
(2 rows)

-- OUT OF RANGE
INSERT INTO dml_bigserial VALUES(9223372036854775808);
psql:dml_boundary_bigserial.sql:22: ERROR:  bigint out of range
SELECT * FROM dml_bigserial ORDER BY 1;
 a 
---
 0
 0
(2 rows)

UPDATE dml_bigserial SET a = 9223372036854775808;
psql:dml_boundary_bigserial.sql:24: ERROR:  bigint out of range
SELECT * FROM dml_bigserial ORDER BY 1;
 a 
---
 0
 0
(2 rows)

