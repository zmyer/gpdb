-- @author prabhd 
-- @created 2012-02-01 12:00:00 
-- @modified 2013-02-01 12:00:00 
-- @tags cte HAWQ 
-- @product_version gpdb: [4.3-],hawq: [1.1-]
-- @db_name world_db
-- @description cte tests from cdbfast 

-- queries with views using CTEs
-- view1 with multiple CTEs being used multiple times
create view view_with_shared_scans as
(
with longlivingregions as 
(
select FOO.*,count(distinct language) as "lang_count"
from(
     select
       sum(population) as "REGION_POP",
       sum(gnp) as "REGION_GNP",
       avg(lifeexpectancy) as "REGION_LIFETIME",region
     from
      country
     group by region
    ) FOO,countrylanguage,country
where
   country.code = countrylanguage.countrycode
   and FOO.region = country.region
group by
FOO.region,foo."REGION_POP",foo."REGION_GNP",foo."REGION_LIFETIME"),
denseregions as 
(
select FOO.*,count(distinct language) as "lang_count",
       sum(surfacearea) as "REGION_SURFACE_AREA"
from(
     select
       sum(population) as "REGION_POP",
       sum(gnp) as "REGION_GNP",
       region
     from
      country
     group by region
    ) FOO,countrylanguage,country
where
   country.code = countrylanguage.countrycode
   and FOO.region = country.region
   and FOO."REGION_POP" != 0
group by
FOO.region,foo."REGION_POP",foo."REGION_GNP"
order by sum(surfacearea)/foo."REGION_POP" desc),
allcountrystats as 
( select country.code,country.name,count(distinct city.id) CITY_CNT,
  count(distinct countrylanguage.language) LANG_CNT
  from country,city,countrylanguage
  where country.code = city.countrycode
  and country.code = countrylanguage.countrycode
  group by country.code,country.name
)
select allcountrystats.CITY_CNT,allcountrystats.LANG_CNT,allcountrystats.name,
       "REGION_SURFACE_AREA","REGION_LIFETIME",longlivingregions."REGION_POP",longlivingregions.lang_count,longlivingregions."REGION_GNP",longlivingregions.region
from longlivingregions,denseregions,allcountrystats,country
where longlivingregions.region = denseregions.region and allcountrystats.code = country.code and country.region = longlivingregions.region
and country.indepyear between 1800 and 1850
UNION ALL
select allcountrystats.CITY_CNT,allcountrystats.LANG_CNT,allcountrystats.name,
       "REGION_SURFACE_AREA","REGION_LIFETIME",longlivingregions."REGION_POP",longlivingregions.lang_count,longlivingregions."REGION_GNP",longlivingregions.region
from longlivingregions,denseregions,allcountrystats,country
where longlivingregions.region = denseregions.region and allcountrystats.code = country.code and country.region = longlivingregions.region
and country.indepyear between 1850 and 1900
UNION ALL
select allcountrystats.CITY_CNT,allcountrystats.LANG_CNT,allcountrystats.name,
       "REGION_SURFACE_AREA","REGION_LIFETIME",longlivingregions."REGION_POP",longlivingregions.lang_count,longlivingregions."REGION_GNP",longlivingregions.region
from longlivingregions,denseregions,allcountrystats,country
where longlivingregions.region = denseregions.region and allcountrystats.code = country.code and country.region = longlivingregions.region
and country.indepyear > 1900
);
CREATE VIEW
\d view_with_shared_scans;
        View "public.view_with_shared_scans"
       Column        |       Type       | Modifiers 
---------------------+------------------+-----------
 city_cnt            | bigint           | 
 lang_cnt            | bigint           | 
 name                | text             | 
 REGION_SURFACE_AREA | real             | 
 REGION_LIFETIME     | double precision | 
 REGION_POP          | bigint           | 
 lang_count          | bigint           | 
 REGION_GNP          | numeric          | 
 region              | text             | 
View definition:
 WITH longlivingregions AS (
         SELECT foo."REGION_POP", foo."REGION_GNP", foo."REGION_LIFETIME", foo.region, count(DISTINCT countrylanguage.language) AS lang_count
           FROM ( SELECT sum(country.population) AS "REGION_POP", sum(country.gnp) AS "REGION_GNP", avg(country.lifeexpectancy) AS "REGION_LIFETIME", country.region
                   FROM country
                  GROUP BY country.region) foo, countrylanguage, country
          WHERE country.code = countrylanguage.countrycode AND foo.region = country.region
          GROUP BY foo.region, foo."REGION_POP", foo."REGION_GNP", foo."REGION_LIFETIME"
        ), denseregions AS (
         SELECT foo."REGION_POP", foo."REGION_GNP", foo.region, count(DISTINCT countrylanguage.language) AS lang_count, sum(country.surfacearea) AS "REGION_SURFACE_AREA"
           FROM ( SELECT sum(country.population) AS "REGION_POP", sum(country.gnp) AS "REGION_GNP", country.region
                   FROM country
                  GROUP BY country.region) foo, countrylanguage, country
          WHERE country.code = countrylanguage.countrycode AND foo.region = country.region AND foo."REGION_POP" <> 0
          GROUP BY foo.region, foo."REGION_POP", foo."REGION_GNP"
          ORDER BY sum(country.surfacearea) / foo."REGION_POP"::double precision DESC
        ), allcountrystats AS (
         SELECT country.code, country.name, count(DISTINCT city.id) AS city_cnt, count(DISTINCT countrylanguage.language) AS lang_cnt
           FROM country, city, countrylanguage
          WHERE country.code = city.countrycode AND country.code = countrylanguage.countrycode
          GROUP BY country.code, country.name
        )
( SELECT allcountrystats.city_cnt, allcountrystats.lang_cnt, allcountrystats.name, denseregions."REGION_SURFACE_AREA", longlivingregions."REGION_LIFETIME", longlivingregions."REGION_POP", longlivingregions.lang_count, longlivingregions."REGION_GNP", longlivingregions.region
   FROM longlivingregions, denseregions, allcountrystats, country
  WHERE longlivingregions.region = denseregions.region AND allcountrystats.code = country.code AND country.region = longlivingregions.region AND country.indepyear >= 1800 AND country.indepyear <= 1850
UNION ALL 
 SELECT allcountrystats.city_cnt, allcountrystats.lang_cnt, allcountrystats.name, denseregions."REGION_SURFACE_AREA", longlivingregions."REGION_LIFETIME", longlivingregions."REGION_POP", longlivingregions.lang_count, longlivingregions."REGION_GNP", longlivingregions.region
   FROM longlivingregions, denseregions, allcountrystats, country
  WHERE longlivingregions.region = denseregions.region AND allcountrystats.code = country.code AND country.region = longlivingregions.region AND country.indepyear >= 1850 AND country.indepyear <= 1900)
UNION ALL 
 SELECT allcountrystats.city_cnt, allcountrystats.lang_cnt, allcountrystats.name, denseregions."REGION_SURFACE_AREA", longlivingregions."REGION_LIFETIME", longlivingregions."REGION_POP", longlivingregions.lang_count, longlivingregions."REGION_GNP", longlivingregions.region
   FROM longlivingregions, denseregions, allcountrystats, country
  WHERE longlivingregions.region = denseregions.region AND allcountrystats.code = country.code AND country.region = longlivingregions.region AND country.indepyear > 1900;

select city_cnt,lang_cnt,name,region from view_with_shared_scans order by name LIMIT 50;
 city_cnt | lang_cnt |                 name                  |          region           
----------+----------+---------------------------------------+---------------------------
        4 |        5 | Afghanistan                           | Southern and Central Asia
        1 |        3 | Albania                               | Southern Europe
       18 |        2 | Algeria                               | Northern Africa
        5 |        9 | Angola                                | Central Africa
        1 |        2 | Antigua and Barbuda                   | Caribbean
       57 |        3 | Argentina                             | South America
        3 |        2 | Armenia                               | Middle East
       14 |        8 | Australia                             | Australia and New Zealand
        6 |        8 | Austria                               | Western Europe
        4 |        4 | Azerbaijan                            | Middle East
        1 |        2 | Bahamas                               | Caribbean
        1 |        2 | Bahrain                               | Middle East
       24 |        7 | Bangladesh                            | Southern and Central Asia
        1 |        2 | Barbados                              | Caribbean
       16 |        4 | Belarus                               | Eastern Europe
        9 |        6 | Belgium                               | Western Europe
        2 |        4 | Belize                                | Central America
        4 |        7 | Benin                                 | Western Africa
        1 |        3 | Bhutan                                | Southern and Central Asia
        8 |        4 | Bolivia                               | South America
        3 |        1 | Bosnia and Herzegovina                | Southern Europe
        2 |        5 | Botswana                              | Southern Africa
      250 |        5 | Brazil                                | South America
        1 |        4 | Brunei                                | Southeast Asia
       10 |        4 | Bulgaria                              | Eastern Europe
        3 |        6 | Burkina Faso                          | Western Africa
        1 |        3 | Burundi                               | Eastern Africa
        3 |        4 | Cambodia                              | Southeast Asia
        7 |        8 | Cameroon                              | Central Africa
       49 |       12 | Canada                                | North America
        1 |        2 | Cape Verde                            | Western Africa
        1 |        6 | Central African Republic              | Central Africa
        2 |        8 | Chad                                  | Central Africa
       29 |        4 | Chile                                 | South America
       38 |        5 | Colombia                              | South America
        1 |        5 | Comoros                               | Eastern Africa
        2 |        6 | Congo                                 | Central Africa
       18 |       10 | Congo, The Democratic Republic of the | Central Africa
        1 |        4 | Costa Rica                            | Central America
        5 |        5 | Cote deIvoire                         | Western Africa
        4 |        2 | Croatia                               | Southern Europe
       14 |        1 | Cuba                                  | Caribbean
        2 |        2 | Cyprus                                | Middle East
       10 |        8 | Czech Republic                        | Eastern Europe
        1 |        3 | Djibouti                              | Eastern Africa
        1 |        2 | Dominica                              | Caribbean
        6 |        2 | Dominican Republic                    | Caribbean
       15 |        2 | Ecuador                               | South America
       37 |        2 | Egypt                                 | Northern Africa
        7 |        2 | El Salvador                           | Central America
(50 rows)

select city_cnt,lang_cnt,name,"REGION_POP","REGION_GNP",region from view_with_shared_scans where region = 'Eastern Europe';
 city_cnt | lang_cnt |        name        | REGION_POP | REGION_GNP |     region     
----------+----------+--------------------+------------+------------+----------------
        4 |        5 | Moldova            |  307026000 |  659980.00 | Eastern Europe
       16 |        4 | Belarus            |  307026000 |  659980.00 | Eastern Europe
      189 |       12 | Russian Federation |  307026000 |  659980.00 | Eastern Europe
        3 |        5 | Slovakia           |  307026000 |  659980.00 | Eastern Europe
       10 |        4 | Bulgaria           |  307026000 |  659980.00 | Eastern Europe
       29 |        6 | Romania            |  307026000 |  659980.00 | Eastern Europe
       57 |        7 | Ukraine            |  307026000 |  659980.00 | Eastern Europe
        9 |        6 | Hungary            |  307026000 |  659980.00 | Eastern Europe
       10 |        8 | Czech Republic     |  307026000 |  659980.00 | Eastern Europe
       44 |        4 | Poland             |  307026000 |  659980.00 | Eastern Europe
(10 rows)

drop view view_with_shared_scans;
DROP VIEW
-- view with deeply nested CTEs
create view view_with_deep_nested_CTE as
(select avg(population),CITY
from
(
with size0_cities(CITY,POPULATION) as (select city.name,city.population from city where city.population >= 100)
select CITY,POPULATION from 
(
  with size1_cities(CITY,POPULATION) as ( select city,population from size0_cities where population >= 1000 )
  select CITY,POPULATION from 
  (
     with size2_cities(CITY,POPULATION) as (select city,population from size1_cities where population >= 10000)
     select CITY,POPULATION from
     (
       with size3_cities as (select city,population from  size2_cities where population >= 20000)
       select CITY,POPULATION from
       (
        with size4_cities as (select city,population from  size3_cities where population >= 50000)
        select CITY,POPULATION from
        (
         with size5_cities as (select city,population from  size4_cities where population >= 80000)
         select CITY,POPULATION from
         (
          with size6_cities as (select city,population from  size5_cities where population >= 150000)
          select CITY,POPULATION from
          (
           with size7_cities as (select city,population from  size6_cities where population >= 200000)
           select CITY,POPULATION from
           (
            with size8_cities as (select city,population from  size7_cities where population >= 250000)
            select CITY,POPULATION from
            (
             with size9_cities as (select city,population from  size8_cities where population >= 300000)
             select city,population from
             (
              with size10_cities as (select city,population from  size9_cities where population >= 6500000)
              select CITY,POPULATION from
              (
               with size11_cities as (select city,population from  size10_cities where population >= 7000000)
               select s1.city,s1.population from size11_cities s1,size1_cities s2
               UNION
               select s1.city,s1.population from size10_cities s1,size2_cities s2
               UNION
               select s1.city,s1.population from size9_cities s1,size3_cities s2
               UNION
               select s1.city,s1.population from size8_cities s1,size4_cities s2
               UNION
               select s1.city,s1.population from size7_cities s1,size5_cities s2
               UNION
               select s1.city,s1.population from size6_cities s1,size6_cities s2
              ) FOO11
             ) FOO10
            ) FOO9
           ) FOO8
          ) FOO7
         ) FOO6
        ) FOO5
       ) FOO4
     )FOO3
  ) FOO2
) FOO1 order by city
) FOO0 group by city order by city
);
CREATE VIEW
\d view_with_deep_nested_CTE;
View "public.view_with_deep_nested_cte"
 Column |  Type   | Modifiers 
--------+---------+-----------
 avg    | numeric | 
 city   | text    | 
View definition:
 SELECT avg(foo0.population) AS avg, foo0.city
   FROM ( WITH size0_cities(city, population) AS (
                 SELECT city.name, city.population
                   FROM city
                  WHERE city.population >= 100
                )
         SELECT foo1.city, foo1.population
           FROM ( WITH size1_cities(city, population) AS (
                         SELECT size0_cities.city, size0_cities.population
                           FROM size0_cities
                          WHERE size0_cities.population >= 1000
                        )
                 SELECT foo2.city, foo2.population
                   FROM ( WITH size2_cities(city, population) AS (
                                 SELECT size1_cities.city, size1_cities.population
                                   FROM size1_cities
                                  WHERE size1_cities.population >= 10000
                                )
                         SELECT foo3.city, foo3.population
                           FROM ( WITH size3_cities AS (
                                         SELECT size2_cities.city, size2_cities.population
                                           FROM size2_cities
                                          WHERE size2_cities.population >= 20000
                                        )
                                 SELECT foo4.city, foo4.population
                                   FROM ( WITH size4_cities AS (
                                                 SELECT size3_cities.city, size3_cities.population
                                                   FROM size3_cities
                                                  WHERE size3_cities.population >= 50000
                                                )
                                         SELECT foo5.city, foo5.population
                                           FROM ( WITH size5_cities AS (
                                                         SELECT size4_cities.city, size4_cities.population
                                                           FROM size4_cities
                                                          WHERE size4_cities.population >= 80000
                                                        )
                                                 SELECT foo6.city, foo6.population
                                                   FROM ( WITH size6_cities AS (
                                                                 SELECT size5_cities.city, size5_cities.population
                                                                   FROM size5_cities
                                                                  WHERE size5_cities.population >= 150000
                                                                )
                                                         SELECT foo7.city, foo7.population
                                                           FROM ( WITH size7_cities AS (
                                                                         SELECT size6_cities.city, size6_cities.population
                                                                           FROM size6_cities
                                                                          WHERE size6_cities.population >= 200000
                                                                        )
                                                                 SELECT foo8.city, foo8.population
                                                                   FROM ( WITH size8_cities AS (
                                                                                 SELECT size7_cities.city, size7_cities.population
                                                                                   FROM size7_cities
                                                                                  WHERE size7_cities.population >= 250000
                                                                                )
                                                                         SELECT foo9.city, foo9.population
                                                                           FROM ( WITH size9_cities AS (
                                                                                         SELECT size8_cities.city, size8_cities.population
                                                                                           FROM size8_cities
                                                                                          WHERE size8_cities.population >= 300000
                                                                                        )
                                                                                 SELECT foo10.city, foo10.population
                                                                                   FROM ( WITH size10_cities AS (
                                                                                                 SELECT size9_cities.city, size9_cities.population
                                                                                                   FROM size9_cities
                                                                                                  WHERE size9_cities.population >= 6500000
                                                                                                )
                                                                                         SELECT foo11.city, foo11.population
                                                                                           FROM ( WITH size11_cities AS (
                                                                                                         SELECT size10_cities.city, size10_cities.population
                                                                                                           FROM size10_cities
                                                                                                          WHERE size10_cities.population >= 7000000
                                                                                                        )
                                                                                                (((( SELECT s1.city, s1.population
                                                                                                   FROM size11_cities s1, size1_cities s2
                                                                                        UNION 
                                                                                                 SELECT s1.city, s1.population
                                                                                                   FROM size10_cities s1, size2_cities s2)
                                                                                        UNION 
                                                                                                 SELECT s1.city, s1.population
                                                                                                   FROM size9_cities s1, size3_cities s2)
                                                                                        UNION 
                                                                                                 SELECT s1.city, s1.population
                                                                                                   FROM size8_cities s1, size4_cities s2)
                                                                                        UNION 
                                                                                                 SELECT s1.city, s1.population
                                                                                                   FROM size7_cities s1, size5_cities s2)
                                                                                        UNION 
                                                                                                 SELECT s1.city, s1.population
                                                                                                   FROM size6_cities s1, size6_cities s2) foo11) foo10) foo9) foo8) foo7) foo6) foo5) foo4) foo3) foo2) foo1
          ORDER BY foo1.city) foo0
  GROUP BY foo0.city
  ORDER BY foo0.city;

select * from view_with_deep_nested_CTE order by city LIMIT 20;
   avg   |         city         
---------+----------------------
  243825 | Aachen
  161161 | Aalborg
  298900 | Aba
  206073 | Abadan
  169200 | Abakan
  427400 | Abeokuta
  213070 | Aberdeen
 2500000 | Abidjan
  398695 | Abu Dhabi
  350100 | Abuja
  721011 | Acapulco de Juarez
  158954 | Acarigua
 1070000 | Accra
  197595 | Acheng
  243402 | A Coruaa (La Coruaa)
 1131198 | Adana
 2495000 | Addis Abeba
  978100 | Adelaide
  398300 | Aden
  359400 | Ado-Ekiti
(20 rows)

select * from view_with_deep_nested_CTE where avg > 2000000 order by city LIMIT 20;
   avg   |        city        
---------+--------------------
 2500000 | Abidjan
 2495000 | Addis Abeba
 2876710 | Ahmedabad
 3328196 | Alexandria
 2168000 | Alger
 3038159 | Ankara
 4336000 | Baghdad
 2429000 | Bandung
 2660088 | Bangalore
 6320174 | Bangkok
 2139125 | Belo Horizonte
 3386667 | Berlin
 2016131 | Bucuresti
 2982146 | Buenos Aires
 6789479 | Cairo
 4399819 | Calcutta [Kolkata]
 2077386 | Cali
 2352121 | Cape Town
 2940623 | Casablanca
 2812000 | Changchun
(20 rows)

drop view view_with_deep_nested_CTE;
DROP VIEW
