drop table if exists test;
NOTICE:  table "test" does not exist, skipping
DROP TABLE
create table test (a integer);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into test select a from generate_series(1,100) a;
INSERT 0 100
set log_min_messages=debug5;
SET
EXPLAIN ANALYZE select count(*) from test;
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5.33..5.34 rows=1 width=0)
   Rows out:  1 rows with 5.327 ms to end, start offset by 1.500 ms.
   ->  Gather Motion 4:1  (slice1; segments: 4)  (cost=5.25..5.31 rows=1 width=0)
         Rows out:  4 rows at destination with 2.222 ms to first row, 5.311 ms to end, start offset by 1.502 ms.
         ->  Aggregate  (cost=5.25..5.26 rows=1 width=0)
               Rows out:  Avg 1.0 rows x 4 workers.  Max 1 rows (seg0) with 0.048 ms to end, start offset by 3.435 ms.
               ->  Seq Scan on test  (cost=0.00..5.00 rows=25 width=0)
                     Rows out:  Avg 25.0 rows x 4 workers.  Max 25 rows (seg0) with 0.033 ms to first row, 0.042 ms to end, start offset by 3.435 ms.
 Slice statistics:
   (slice0)    Executor memory: 261K bytes.
   (slice1)    Executor memory: 168K bytes avg x 4 workers, 168K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Total runtime: 7.576 ms
(14 rows)

set debug_print_slice_table=on;
SET
select count(*) from test;
 count 
-------
   100
(1 row)

--FOR UPDATE/FOR SHARE
select * from test order by a limit 1 for update;
 a 
---
 1
(1 row)

select * from test order by a limit 1 for share;
 a 
---
 1
(1 row)

--returning clause
insert into test values (1) returning *;
ERROR:  The RETURNING clause of the INSERT statement is not supported in this version of Greenplum Database.
