-- 
-- @created 2014-05-20 12:00:00
-- @modified 2014-05-20 12:00:00
-- @tags storage
-- @description AOCO table : drop all column one by one then add new col
DROP TABLE IF EXISTS foo;
DROP TABLE
CREATE TABLE foo (a INT, b INT, c CHAR(128)) WITH (appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE INDEX foo_index ON foo(b);
CREATE INDEX
INSERT INTO foo SELECT i as a, i as b, 'hello world' as c FROM generate_series(1,500) AS i;
INSERT 0 500
INSERT INTO foo SELECT i as a, i as b, 'hello world again' as c FROM generate_series(501,900) AS i;
INSERT 0 400
select count(*) from foo ;
 count 
-------
   900
(1 row)

ALTER TABLE foo DROP COLUMN c;
ALTER TABLE
select count(*) as c from pg_attribute pa, pg_class pc where pa.attrelid = pc.oid and pc.relname='foo' and attname='c';
 c 
---
 0
(1 row)

select count(*) from foo ;
 count 
-------
   900
(1 row)

ALTER TABLE foo DROP COLUMN b;
ALTER TABLE
select count(*) as b from pg_attribute pa, pg_class pc where pa.attrelid = pc.oid and pc.relname='foo' and attname='b';
 b 
---
 0
(1 row)

select count(*) from foo;
 count 
-------
   900
(1 row)

ALTER TABLE foo DROP COLUMN a;
psql:/path/sql_file:1: NOTICE:  Dropping a column that is part of the distribution policy forces a NULL distribution policy
ALTER TABLE
select count(*) as a from pg_attribute pa, pg_class pc where pa.attrelid = pc.oid and pc.relname='foo' and attname='a';
 a 
---
 0
(1 row)

select count(*) from foo;
 count 
-------
   900
(1 row)

ALTER TABLE foo ADD COLUMN a1 int default 10;
ALTER TABLE
select count(*) as a from pg_attribute pa, pg_class pc where pa.attrelid = pc.oid and pc.relname='foo' and attname='a';
 a 
---
 0
(1 row)

select count(*) from foo;
 count 
-------
   900
(1 row)

vacuum foo;
VACUUM
select count(*) from foo;
 count 
-------
   900
(1 row)

