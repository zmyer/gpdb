<?xml version="1.0"?>
<test>
    <!-- 
         We perform checkpoint just before the crash, so that xlog's backup
         block doesn't restore the pages that are truncated before the crash.
    -->
    <sql>
        <pre><![CDATA[
drop table if exists vacuum_full_large_partition_heap, vacuum_full_large_partition_ao, vacuum_full_large_partition_co;
create table vacuum_full_large_partition_heap(a int, b int,
c0 int,
c1 int,
c2 int,
c3 int,
c4 int,
c5 int,
c6 int,
c7 int,
c8 int,
c9 int,
c10 int,
c11 int,
c12 int,
c13 int,
c14 int,
c15 int,
c16 int,
c17 int,
c18 int,
c19 int,
c20 int,
c21 int,
c22 int,
c23 int,
c24 int,
c25 int,
c26 int,
c27 int,
c28 int,
c29 int,
c30 int,
c31 int,
c32 int,
c33 int,
c34 int,
c35 int,
c36 int,
c37 int,
c38 int,
c39 int,
c40 int,
c41 int,
c42 int,
c43 int,
c44 int,
c45 int,
c46 int,
c47 int,
c48 int,
c49 int,
c50 int,
c51 int,
c52 int,
c53 int,
c54 int,
c55 int,
c56 int,
c57 int,
c58 int,
c59 int,
c60 int,
c61 int,
c62 int,
c63 int,
c64 int,
c65 int,
c66 int,
c67 int,
c68 int,
c69 int,
c70 int,
c71 int,
c72 int,
c73 int,
c74 int,
c75 int,
c76 int,
c77 int,
c78 int,
c79 int,
c80 int,
c81 int,
c82 int,
c83 int,
c84 int,
c85 int,
c86 int,
c87 int,
c88 int,
c89 int,
c90 int,
c91 int,
c92 int,
c93 int,
c94 int,
c95 int,
c96 int,
c97 int,
c98 int,
c99 int,
c100 int
)
partition by range(b) (start (1) end (100) every (1));

create table vacuum_full_large_partition_ao(like vacuum_full_large_partition_heap)
partition by range(b) (start (1) end (100) every (1));

create table vacuum_full_large_partition_co(like vacuum_full_large_partition_heap)
partition by range(b) (start (1) end (100) every (1));

-- again, to delete catalog rows
drop table if exists vacuum_full_large_partition_heap, vacuum_full_large_partition_ao, vacuum_full_large_partition_co;
create table vacuum_full_large_partition_heap(a int, b int,
c0 int,
c1 int,
c2 int,
c3 int,
c4 int,
c5 int,
c6 int,
c7 int,
c8 int,
c9 int,
c10 int,
c11 int,
c12 int,
c13 int,
c14 int,
c15 int,
c16 int,
c17 int,
c18 int,
c19 int,
c20 int,
c21 int,
c22 int,
c23 int,
c24 int,
c25 int,
c26 int,
c27 int,
c28 int,
c29 int,
c30 int,
c31 int,
c32 int,
c33 int,
c34 int,
c35 int,
c36 int,
c37 int,
c38 int,
c39 int,
c40 int,
c41 int,
c42 int,
c43 int,
c44 int,
c45 int,
c46 int,
c47 int,
c48 int,
c49 int,
c50 int,
c51 int,
c52 int,
c53 int,
c54 int,
c55 int,
c56 int,
c57 int,
c58 int,
c59 int,
c60 int,
c61 int,
c62 int,
c63 int,
c64 int,
c65 int,
c66 int,
c67 int,
c68 int,
c69 int,
c70 int,
c71 int,
c72 int,
c73 int,
c74 int,
c75 int,
c76 int,
c77 int,
c78 int,
c79 int,
c80 int,
c81 int,
c82 int,
c83 int,
c84 int,
c85 int,
c86 int,
c87 int,
c88 int,
c89 int,
c90 int,
c91 int,
c92 int,
c93 int,
c94 int,
c95 int,
c96 int,
c97 int,
c98 int,
c99 int,
c100 int
)
partition by range(b) (start (1) end (100) every (1));

insert into vacuum_full_large_partition_heap(a, b) select 1, i from generate_series(1, 99)i;


create table vacuum_full_large_partition_ao(like vacuum_full_large_partition_heap)
partition by range(b) (start (1) end (100) every (1));

insert into vacuum_full_large_partition_ao(a, b) select 1, i from generate_series(1, 99)i;

create table vacuum_full_large_partition_co(like vacuum_full_large_partition_heap)
partition by range(b) (start (1) end (100) every (1));

insert into vacuum_full_large_partition_co(a, b) select 1, i from generate_series(1, 99)i;

            ]]></pre>
        <trigger><![CDATA[
vacuum full pg_attribute;
            ]]></trigger>
        <post><![CDATA[
select count(*) from vacuum_full_large_partition_heap;
select count(*) from vacuum_full_large_partition_ao;
select count(*) from vacuum_full_large_partition_co;

select b from vacuum_full_large_partition_heap where b = 10;
select b from vacuum_full_large_partition_ao where b = 10;
select b from vacuum_full_large_partition_co where b = 10;
            ]]></post>
    </sql>
    <ans>
        <pre><![CDATA[
drop table if exists vacuum_full_large_partition_heap, vacuum_full_large_partition_ao, vacuum_full_large_partition_co;
DROP TABLE
create table vacuum_full_large_partition_heap(a int, b int,
c0 int,
c1 int,
c2 int,
c3 int,
c4 int,
c5 int,
c6 int,
c7 int,
c8 int,
c9 int,
c10 int,
c11 int,
c12 int,
c13 int,
c14 int,
c15 int,
c16 int,
c17 int,
c18 int,
c19 int,
c20 int,
c21 int,
c22 int,
c23 int,
c24 int,
c25 int,
c26 int,
c27 int,
c28 int,
c29 int,
c30 int,
c31 int,
c32 int,
c33 int,
c34 int,
c35 int,
c36 int,
c37 int,
c38 int,
c39 int,
c40 int,
c41 int,
c42 int,
c43 int,
c44 int,
c45 int,
c46 int,
c47 int,
c48 int,
c49 int,
c50 int,
c51 int,
c52 int,
c53 int,
c54 int,
c55 int,
c56 int,
c57 int,
c58 int,
c59 int,
c60 int,
c61 int,
c62 int,
c63 int,
c64 int,
c65 int,
c66 int,
c67 int,
c68 int,
c69 int,
c70 int,
c71 int,
c72 int,
c73 int,
c74 int,
c75 int,
c76 int,
c77 int,
c78 int,
c79 int,
c80 int,
c81 int,
c82 int,
c83 int,
c84 int,
c85 int,
c86 int,
c87 int,
c88 int,
c89 int,
c90 int,
c91 int,
c92 int,
c93 int,
c94 int,
c95 int,
c96 int,
c97 int,
c98 int,
c99 int,
c100 int
)
partition by range(b) (start (1) end (100) every (1));
CREATE TABLE
create table vacuum_full_large_partition_ao(like vacuum_full_large_partition_heap)
partition by range(b) (start (1) end (100) every (1));
CREATE TABLE
create table vacuum_full_large_partition_co(like vacuum_full_large_partition_heap)
partition by range(b) (start (1) end (100) every (1));
CREATE TABLE
-- again, to delete catalog rows
drop table if exists vacuum_full_large_partition_heap, vacuum_full_large_partition_ao, vacuum_full_large_partition_co;
DROP TABLE
create table vacuum_full_large_partition_heap(a int, b int,
c0 int,
c1 int,
c2 int,
c3 int,
c4 int,
c5 int,
c6 int,
c7 int,
c8 int,
c9 int,
c10 int,
c11 int,
c12 int,
c13 int,
c14 int,
c15 int,
c16 int,
c17 int,
c18 int,
c19 int,
c20 int,
c21 int,
c22 int,
c23 int,
c24 int,
c25 int,
c26 int,
c27 int,
c28 int,
c29 int,
c30 int,
c31 int,
c32 int,
c33 int,
c34 int,
c35 int,
c36 int,
c37 int,
c38 int,
c39 int,
c40 int,
c41 int,
c42 int,
c43 int,
c44 int,
c45 int,
c46 int,
c47 int,
c48 int,
c49 int,
c50 int,
c51 int,
c52 int,
c53 int,
c54 int,
c55 int,
c56 int,
c57 int,
c58 int,
c59 int,
c60 int,
c61 int,
c62 int,
c63 int,
c64 int,
c65 int,
c66 int,
c67 int,
c68 int,
c69 int,
c70 int,
c71 int,
c72 int,
c73 int,
c74 int,
c75 int,
c76 int,
c77 int,
c78 int,
c79 int,
c80 int,
c81 int,
c82 int,
c83 int,
c84 int,
c85 int,
c86 int,
c87 int,
c88 int,
c89 int,
c90 int,
c91 int,
c92 int,
c93 int,
c94 int,
c95 int,
c96 int,
c97 int,
c98 int,
c99 int,
c100 int
)
partition by range(b) (start (1) end (100) every (1));
CREATE TABLE
insert into vacuum_full_large_partition_heap(a, b) select 1, i from generate_series(1, 99)i;
INSERT 0 99
create table vacuum_full_large_partition_ao(like vacuum_full_large_partition_heap)
partition by range(b) (start (1) end (100) every (1));
CREATE TABLE
insert into vacuum_full_large_partition_ao(a, b) select 1, i from generate_series(1, 99)i;
INSERT 0 99
create table vacuum_full_large_partition_co(like vacuum_full_large_partition_heap)
partition by range(b) (start (1) end (100) every (1));
CREATE TABLE
insert into vacuum_full_large_partition_co(a, b) select 1, i from generate_series(1, 99)i;
INSERT 0 99
            ]]></pre>
        <trigger><![CDATA[
vacuum full pg_attribute;
ERROR:  fault triggered, fault name:'repair_frag_end' fault type:'error'
        ]]></trigger>
        <post><![CDATA[
select count(*) from vacuum_full_large_partition_heap;
 count 
-------
    99
(1 row)

select count(*) from vacuum_full_large_partition_ao;
 count 
-------
    99
(1 row)

select count(*) from vacuum_full_large_partition_co;
 count 
-------
    99
(1 row)

select b from vacuum_full_large_partition_heap where b = 10;
 b  
----
 10
(1 row)

select b from vacuum_full_large_partition_ao where b = 10;
 b  
----
 10
(1 row)

select b from vacuum_full_large_partition_co where b = 10;
 b  
----
 10
(1 row)

            ]]></post>
    </ans>
</test>
