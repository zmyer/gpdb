-- start_ignore
-- end_ignore
create table mpp8031 (oid integer,
odate timestamp without time zone,
cid integer)
PARTITION BY RANGE(odate)
(
PARTITION foo START ('2005-05-01 00:00:00'::timestamp
without time zone) END ('2005-07-01 00:00:00'::timestamp
without time zone) EVERY ('2 mons'::interval),
START ('2005-07-01 00:00:00'::timestamp without time zone)
END ('2006-01-01 00:00:00'::timestamp without time zone)
EVERY ('2 mons'::interval)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'oid' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "mpp8031_1_prt_foo" for table "mpp8031"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "mpp8031_1_prt_2" for table "mpp8031"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "mpp8031_1_prt_3" for table "mpp8031"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "mpp8031_1_prt_4" for table "mpp8031"
CREATE TABLE
explain analyze select a.* from mpp8031 a, mpp8031 b where a.oid = b.oid;
                                                    QUERY PLAN                                                     
-------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..862.00 rows=1 width=24)
   Rows out:  0 rows at destination with 7.284 ms to end, start offset by 0.381 ms.
   ->  Hash Join  (cost=0.00..862.00 rows=1 width=24)
         Hash Cond: public.mpp8031.oid = public.mpp8031.oid
         Rows out:  0 rows (seg0) with 5.930 ms to end, start offset by 0.868 ms.
         ->  Sequence  (cost=0.00..431.00 rows=1 width=24)
               Rows out:  (No row requested) 0 rows (seg0) with 0 ms to end.
               ->  Partition Selector for mpp8031 (dynamic scan id: 1)  (cost=10.00..100.00 rows=50 width=4)
                     Partitions selected:  4 (out of 4)
                     Rows out:  (No row requested) 0 rows (seg0) with 0 ms to end.
               ->  Dynamic Table Scan on mpp8031 (dynamic scan id: 1)  (cost=0.00..431.00 rows=1 width=24)
                     Rows out:  (No row requested) 0 rows (seg0) with 0 ms to end.
                     Partitions scanned:  0 (out of 4).
         ->  Hash  (cost=431.00..431.00 rows=1 width=8)
               Rows in:  0 rows (seg0) with 0.650 ms to end, start offset by 5.684 ms.
               ->  Sequence  (cost=0.00..431.00 rows=1 width=8)
                     Rows out:  0 rows (seg0) with 0.650 ms to end, start offset by 5.684 ms.
                     ->  Partition Selector for mpp8031 (dynamic scan id: 2)  (cost=10.00..100.00 rows=50 width=4)
                           Partitions selected:  4 (out of 4)
                           Rows out:  0 rows (seg0) with 0.013 ms to end, start offset by 5.685 ms.
                     ->  Dynamic Table Scan on mpp8031 (dynamic scan id: 2)  (cost=0.00..431.00 rows=1 width=8)
                           Rows out:  0 rows (seg0) with 0.634 ms to end, start offset by 5.699 ms.
                           Partitions scanned:  Avg 4.0 (out of 4) x 2 workers.  Max 4 parts (seg0).
 Slice statistics:
   (slice0)    Executor memory: 147K bytes.
   (slice1)    Executor memory: 8481K bytes avg x 2 workers, 8481K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  optimizer=on
 Total runtime: 7.768 ms
(30 rows)

drop table mpp8031;
DROP TABLE
