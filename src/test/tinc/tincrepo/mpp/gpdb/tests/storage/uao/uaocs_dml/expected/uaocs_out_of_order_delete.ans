-- @Description Out of order Update (MPP-21146)
-- 
-- scenario 1
drop table if exists uaocs_ooo_del_tab1;
psql:/path/sql_file:1: NOTICE:  table "uaocs_ooo_del_tab1" does not exist, skipping
DROP TABLE
create table uaocs_ooo_del_tab1 (i int, j int ) with (appendonly=true , orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
drop table if exists uaocs_ooo_del_tab2;
psql:/path/sql_file:1: NOTICE:  table "uaocs_ooo_del_tab2" does not exist, skipping
DROP TABLE
create table uaocs_ooo_del_tab2 (i int, j int )  with (appendonly=true , orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into  uaocs_ooo_del_tab1 values (1,10);
INSERT 0 1
insert  into uaocs_ooo_del_tab2 values (1,11),(1,22);
INSERT 0 2
select * from uaocs_ooo_del_tab1 order by 2;
 i | j  
---+----
 1 | 10
(1 row)

select * from uaocs_ooo_del_tab2 order by 2;
 i | j  
---+----
 1 | 11
 1 | 22
(2 rows)

delete from uaocs_ooo_del_tab1 using uaocs_ooo_del_tab2 where uaocs_ooo_del_tab1.i = uaocs_ooo_del_tab2.i;
DELETE 1
select count(*) from uaocs_ooo_del_tab2 ;
 count 
-------
     2
(1 row)

select count(*) from uaocs_ooo_del_tab1 ;
 count 
-------
     0
(1 row)

set gp_select_invisible = true;
SET
select count(*) from uaocs_ooo_del_tab1 ;
 count 
-------
     1
(1 row)

set gp_select_invisible = false;
SET
-- scenario 2
drop table if exists uaocs_ooo_del_tab1;
DROP TABLE
create table uaocs_ooo_del_tab1 (i int, j int ) with (appendonly=true , orientation=column);;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
drop table if exists uaocs_ooo_del_tab2;
DROP TABLE
create table uaocs_ooo_del_tab2 (i int, j int ) with (appendonly=true , orientation=column); ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into  uaocs_ooo_del_tab1 values (1,10) ,(1,0) ;
INSERT 0 2
update uaocs_ooo_del_tab1 set j = j + 2 where j = 0;
UPDATE 1
update uaocs_ooo_del_tab1 set j = j + 3 where j = 10;
UPDATE 1
insert  into uaocs_ooo_del_tab2 values (1,11),(1,22),(1,33),(1,44),(1,55) ;
INSERT 0 5
update uaocs_ooo_del_tab2 set j = j + 1 where j = 11;
UPDATE 1
update uaocs_ooo_del_tab2 set j = j + 2 where j = 22;
UPDATE 1
select * from uaocs_ooo_del_tab1 order by 2;
 i | j  
---+----
 1 |  2
 1 | 13
(2 rows)

select * from uaocs_ooo_del_tab2 order by 2;
 i | j  
---+----
 1 | 12
 1 | 24
 1 | 33
 1 | 44
 1 | 55
(5 rows)

delete from uaocs_ooo_del_tab1 using uaocs_ooo_del_tab2 where uaocs_ooo_del_tab1.i = uaocs_ooo_del_tab2.i;
DELETE 2
select count(*) from uaocs_ooo_del_tab2 ;
 count 
-------
     5
(1 row)

select count(*) from uaocs_ooo_del_tab1 ;
 count 
-------
     0
(1 row)

set gp_select_invisible = true;
SET
select count(*) from uaocs_ooo_del_tab1 ;
 count 
-------
     4
(1 row)

set gp_select_invisible = false;
SET
vacuum uaocs_ooo_del_tab1;
VACUUM
set gp_select_invisible = true;
SET
select count(*) from uaocs_ooo_del_tab1 ;
 count 
-------
     0
(1 row)

set gp_select_invisible = false;
SET
-- scenario 3
drop table if exists uaocs_ooo_upd_tab1;
DROP TABLE
create table uaocs_ooo_upd_tab1 (i int, j int ) with (appendonly=true , orientation=column) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
drop table if exists uaocs_ooo_upd_tab2;
DROP TABLE
create table uaocs_ooo_upd_tab2 (i int, j int ) with (appendonly=true , orientation=column) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into  uaocs_ooo_upd_tab1 values (1,10) ,(1,10) ;
INSERT 0 2
insert  into uaocs_ooo_upd_tab2 values (1,11),(1,22),(1,33),(1,44),(1,55)  ;
INSERT 0 5
BEGIN;
BEGIN
update uaocs_ooo_upd_tab1 set j = j + 3 where j = 10;
UPDATE 2
select * from uaocs_ooo_upd_tab1 order by 2;
 i | j  
---+----
 1 | 13
 1 | 13
(2 rows)

select * from uaocs_ooo_upd_tab2 order by 2;
 i | j  
---+----
 1 | 11
 1 | 22
 1 | 33
 1 | 44
 1 | 55
(5 rows)

delete from uaocs_ooo_del_tab1 using uaocs_ooo_del_tab2 where uaocs_ooo_del_tab1.i = uaocs_ooo_del_tab2.i;
DELETE 0
select count(*) from uaocs_ooo_upd_tab2 ;
 count 
-------
     5
(1 row)

select count(*) from uaocs_ooo_upd_tab1 ;
 count 
-------
     2
(1 row)

select * from uaocs_ooo_upd_tab1 order by 2;
 i | j  
---+----
 1 | 13
 1 | 13
(2 rows)

ROLLBACK;
ROLLBACK
set gp_select_invisible = true;
SET
select count(*) from uaocs_ooo_upd_tab1 ;
 count 
-------
     2
(1 row)

select * from uaocs_ooo_upd_tab1 order by 2;
 i | j  
---+----
 1 | 10
 1 | 10
(2 rows)

set gp_select_invisible = false;
SET
vacuum uaocs_ooo_upd_tab1;
VACUUM
set gp_select_invisible = true;
SET
select count(*) from uaocs_ooo_upd_tab1 ;
 count 
-------
     2
(1 row)

set gp_select_invisible = false;
SET
