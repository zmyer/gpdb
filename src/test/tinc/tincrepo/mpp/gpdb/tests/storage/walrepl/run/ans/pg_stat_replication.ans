---
--- @tags sanity
---
CREATE TABLE statrepl(a int, b bigint, c text)
    PARTITION BY RANGE(b) (
        START (1) END (10) EVERY (1));
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "statrepl_1_prt_1" for table "statrepl"
NOTICE:  CREATE TABLE will create partition "statrepl_1_prt_2" for table "statrepl"
NOTICE:  CREATE TABLE will create partition "statrepl_1_prt_3" for table "statrepl"
NOTICE:  CREATE TABLE will create partition "statrepl_1_prt_4" for table "statrepl"
NOTICE:  CREATE TABLE will create partition "statrepl_1_prt_5" for table "statrepl"
NOTICE:  CREATE TABLE will create partition "statrepl_1_prt_6" for table "statrepl"
NOTICE:  CREATE TABLE will create partition "statrepl_1_prt_7" for table "statrepl"
NOTICE:  CREATE TABLE will create partition "statrepl_1_prt_8" for table "statrepl"
NOTICE:  CREATE TABLE will create partition "statrepl_1_prt_9" for table "statrepl"
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
CREATE TABLE
-- each location should not go beyond the previous one,
-- and a record should present while a standby is running.
SELECT
    sent_location >= write_location AS write_follows_sent,
    write_location >= flush_location AS flush_follows_write,
    flush_location >= replay_location AS replay_follows_flush
FROM pg_stat_replication;
 write_follows_sent | flush_follows_write | replay_follows_flush 
--------------------+---------------------+----------------------
 t                  | t                   | t
(1 row)

