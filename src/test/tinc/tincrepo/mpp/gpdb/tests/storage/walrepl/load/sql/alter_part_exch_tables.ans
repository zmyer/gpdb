-- @Description Alter echange partitions Heap/AO and CO

-- Heap partition table to be exchaged
--start_ignore
Drop table if exists sto_althe1 ;
DROP TABLE
--end_ignore
Create table sto_althe1 ( a1 int, a2 int, a3 text) partition by range(a1) 
        (partition p1 start(1) end(5),
        partition p2 start(5) end(10),
        partition p3 start(10) end(15),
        default partition others);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_althe1_1_prt_others" for table "sto_althe1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_althe1_1_prt_p1" for table "sto_althe1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_althe1_1_prt_p2" for table "sto_althe1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_althe1_1_prt_p3" for table "sto_althe1"
CREATE TABLE
    
insert into sto_althe1 values(generate_series(1,20), 100, 'heap table to be exchanged');
INSERT 0 20
-- AO partition table to be exchnged
--start_ignore
Drop table if exists sto_altae1 ;
DROP TABLE
--end_ignore
Create table sto_altae1 ( a1 int, a2 int, a3 text) with(appendonly=true)  partition by range(a1) 
        (partition p1 start(1) end(5),
        partition p2 start(5) end(10),
        partition p3 start(10) end(15),
        default partition others);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_altae1_1_prt_others" for table "sto_altae1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_altae1_1_prt_p1" for table "sto_altae1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_altae1_1_prt_p2" for table "sto_altae1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_altae1_1_prt_p3" for table "sto_altae1"
CREATE TABLE
    
insert into sto_altae1 values(generate_series(1,20), 100, 'ao table to be exchanged');
INSERT 0 20
-- CO partition table to be exchanged
--start_ignore
Drop table if exists sto_altce1 ;
DROP TABLE
--end_ignore
Create table sto_altce1 ( a1 int, a2 int, a3 text) with(appendonly=true, orientation=column) partition by range(a1) 
        (partition p1 start(1) end(5),
        partition p2 start(5) end(10),
        partition p3 start(10) end(15),
        default partition others);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_altce1_1_prt_others" for table "sto_altce1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_altce1_1_prt_p1" for table "sto_altce1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_altce1_1_prt_p2" for table "sto_altce1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sto_altce1_1_prt_p3" for table "sto_altce1"
CREATE TABLE
    
insert into sto_altce1 values(generate_series(1,20), 100, 'co table to be exchanged');
INSERT 0 20
-- Exchange with Heap table
--start_ignore
Drop table if exists sto_eh_ao;
DROP TABLE
--end_ignore
Create table sto_eh_ao(a1 int, a2 int, a3 text) with(appendonly=true);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into sto_eh_ao values(6,100,'ao table');
INSERT 0 1
--start_ignore
Drop table if exists sto_eh_co;
DROP TABLE
--end_ignore
Create table sto_eh_co(a1 int, a2 int, a3 text) with(appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into sto_eh_co values(12,100,'co table');
INSERT 0 1
--start_ignore
Drop table if exists sto_eh_def;
DROP TABLE
--end_ignore
Create table sto_eh_def(a1 int, a2 int, a3 text) with(appendonly=true);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into sto_eh_def values(17,100,'ao table');
INSERT 0 1
--Alter exchange heep default part with ao table
Alter table sto_althe1 exchange default partition with table sto_eh_def;
psql:/path/sql_file:1: NOTICE:  exchanged partition "others" of relation "sto_althe1" with relation "sto_eh_def"
ALTER TABLE
-- Alter exchange heap part with ao table
Alter table sto_althe1 exchange partition p2 with table sto_eh_ao;
ALTER TABLE
-- Alter exchange heap part with co table
Alter table sto_althe1 exchange partition p3 with table sto_eh_co;
ALTER TABLE
select * from sto_althe1 order by a1;
 a1 | a2  |             a3             
----+-----+----------------------------
  1 | 100 | heap table to be exchanged
  2 | 100 | heap table to be exchanged
  3 | 100 | heap table to be exchanged
  4 | 100 | heap table to be exchanged
  6 | 100 | ao table
 12 | 100 | co table
 17 | 100 | ao table
(7 rows)

-- Exchange with AO table
--start_ignore
Drop table if exists sto_ea_heap;
DROP TABLE
--end_ignore
Create table sto_ea_heap(a1 int, a2 int, a3 text);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into sto_ea_heap values(3,100,'heap table');
INSERT 0 1
--start_ignore
Drop table if exists sto_ea_co;
DROP TABLE
--end_ignore
Create table sto_ea_co(a1 int, a2 int, a3 text) with(appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into sto_ea_co values(12,100,'co table');
INSERT 0 1
--start_ignore
Drop table if exists sto_ea_def;
DROP TABLE
--end_ignore
Create table sto_ea_def(a1 int, a2 int, a3 text) with(appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into sto_ea_def values(17,100,'co table');
INSERT 0 1
--Alter exchange ao default part with co table
Alter table sto_altae1 exchange default partition with table sto_ea_def;
psql:/path/sql_file:1: NOTICE:  exchanged partition "others" of relation "sto_altae1" with relation "sto_ea_def"
ALTER TABLE
-- Alter exchange ao part with heap table
Alter table sto_altae1 exchange partition p1 with table sto_ea_heap;
ALTER TABLE
-- Alter exchange ao part with co table
Alter table sto_altae1 exchange partition p3 with table sto_ea_co;
ALTER TABLE
select * from sto_altae1 order by a1;
 a1 | a2  |            a3            
----+-----+--------------------------
  3 | 100 | heap table
  5 | 100 | ao table to be exchanged
  6 | 100 | ao table to be exchanged
  7 | 100 | ao table to be exchanged
  8 | 100 | ao table to be exchanged
  9 | 100 | ao table to be exchanged
 12 | 100 | co table
 17 | 100 | co table
(8 rows)

-- Exchange with CO table
--start_ignore
Drop table if exists sto_ec_heap;
DROP TABLE
--end_ignore
Create table sto_ec_heap(a1 int, a2 int, a3 text);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into sto_ec_heap values(3,100,'heap table');
INSERT 0 1
--start_ignore
Drop table if exists sto_ec_ao;
DROP TABLE
--end_ignore
Create table sto_ec_ao(a1 int, a2 int, a3 text) with(appendonly=true);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into sto_ec_ao values(12,100,'co table');
INSERT 0 1
--start_ignore
Drop table if exists sto_ec_def;
DROP TABLE
--end_ignore
Create table sto_ec_def(a1 int, a2 int, a3 text);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
insert into sto_ec_def values(17,100,'co table');
INSERT 0 1
--Alter exchange ao default part with heap table
Alter table sto_altce1 exchange default partition with table sto_ec_def;
psql:/path/sql_file:1: NOTICE:  exchanged partition "others" of relation "sto_altce1" with relation "sto_ec_def"
ALTER TABLE
-- Alter exchange co part with heap table
Alter table sto_altce1 exchange partition p1 with table sto_ec_heap;
ALTER TABLE
-- Alter exchange co part with ao table
Alter table sto_altce1 exchange partition p3 with table sto_ec_ao;
ALTER TABLE
select * from sto_altce1 order by a1;
 a1 | a2  |            a3            
----+-----+--------------------------
  3 | 100 | heap table
  5 | 100 | co table to be exchanged
  6 | 100 | co table to be exchanged
  7 | 100 | co table to be exchanged
  8 | 100 | co table to be exchanged
  9 | 100 | co table to be exchanged
 12 | 100 | co table
 17 | 100 | co table
(8 rows)

