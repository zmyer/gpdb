-- start_ignore
DROP FUNCTION subt_insertValue(integer);
psql:/path/sql_file:1: ERROR:  function subt_insertvalue(integer) does not exist
-- end_ignore

CREATE OR REPLACE FUNCTION subt_insertValue (inp INTEGER) RETURNS VOID
AS
$$
DECLARE
BEGIN
    EXECUTE 'INSERT INTO subt_plpgsql_t1(a) VALUES (' || inp || ');';
EXCEPTION
    WHEN others THEN
    RAISE NOTICE 'Error in data';
END;
$$
LANGUAGE PLPGSQL
;
CREATE FUNCTION

-- start_ignore
DROP FUNCTION subt_inData(integer,integer);
psql:/path/sql_file:1: ERROR:  function subt_indata(integer, integer) does not exist
-- end_ignore

CREATE OR REPLACE FUNCTION subt_inData (startValue INTEGER, endValue INTEGER) RETURNS VOID
AS
$$
DECLARE
   i INTEGER;
BEGIN
   i = startValue;
   WHILE i <= endValue LOOP
       PERFORM subt_insertValue(100);
       i = i + 1;
   END LOOP;
END;
$$
LANGUAGE PLPGSQL
;
CREATE FUNCTION

-- start_ignore
drop table if exists subt_plpgsql_t1;
psql:/path/sql_file:1: NOTICE:  table "subt_plpgsql_t1" does not exist, skipping
DROP TABLE
-- end_ignore

create table subt_plpgsql_t1(a int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
select subt_inData(1,105);
 subt_indata 
-------------
 
(1 row)

select count(*) from subt_plpgsql_t1;
 count 
-------
   105
(1 row)
