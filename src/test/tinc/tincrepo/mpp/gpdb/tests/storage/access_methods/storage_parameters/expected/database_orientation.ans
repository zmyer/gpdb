-- 
-- @description Guc setting at database level for orientation
-- Guc value orientation=column (with appendonly=true)
Alter database dsp_db1 set gp_default_storage_options="appendonly=true, orientation=column";
ALTER DATABASE
Select datconfig from pg_database where datname='dsp_db1';
                             datconfig                              
--------------------------------------------------------------------
 {"gp_default_storage_options=appendonly=true, orientation=column"}
(1 row)

\c dsp_db1
You are now connected to database "dsp_db1" as user "sivand".
show gp_default_storage_options;
                             gp_default_storage_options                             
------------------------------------------------------------------------------------
 appendonly=true,blocksize=32768,compresstype=none,checksum=true,orientation=column
(1 row)

-- Create table with no options
Drop table if exists ao_db_or_t1;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t1" does not exist, skipping
DROP TABLE
Create table ao_db_or_t1 ( i int, j int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Create index or_t1_ix on ao_db_or_t1(i);
CREATE INDEX
Insert into ao_db_or_t1 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
update ao_db_or_t1 set j=i where i>5;
UPDATE 5
Delete from ao_db_or_t1 where i<2;
DELETE 1
Select count(*) from ao_db_or_t1;
 count 
-------
     9
(1 row)

\d+ ao_db_or_t1;
                             Append-Only Columnar Table "public.ao_db_or_t1"
 Column |  Type   | Modifiers | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+-----------+---------+------------------+-------------------+------------+-------------
 i      | integer |           | plain   | none             | 0                 | 32768      | 
 j      | integer |           | plain   | none             | 0                 | 32768      | 
Checksum: t
Indexes:
    "or_t1_ix" btree (i)
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_db_or_t1';
 relkind | relstorage |              reloptions              
---------+------------+--------------------------------------
 r       | c          | {appendonly=true,orientation=column}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_db_or_t1');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 |              |     32768 | t        | t
(1 row)

Drop table ao_db_or_t1;
DROP TABLE
-- Create table with orientation=column
Drop table if exists ao_db_or_t2;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t2" does not exist, skipping
DROP TABLE
Create table ao_db_or_t2 ( i int, j int) with(orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_db_or_t2 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_db_or_t2;
 count 
-------
    10
(1 row)

\d+ ao_db_or_t2;
                             Append-Only Columnar Table "public.ao_db_or_t2"
 Column |  Type   | Modifiers | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+-----------+---------+------------------+-------------------+------------+-------------
 i      | integer |           | plain   | none             | 0                 | 32768      | 
 j      | integer |           | plain   | none             | 0                 | 32768      | 
Checksum: t
Has OIDs: no
Options: orientation=column, appendonly=true
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_db_or_t2';
 relkind | relstorage |              reloptions              
---------+------------+--------------------------------------
 r       | c          | {orientation=column,appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_db_or_t2');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 |              |     32768 | t        | t
(1 row)

Drop table ao_db_or_t2;
DROP TABLE
-- Create table with orientation=row
Drop table if exists ao_db_or_t3;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t3" does not exist, skipping
DROP TABLE
Create table ao_db_or_t3 ( i int, j int) with(orientation=row);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_db_or_t3 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_db_or_t3;
 count 
-------
    10
(1 row)

\d+ ao_db_or_t3;
        Append-Only Table "public.ao_db_or_t3"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Compression Type: None
Compression Level: 0
Block Size: 32768
Checksum: t
Has OIDs: no
Options: orientation=row, appendonly=true
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t3';
 relkind | relstorage |            reloptions             
---------+------------+-----------------------------------
 r       | a          | {orientation=row,appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_db_or_t3');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 |              |     32768 | t        | f
(1 row)

Drop table ao_db_or_t3;
DROP TABLE
-- Create table with invalid value for orientation
Drop table if exists ao_db_or_t4;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t4" does not exist, skipping
DROP TABLE
Create table ao_db_or_t4 ( i int, j int) with(orientation=xxxx);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: ERROR:  invalid parameter value for "orientation": "xxxx"
-- Create table with tablelevel appendonly=false
Drop table if exists ao_db_or_t5;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t5" does not exist, skipping
DROP TABLE
Create table ao_db_or_t5( i int, j int) with(appendonly=false);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
\d+ ao_db_or_t5
              Table "public.ao_db_or_t5"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Has OIDs: no
Options: appendonly=false
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t5';
 relkind | relstorage |     reloptions     
---------+------------+--------------------
 r       | h          | {appendonly=false}
(1 row)

Drop table ao_db_or_t5;
DROP TABLE
-- ========================================
-- Set the database level guc orientation=row (with appendonly=true)
Alter database dsp_db2 set gp_default_storage_options="appendonly=true, orientation=row";
ALTER DATABASE
Select datconfig from pg_database where datname='dsp_db2';
                            datconfig                            
-----------------------------------------------------------------
 {"gp_default_storage_options=appendonly=true, orientation=row"}
(1 row)

\c dsp_db2
You are now connected to database "dsp_db2" as user "sivand".
show gp_default_storage_options;
                           gp_default_storage_options                            
---------------------------------------------------------------------------------
 appendonly=true,blocksize=32768,compresstype=none,checksum=true,orientation=row
(1 row)

-- Create table with no options
Drop table if exists ao_db_or_t1;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t1" does not exist, skipping
DROP TABLE
Create table ao_db_or_t1 ( i int, j int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_db_or_t1 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_db_or_t1;
 count 
-------
    10
(1 row)

\d+ ao_db_or_t1;
        Append-Only Table "public.ao_db_or_t1"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Compression Type: None
Compression Level: 0
Block Size: 32768
Checksum: t
Has OIDs: no
Options: appendonly=true
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t1';
 relkind | relstorage |    reloptions     
---------+------------+-------------------
 r       | a          | {appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_db_or_t1');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 |              |     32768 | t        | f
(1 row)

Alter table ao_db_or_t1 add column k int default 10;
ALTER TABLE
\d+ ao_db_or_t1;
        Append-Only Table "public.ao_db_or_t1"
 Column |  Type   | Modifiers  | Storage | Description 
--------+---------+------------+---------+-------------
 i      | integer |            | plain   | 
 j      | integer |            | plain   | 
 k      | integer | default 10 | plain   | 
Compression Type: None
Compression Level: 0
Block Size: 32768
Checksum: t
Has OIDs: no
Options: appendonly=true
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t1';
 relkind | relstorage |    reloptions     
---------+------------+-------------------
 r       | a          | {appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_db_or_t1');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 |              |     32768 | t        | f
(1 row)

Drop table ao_db_or_t1;
DROP TABLE
-- Create table with orientation=row
Drop table if exists ao_db_or_t2;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t2" does not exist, skipping
DROP TABLE
Create table ao_db_or_t2 ( i int, j int) with(orientation=row);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_db_or_t2 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_db_or_t2;
 count 
-------
    10
(1 row)

\d+ ao_db_or_t2;
        Append-Only Table "public.ao_db_or_t2"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Compression Type: None
Compression Level: 0
Block Size: 32768
Checksum: t
Has OIDs: no
Options: orientation=row, appendonly=true
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t2';
 relkind | relstorage |            reloptions             
---------+------------+-----------------------------------
 r       | a          | {orientation=row,appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_db_or_t2');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 |              |     32768 | t        | f
(1 row)

Drop table ao_db_or_t2;
DROP TABLE
-- Create table with orientation=column
Drop table if exists ao_db_or_t3;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t3" does not exist, skipping
DROP TABLE
Create table ao_db_or_t3 ( i int, j int) with(orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_db_or_t3 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_db_or_t3;
 count 
-------
    10
(1 row)

\d+ ao_db_or_t3;
                             Append-Only Columnar Table "public.ao_db_or_t3"
 Column |  Type   | Modifiers | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+-----------+---------+------------------+-------------------+------------+-------------
 i      | integer |           | plain   | none             | 0                 | 32768      | 
 j      | integer |           | plain   | none             | 0                 | 32768      | 
Checksum: t
Has OIDs: no
Options: orientation=column, appendonly=true
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t3';
 relkind | relstorage |              reloptions              
---------+------------+--------------------------------------
 r       | c          | {orientation=column,appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_db_or_t3');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 |              |     32768 | t        | t
(1 row)

Drop table ao_db_or_t3;
DROP TABLE
-- Create table with invalid value for orientation
Drop table if exists ao_db_or_t4;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t4" does not exist, skipping
DROP TABLE
Create table ao_db_or_t4 ( i int, j int) with(orientation=xxxx);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: ERROR:  invalid parameter value for "orientation": "xxxx"
-- Create table with tablelevel appendonly=false
Drop table if exists ao_db_or_t5;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t5" does not exist, skipping
DROP TABLE
Create table ao_db_or_t5( i int, j int) with(appendonly=false);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
\d+ ao_db_or_t5
              Table "public.ao_db_or_t5"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Has OIDs: no
Options: appendonly=false
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t5';
 relkind | relstorage |     reloptions     
---------+------------+--------------------
 r       | h          | {appendonly=false}
(1 row)

Alter table ao_db_or_t5 add column k int default 10;
ALTER TABLE
\d+ ao_db_or_t5
              Table "public.ao_db_or_t5"
 Column |  Type   | Modifiers  | Storage | Description 
--------+---------+------------+---------+-------------
 i      | integer |            | plain   | 
 j      | integer |            | plain   | 
 k      | integer | default 10 | plain   | 
Has OIDs: no
Options: appendonly=false
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t5';
 relkind | relstorage |     reloptions     
---------+------------+--------------------
 r       | h          | {appendonly=false}
(1 row)

Drop table ao_db_or_t5;
DROP TABLE
-- Create table with compresstype=rle_type
Drop table if exists ao_db_or_t6;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t6" does not exist, skipping
DROP TABLE
Create table ao_db_or_t6( i int, j int) with(compresstype=rle_type);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: ERROR:  rle_type cannot be used with Append Only relations row orientation
-- GUC with invalid value
Alter database dsp_db3 set gp_default_storage_options="appendonly=true,orientation=xxx";
psql:/path/sql_file:1: ERROR:  invalid value "xxx" for storage option "orientation"
-- GUC with appenonly=false
Alter database dsp_db3 set gp_default_storage_options="appendonly=false";
ALTER DATABASE
Select datconfig from pg_database where datname='dsp_db3';
                   datconfig                   
-----------------------------------------------
 {gp_default_storage_options=appendonly=false}
(1 row)

\c dsp_db3
You are now connected to database "dsp_db3" as user "sivand".
show gp_default_storage_options;
                            gp_default_storage_options                            
----------------------------------------------------------------------------------
 appendonly=false,blocksize=32768,compresstype=none,checksum=true,orientation=row
(1 row)

Drop table if exists ao_db_or_t6;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t6" does not exist, skipping
DROP TABLE
Create table ao_db_or_t6( i int, j int) with(orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: ERROR:  invalid option "orientation" for base relation. Only valid for Append Only relations
Drop table if exists ao_db_or_t7;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t7" does not exist, skipping
DROP TABLE
Create table ao_db_or_t7( i int, j int) with(orientation=row);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: ERROR:  invalid option "orientation" for base relation. Only valid for Append Only relations
-- Guc with no appendonly=true specified
Alter database dsp_db4 set gp_default_storage_options="orientation=column";
ALTER DATABASE
\c dsp_db4
You are now connected to database "dsp_db4" as user "sivand".
show gp_default_storage_options;
                             gp_default_storage_options                              
-------------------------------------------------------------------------------------
 appendonly=false,blocksize=32768,compresstype=none,checksum=true,orientation=column
(1 row)

-- With no option it will a heap table
Drop table if exists ao_db_or_t1;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t1" does not exist, skipping
DROP TABLE
Create table ao_db_or_t1( i int, j int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_db_or_t1 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_db_or_t1;
 count 
-------
    10
(1 row)

\d+ ao_db_or_t1;
              Table "public.ao_db_or_t1"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Has OIDs: no
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t1';
 relkind | relstorage | reloptions 
---------+------------+------------
 r       | h          | 
(1 row)

Drop table ao_db_or_t1;
DROP TABLE
-- with appendonly=true specified the table will be created as CO table
Drop table if exists ao_db_or_t2;
psql:/path/sql_file:1: NOTICE:  table "ao_db_or_t2" does not exist, skipping
DROP TABLE
Create table ao_db_or_t2( i int, j int) with(appendonly=true);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_db_or_t2 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_db_or_t2;
 count 
-------
    10
(1 row)

\d+ ao_db_or_t2;
                             Append-Only Columnar Table "public.ao_db_or_t2"
 Column |  Type   | Modifiers | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+-----------+---------+------------------+-------------------+------------+-------------
 i      | integer |           | plain   | none             | 0                 | 32768      | 
 j      | integer |           | plain   | none             | 0                 | 32768      | 
Checksum: t
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_db_or_t2';
 relkind | relstorage |              reloptions              
---------+------------+--------------------------------------
 r       | c          | {appendonly=true,orientation=column}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_db_or_t2');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 |              |     32768 | t        | t
(1 row)

Drop table ao_db_or_t2;
DROP TABLE
--- =====================================
-- Reset guc to default value for all four  databases
Alter database dsp_db1 set gp_default_storage_options TO DEFAULT;
ALTER DATABASE
Alter database dsp_db2 set gp_default_storage_options TO DEFAULT;
ALTER DATABASE
Alter database dsp_db3 set gp_default_storage_options TO DEFAULT;
ALTER DATABASE
Alter database dsp_db4 set gp_default_storage_options TO DEFAULT;
ALTER DATABASE
select datname, datconfig from pg_database where datname in ('dsp_db1', 'dsp_db2', 'dsp_db3', 'dsp_db4') order by datname;
 datname | datconfig 
---------+-----------
 dsp_db1 | 
 dsp_db2 | 
 dsp_db3 | 
 dsp_db4 | 
(4 rows)

