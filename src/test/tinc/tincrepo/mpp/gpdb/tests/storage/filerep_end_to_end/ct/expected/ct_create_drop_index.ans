CREATE TABLE ct_heap_table_unique_index(
text_col text,
bigint_col bigint,
char_vary_col character varying(30),
numeric_col numeric,
int_col int4,
float_col float4,
int_array_col int[],
drop_col numeric,
before_rename_col int4,
change_datatype_col numeric,
a_ts_without timestamp without time zone,
b_ts_with timestamp with time zone,
date_column date) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'text_col' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE UNIQUE INDEX ct_heap_unq_idx1 ON ct_heap_table_unique_index (numeric_col);
psql:/path/sql_file:1: NOTICE:  updating distribution policy to match new unique index
CREATE INDEX
CREATE UNIQUE INDEX ct_heap_unq_idx2 ON ct_heap_table_unique_index (numeric_col);
CREATE INDEX
CREATE UNIQUE INDEX ct_heap_unq_idx3 ON ct_heap_table_unique_index (numeric_col);
CREATE INDEX
CREATE UNIQUE INDEX ct_heap_unq_idx4 ON ct_heap_table_unique_index (numeric_col);
CREATE INDEX
CREATE UNIQUE INDEX ct_heap_unq_idx5 ON ct_heap_table_unique_index (numeric_col);
CREATE INDEX
insert into ct_heap_table_unique_index values ('0_zero', 0, '0_zero', 0, 0, 0, '{0}', 0, 0, 0, '2004-10-19 10:23:54', '2004-10-19 10:23:54+02', '1-1-2000');
INSERT 0 1
insert into ct_heap_table_unique_index values ('1_zero', 1, '1_zero', 1, 1, 1, '{1}', 1, 1, 1, '2005-10-19 10:23:54', '2005-10-19 10:23:54+02', '1-1-2001');
INSERT 0 1
insert into ct_heap_table_unique_index values ('2_zero', 2, '2_zero', 2, 2, 2, '{2}', 2, 2, 2, '2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002');
INSERT 0 1
insert into ct_heap_table_unique_index select i||'_'||repeat('text',100),i,i||'_'||repeat('text',3),i,i,i,'{3}',i,i,i,'2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002' from generate_series(3,100)i;
INSERT 0 98
CREATE TABLE ct_heap_table_btree_index(
text_col text,
bigint_col bigint,
char_vary_col character varying(30),
numeric_col numeric,
int_col int4,
float_col float4,
int_array_col int[],
drop_col numeric,
before_rename_col int4,
change_datatype_col numeric,
a_ts_without timestamp without time zone,
b_ts_with timestamp with time zone,
date_column date) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'text_col' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE INDEX ct_heap_btree_idx1 ON ct_heap_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_heap_btree_idx2 ON ct_heap_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_heap_btree_idx3 ON ct_heap_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_heap_btree_idx4 ON ct_heap_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_heap_btree_idx5 ON ct_heap_table_btree_index (numeric_col);
CREATE INDEX
insert into ct_heap_table_btree_index values ('0_zero', 0, '0_zero', 0, 0, 0, '{0}', 0, 0, 0, '2004-10-19 10:23:54', '2004-10-19 10:23:54+02', '1-1-2000');
INSERT 0 1
insert into ct_heap_table_btree_index values ('1_zero', 1, '1_zero', 1, 1, 1, '{1}', 1, 1, 1, '2005-10-19 10:23:54', '2005-10-19 10:23:54+02', '1-1-2001');
INSERT 0 1
insert into ct_heap_table_btree_index values ('2_zero', 2, '2_zero', 2, 2, 2, '{2}', 2, 2, 2, '2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002');
INSERT 0 1
insert into ct_heap_table_btree_index select i||'_'||repeat('text',100),i,i||'_'||repeat('text',3),i,i,i,'{3}',i,i,i,'2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002' from generate_series(3,100)i;
INSERT 0 98
CREATE TABLE ct_heap_table_bitmap_index(
text_col text,
bigint_col bigint,
char_vary_col character varying(30),
numeric_col numeric,
int_col int4,
float_col float4,
int_array_col int[],
drop_col numeric,
before_rename_col int4,
change_datatype_col numeric,
a_ts_without timestamp without time zone,
b_ts_with timestamp with time zone,
date_column date) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'text_col' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE INDEX ct_heap_bm_idx1 ON ct_heap_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_heap_bm_idx2 ON ct_heap_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_heap_bm_idx3 ON ct_heap_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_heap_bm_idx4 ON ct_heap_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_heap_bm_idx5 ON ct_heap_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
insert into ct_heap_table_bitmap_index values ('0_zero', 0, '0_zero', 0, 0, 0, '{0}', 0, 0, 0, '2004-10-19 10:23:54', '2004-10-19 10:23:54+02', '1-1-2000');
INSERT 0 1
insert into ct_heap_table_bitmap_index values ('1_zero', 1, '1_zero', 1, 1, 1, '{1}', 1, 1, 1, '2005-10-19 10:23:54', '2005-10-19 10:23:54+02', '1-1-2001');
INSERT 0 1
insert into ct_heap_table_bitmap_index values ('2_zero', 2, '2_zero', 2, 2, 2, '{2}', 2, 2, 2, '2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002');
INSERT 0 1
insert into ct_heap_table_bitmap_index select i||'_'||repeat('text',100),i,i||'_'||repeat('text',3),i,i,i,'{3}',i,i,i,'2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002' from generate_series(3,100)i;
INSERT 0 98
CREATE TABLE ct_heap_table_gist_index (
 id INTEGER,
 property BOX,
 filler VARCHAR DEFAULT 'This is here just to take up space so that we use more pages of data and sequential scans take a lot more time.  Stones tinheads and mixers heapming; we did it all on our own; this summer I hear the crunching; 11
 dead in Ohio. Got right down to it; we were cutting us down; heapuld have had fun but, no; left them face down dead on the ground.  How can you listen when you know?'
 )
 DISTRIBUTED BY (id);
CREATE TABLE
INSERT INTO ct_heap_table_gist_index (id, property) VALUES (1, '( (0,0), (1,1) )');
INSERT 0 1
INSERT INTO ct_heap_table_gist_index (id, property) VALUES (2, '( (0,0), (2,2) )');
INSERT 0 1
INSERT INTO ct_heap_table_gist_index (id, property) VALUES (3, '( (0,0), (3,3) )');
INSERT 0 1
INSERT INTO ct_heap_table_gist_index (id, property) VALUES (4, '( (0,0), (4,4) )');
INSERT 0 1
INSERT INTO ct_heap_table_gist_index (id, property) VALUES (5, '( (0,0), (5,5) )');
INSERT 0 1
CREATE INDEX ct_heap_gist_idx1 ON ct_heap_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_heap_gist_idx2 ON ct_heap_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_heap_gist_idx3 ON ct_heap_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_heap_gist_idx4 ON ct_heap_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_heap_gist_idx5 ON ct_heap_table_gist_index USING GiST (property);
CREATE INDEX
DROP INDEX sync1_heap_unq_idx4;
DROP INDEX
DROP INDEX sync1_heap_btree_idx4;
DROP INDEX
DROP INDEX sync1_heap_bm_idx4;
DROP INDEX
DROP INDEX sync1_heap_gist_idx4;
DROP INDEX
DROP INDEX ck_sync1_heap_unq_idx3;
DROP INDEX
DROP INDEX ck_sync1_heap_btree_idx3;
DROP INDEX
DROP INDEX ck_sync1_heap_bm_idx3;
DROP INDEX
DROP INDEX ck_sync1_heap_gist_idx3;
DROP INDEX
DROP INDEX ct_heap_unq_idx1;
DROP INDEX
DROP INDEX ct_heap_btree_idx1;
DROP INDEX
DROP INDEX ct_heap_bm_idx1;
DROP INDEX
DROP INDEX ct_heap_gist_idx1;
DROP INDEX
-- AO Index
CREATE TABLE ct_ao_table_btree_index(
text_col text,
bigint_col bigint,
char_vary_col character varying(30),
numeric_col numeric,
int_col int4,
float_col float4,
int_array_col int[],
drop_col numeric,
before_rename_col int4,
change_datatype_col numeric,
a_ts_without timestamp without time zone,
b_ts_with timestamp with time zone,
date_column date) with (appendonly=true) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'text_col' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE INDEX ct_ao_btree_idx1 ON ct_ao_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_ao_btree_idx2 ON ct_ao_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_ao_btree_idx3 ON ct_ao_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_ao_btree_idx4 ON ct_ao_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_ao_btree_idx5 ON ct_ao_table_btree_index (numeric_col);
CREATE INDEX
insert into ct_ao_table_btree_index values ('0_zero', 0, '0_zero', 0, 0, 0, '{0}', 0, 0, 0, '2004-10-19 10:23:54', '2004-10-19 10:23:54+02', '1-1-2000');
INSERT 0 1
insert into ct_ao_table_btree_index values ('1_zero', 1, '1_zero', 1, 1, 1, '{1}', 1, 1, 1, '2005-10-19 10:23:54', '2005-10-19 10:23:54+02', '1-1-2001');
INSERT 0 1
insert into ct_ao_table_btree_index values ('2_zero', 2, '2_zero', 2, 2, 2, '{2}', 2, 2, 2, '2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002');
INSERT 0 1
insert into ct_ao_table_btree_index select i||'_'||repeat('text',100),i,i||'_'||repeat('text',3),i,i,i,'{3}',i,i,i,'2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002' from generate_series(3,100)i;
INSERT 0 98
CREATE TABLE ct_ao_table_bitmap_index(
text_col text,
bigint_col bigint,
char_vary_col character varying(30),
numeric_col numeric,
int_col int4,
float_col float4,
int_array_col int[],
drop_col numeric,
before_rename_col int4,
change_datatype_col numeric,
a_ts_without timestamp without time zone,
b_ts_with timestamp with time zone,
date_column date) with (appendonly=true) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'text_col' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE INDEX ct_ao_bm_idx1 ON ct_ao_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_ao_bm_idx2 ON ct_ao_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_ao_bm_idx3 ON ct_ao_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_ao_bm_idx4 ON ct_ao_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_ao_bm_idx5 ON ct_ao_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
insert into ct_ao_table_bitmap_index values ('0_zero', 0, '0_zero', 0, 0, 0, '{0}', 0, 0, 0, '2004-10-19 10:23:54', '2004-10-19 10:23:54+02', '1-1-2000');
INSERT 0 1
insert into ct_ao_table_bitmap_index values ('1_zero', 1, '1_zero', 1, 1, 1, '{1}', 1, 1, 1, '2005-10-19 10:23:54', '2005-10-19 10:23:54+02', '1-1-2001');
INSERT 0 1
insert into ct_ao_table_bitmap_index values ('2_zero', 2, '2_zero', 2, 2, 2, '{2}', 2, 2, 2, '2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002');
INSERT 0 1
insert into ct_ao_table_bitmap_index select i||'_'||repeat('text',100),i,i||'_'||repeat('text',3),i,i,i,'{3}',i,i,i,'2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002' from generate_series(3,100)i;
INSERT 0 98
CREATE TABLE ct_ao_table_gist_index (
 id INTEGER,
 property BOX,
 filler VARCHAR DEFAULT 'This is here just to take up space so that we use more pages of data and sequential scans take a lot more time.  Stones tinheads and mixers coming; we did it all on our own; this summer I hear the crunching; 11
 dead in Ohio. Got right down to it; we were cutting us down; could have had fun but, no; left them face down dead on the ground.  How can you listen when you know?'
 )
 DISTRIBUTED BY (id);
CREATE TABLE
INSERT INTO ct_ao_table_gist_index (id, property) VALUES (1, '( (0,0), (1,1) )');
INSERT 0 1
INSERT INTO ct_ao_table_gist_index (id, property) VALUES (2, '( (0,0), (2,2) )');
INSERT 0 1
INSERT INTO ct_ao_table_gist_index (id, property) VALUES (3, '( (0,0), (3,3) )');
INSERT 0 1
INSERT INTO ct_ao_table_gist_index (id, property) VALUES (4, '( (0,0), (4,4) )');
INSERT 0 1
INSERT INTO ct_ao_table_gist_index (id, property) VALUES (5, '( (0,0), (5,5) )');
INSERT 0 1
CREATE INDEX ct_ao_gist_idx1 ON ct_ao_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_ao_gist_idx2 ON ct_ao_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_ao_gist_idx3 ON ct_ao_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_ao_gist_idx4 ON ct_ao_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_ao_gist_idx5 ON ct_ao_table_gist_index USING GiST (property);
CREATE INDEX
DROP INDEX sync1_ao_btree_idx4;
DROP INDEX
DROP INDEX sync1_ao_bm_idx4;
DROP INDEX
DROP INDEX sync1_ao_gist_idx4;
DROP INDEX
DROP INDEX ck_sync1_ao_btree_idx3;
DROP INDEX
DROP INDEX ck_sync1_ao_bm_idx3;
DROP INDEX
DROP INDEX ck_sync1_ao_gist_idx3;
DROP INDEX
DROP INDEX ct_ao_btree_idx1;
DROP INDEX
DROP INDEX ct_ao_bm_idx1;
DROP INDEX
DROP INDEX ct_ao_gist_idx1;
DROP INDEX
-- CO Index
CREATE TABLE ct_co_table_btree_index(
text_col text,
bigint_col bigint,
char_vary_col character varying(30),
numeric_col numeric,
int_col int4,
float_col float4,
int_array_col int[],
drop_col numeric,
before_rename_col int4,
change_datatype_col numeric,
a_ts_without timestamp without time zone,
b_ts_with timestamp with time zone,
date_column date) with (orientation='column',appendonly=true) ;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'text_col' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE INDEX ct_co_btree_idx1 ON ct_co_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_co_btree_idx2 ON ct_co_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_co_btree_idx3 ON ct_co_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_co_btree_idx4 ON ct_co_table_btree_index (numeric_col);
CREATE INDEX
CREATE INDEX ct_co_btree_idx5 ON ct_co_table_btree_index (numeric_col);
CREATE INDEX
insert into ct_co_table_btree_index values ('0_zero', 0, '0_zero', 0, 0, 0, '{0}', 0, 0, 0, '2004-10-19 10:23:54', '2004-10-19 10:23:54+02', '1-1-2000');
INSERT 0 1
insert into ct_co_table_btree_index values ('1_zero', 1, '1_zero', 1, 1, 1, '{1}', 1, 1, 1, '2005-10-19 10:23:54', '2005-10-19 10:23:54+02', '1-1-2001');
INSERT 0 1
insert into ct_co_table_btree_index values ('2_zero', 2, '2_zero', 2, 2, 2, '{2}', 2, 2, 2, '2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002');
INSERT 0 1
insert into ct_co_table_btree_index select i||'_'||repeat('text',100),i,i||'_'||repeat('text',3),i,i,i,'{3}',i,i,i,'2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002' from generate_series(3,100)i;
INSERT 0 98
CREATE TABLE ct_co_table_bitmap_index(
text_col text,
bigint_col bigint,
char_vary_col character varying(30),
numeric_col numeric,
int_col int4,
float_col float4,
int_array_col int[],
drop_col numeric,
before_rename_col int4,
change_datatype_col numeric,
a_ts_without timestamp without time zone,
b_ts_with timestamp with time zone,
date_column date) with (orientation='column',appendonly=true);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'text_col' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
CREATE INDEX ct_co_bm_idx1 ON ct_co_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_co_bm_idx2 ON ct_co_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_co_bm_idx3 ON ct_co_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_co_bm_idx4 ON ct_co_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
CREATE INDEX ct_co_bm_idx5 ON ct_co_table_bitmap_index USING bitmap (numeric_col);;
CREATE INDEX
insert into ct_co_table_bitmap_index values ('0_zero', 0, '0_zero', 0, 0, 0, '{0}', 0, 0, 0, '2004-10-19 10:23:54', '2004-10-19 10:23:54+02', '1-1-2000');
INSERT 0 1
insert into ct_co_table_bitmap_index values ('1_zero', 1, '1_zero', 1, 1, 1, '{1}', 1, 1, 1, '2005-10-19 10:23:54', '2005-10-19 10:23:54+02', '1-1-2001');
INSERT 0 1
insert into ct_co_table_bitmap_index values ('2_zero', 2, '2_zero', 2, 2, 2, '{2}', 2, 2, 2, '2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002');
INSERT 0 1
insert into ct_co_table_bitmap_index select i||'_'||repeat('text',100),i,i||'_'||repeat('text',3),i,i,i,'{3}',i,i,i,'2006-10-19 10:23:54', '2006-10-19 10:23:54+02', '1-1-2002' from generate_series(3,100)i;
INSERT 0 98
CREATE TABLE ct_co_table_gist_index (
 id INTEGER,
 property BOX,
 filler VARCHAR DEFAULT 'This is here just to take up space so that we use more pages of data and sequential scans take a lot more time.  Stones tinheads and mixers coming; we did it all on our own; this summer I hear the crunching; 11
 dead in Ohio. Got right down to it; we were cutting us down; could have had fun but, no; left them face down dead on the ground.  How can you listen when you know?'
 )
 DISTRIBUTED BY (id);
CREATE TABLE
INSERT INTO ct_co_table_gist_index (id, property) VALUES (1, '( (0,0), (1,1) )');
INSERT 0 1
INSERT INTO ct_co_table_gist_index (id, property) VALUES (2, '( (0,0), (2,2) )');
INSERT 0 1
INSERT INTO ct_co_table_gist_index (id, property) VALUES (3, '( (0,0), (3,3) )');
INSERT 0 1
INSERT INTO ct_co_table_gist_index (id, property) VALUES (4, '( (0,0), (4,4) )');
INSERT 0 1
INSERT INTO ct_co_table_gist_index (id, property) VALUES (5, '( (0,0), (5,5) )');
INSERT 0 1
CREATE INDEX ct_co_gist_idx1 ON ct_co_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_co_gist_idx2 ON ct_co_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_co_gist_idx3 ON ct_co_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_co_gist_idx4  ON ct_co_table_gist_index USING GiST (property);
CREATE INDEX
CREATE INDEX ct_co_gist_idx5 ON ct_co_table_gist_index USING GiST (property);
CREATE INDEX
DROP INDEX sync1_co_btree_idx4;
DROP INDEX
DROP INDEX sync1_co_bm_idx4;
DROP INDEX
DROP INDEX sync1_co_gist_idx4;
DROP INDEX
DROP INDEX ck_sync1_co_btree_idx3;
DROP INDEX
DROP INDEX ck_sync1_co_bm_idx3;
DROP INDEX
DROP INDEX ck_sync1_co_gist_idx3;
DROP INDEX
DROP INDEX ct_co_btree_idx1;
DROP INDEX
DROP INDEX ct_co_bm_idx1;
DROP INDEX
DROP INDEX ct_co_gist_idx1;
DROP INDEX
