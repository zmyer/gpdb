--
-- SYNC1 CO Part Table 1
--
create table sync1_co_alter_part_add_part1 (a char, b int, d char,e text) with ( appendonly='true', orientation='column')
partition by range (b)
subpartition by list (d)
subpartition template (
 subpartition sp1 values ('a'),
 subpartition sp2 values ('b'))
(
start (1) end (10) every (5)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_1" for table "sync1_co_alter_part_add_part1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_2" for table "sync1_co_alter_part_add_part1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_1_2_prt_sp1" for table "sync1_co_alter_part_add_part1_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_1_2_prt_sp2" for table "sync1_co_alter_part_add_part1_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_2_2_prt_sp1" for table "sync1_co_alter_part_add_part1_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_2_2_prt_sp2" for table "sync1_co_alter_part_add_part1_1_prt_2"
CREATE TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part1 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
--
-- SYNC1 CO Part Table 2
--
create table sync1_co_alter_part_add_part2 (a char, b int, d char,e text) with ( appendonly='true', orientation='column')
partition by range (b)
subpartition by list (d)
subpartition template (
 subpartition sp1 values ('a'),
 subpartition sp2 values ('b'))
(
start (1) end (10) every (5)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part2_1_prt_1" for table "sync1_co_alter_part_add_part2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part2_1_prt_2" for table "sync1_co_alter_part_add_part2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part2_1_prt_1_2_prt_sp1" for table "sync1_co_alter_part_add_part2_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part2_1_prt_1_2_prt_sp2" for table "sync1_co_alter_part_add_part2_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part2_1_prt_2_2_prt_sp1" for table "sync1_co_alter_part_add_part2_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part2_1_prt_2_2_prt_sp2" for table "sync1_co_alter_part_add_part2_1_prt_2"
CREATE TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part2 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
--
-- SYNC1 CO Part Table 3
--
create table sync1_co_alter_part_add_part3 (a char, b int, d char,e text) with ( appendonly='true', orientation='column')
partition by range (b)
subpartition by list (d)
subpartition template (
 subpartition sp1 values ('a'),
 subpartition sp2 values ('b'))
(
start (1) end (10) every (5)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part3_1_prt_1" for table "sync1_co_alter_part_add_part3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part3_1_prt_2" for table "sync1_co_alter_part_add_part3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part3_1_prt_1_2_prt_sp1" for table "sync1_co_alter_part_add_part3_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part3_1_prt_1_2_prt_sp2" for table "sync1_co_alter_part_add_part3_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part3_1_prt_2_2_prt_sp1" for table "sync1_co_alter_part_add_part3_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part3_1_prt_2_2_prt_sp2" for table "sync1_co_alter_part_add_part3_1_prt_2"
CREATE TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part3 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
--
-- SYNC1 CO Part Table 4
--
create table sync1_co_alter_part_add_part4 (a char, b int, d char,e text) with ( appendonly='true', orientation='column')
partition by range (b)
subpartition by list (d)
subpartition template (
 subpartition sp1 values ('a'),
 subpartition sp2 values ('b'))
(
start (1) end (10) every (5)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part4_1_prt_1" for table "sync1_co_alter_part_add_part4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part4_1_prt_2" for table "sync1_co_alter_part_add_part4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part4_1_prt_1_2_prt_sp1" for table "sync1_co_alter_part_add_part4_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part4_1_prt_1_2_prt_sp2" for table "sync1_co_alter_part_add_part4_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part4_1_prt_2_2_prt_sp1" for table "sync1_co_alter_part_add_part4_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part4_1_prt_2_2_prt_sp2" for table "sync1_co_alter_part_add_part4_1_prt_2"
CREATE TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part4 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
--
-- SYNC1 CO Part Table 5
--
create table sync1_co_alter_part_add_part5 (a char, b int, d char,e text) with ( appendonly='true', orientation='column')
partition by range (b)
subpartition by list (d)
subpartition template (
 subpartition sp1 values ('a'),
 subpartition sp2 values ('b'))
(
start (1) end (10) every (5)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part5_1_prt_1" for table "sync1_co_alter_part_add_part5"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part5_1_prt_2" for table "sync1_co_alter_part_add_part5"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part5_1_prt_1_2_prt_sp1" for table "sync1_co_alter_part_add_part5_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part5_1_prt_1_2_prt_sp2" for table "sync1_co_alter_part_add_part5_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part5_1_prt_2_2_prt_sp1" for table "sync1_co_alter_part_add_part5_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part5_1_prt_2_2_prt_sp2" for table "sync1_co_alter_part_add_part5_1_prt_2"
CREATE TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part5 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
--
-- SYNC1 CO Part Table 6
--
create table sync1_co_alter_part_add_part6 (a char, b int, d char,e text) with ( appendonly='true', orientation='column')
partition by range (b)
subpartition by list (d)
subpartition template (
 subpartition sp1 values ('a'),
 subpartition sp2 values ('b'))
(
start (1) end (10) every (5)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part6_1_prt_1" for table "sync1_co_alter_part_add_part6"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part6_1_prt_2" for table "sync1_co_alter_part_add_part6"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part6_1_prt_1_2_prt_sp1" for table "sync1_co_alter_part_add_part6_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part6_1_prt_1_2_prt_sp2" for table "sync1_co_alter_part_add_part6_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part6_1_prt_2_2_prt_sp1" for table "sync1_co_alter_part_add_part6_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part6_1_prt_2_2_prt_sp2" for table "sync1_co_alter_part_add_part6_1_prt_2"
CREATE TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part6 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
--
-- SYNC1 CO Part Table 7
--
create table sync1_co_alter_part_add_part7 (a char, b int, d char,e text) with ( appendonly='true', orientation='column')
partition by range (b)
subpartition by list (d)
subpartition template (
 subpartition sp1 values ('a'),
 subpartition sp2 values ('b'))
(
start (1) end (10) every (5)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part7_1_prt_1" for table "sync1_co_alter_part_add_part7"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part7_1_prt_2" for table "sync1_co_alter_part_add_part7"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part7_1_prt_1_2_prt_sp1" for table "sync1_co_alter_part_add_part7_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part7_1_prt_1_2_prt_sp2" for table "sync1_co_alter_part_add_part7_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part7_1_prt_2_2_prt_sp1" for table "sync1_co_alter_part_add_part7_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part7_1_prt_2_2_prt_sp2" for table "sync1_co_alter_part_add_part7_1_prt_2"
CREATE TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part7 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
--
-- SYNC1 CO Part Table 8
--
create table sync1_co_alter_part_add_part8 (a char, b int, d char,e text) with ( appendonly='true', orientation='column')
partition by range (b)
subpartition by list (d)
subpartition template (
 subpartition sp1 values ('a'),
 subpartition sp2 values ('b'))
(
start (1) end (10) every (5)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part8_1_prt_1" for table "sync1_co_alter_part_add_part8"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part8_1_prt_2" for table "sync1_co_alter_part_add_part8"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part8_1_prt_1_2_prt_sp1" for table "sync1_co_alter_part_add_part8_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part8_1_prt_1_2_prt_sp2" for table "sync1_co_alter_part_add_part8_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part8_1_prt_2_2_prt_sp1" for table "sync1_co_alter_part_add_part8_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part8_1_prt_2_2_prt_sp2" for table "sync1_co_alter_part_add_part8_1_prt_2"
CREATE TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part8 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
--
--
-- ALTER TABLE TO ADD PART
--
--
--
-- ALTER SYNC1 CO Part Add Parition
--
-- Add partition
--
alter table sync1_co_alter_part_add_part1 add partition p1 end (11);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_p1" for table "sync1_co_alter_part_add_part1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_p1_2_prt_sp1" for table "sync1_co_alter_part_add_part1_1_prt_p1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_p1_2_prt_sp2" for table "sync1_co_alter_part_add_part1_1_prt_p1"
ALTER TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part1 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
--
-- Set subpartition Template
--
alter table sync1_co_alter_part_add_part1 set subpartition template ();
psql:/path/sql_file:1: NOTICE:  dropped level 1 subpartition template specification for relation "sync1_co_alter_part_add_part1"
ALTER TABLE
--
-- Add Partition
--
alter table sync1_co_alter_part_add_part1 add partition p3 end (13) (subpartition sp3 values ('c'));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_p3" for table "sync1_co_alter_part_add_part1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_add_part1_1_prt_p3_2_prt_sp3" for table "sync1_co_alter_part_add_part1_1_prt_p3"
ALTER TABLE
--
-- Insert few records into the table
--
 insert into sync1_co_alter_part_add_part1 values ('a',generate_series(1,5),'b','test_1');
INSERT 0 5
