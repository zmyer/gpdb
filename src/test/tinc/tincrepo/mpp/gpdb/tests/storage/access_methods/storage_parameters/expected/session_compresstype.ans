-- start_ignore
SET gp_create_table_random_default_distribution=off;
SET
-- end_ignore
-- 
-- @description Guc setting at session level for compresstype
-- Guc value compresstype=zlib
\c dsp_db1
You are now connected to database "dsp_db1" as user "apraveen".
show gp_default_storage_options;
                            gp_default_storage_options                            
----------------------------------------------------------------------------------
 appendonly=false,blocksize=32768,compresstype=none,checksum=true,orientation=row
(1 row)

SET gp_default_storage_options="appendonly=true, compresstype=zlib";
SET
show gp_default_storage_options;
                                   gp_default_storage_options                                    
-------------------------------------------------------------------------------------------------
 appendonly=true,blocksize=32768,compresstype=zlib,compresslevel=1,checksum=true,orientation=row
(1 row)

-- Create able with no options
Drop table if exists ao_ss_ct_t1;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t1" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t1 ( i int, j int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Create index ap_t1_ix on ao_ss_ct_t1(i);
CREATE INDEX
Insert into ao_ss_ct_t1 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
update ao_ss_ct_t1 set j=i where i>5;
UPDATE 5
Delete from ao_ss_ct_t1 where i<2;
DELETE 1
Select count(*) from ao_ss_ct_t1;
 count 
-------
     9
(1 row)

\d+ ao_ss_ct_t1;
        Append-Only Table "public.ao_ss_ct_t1"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Compression Type: zlib
Compression Level: 1
Block Size: 32768
Checksum: t
Indexes:
    "ap_t1_ix" btree (i)
Has OIDs: no
Options: appendonly=true, compresstype=zlib
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t1';
 relkind | relstorage |             reloptions              
---------+------------+-------------------------------------
 r       | a          | {appendonly=true,compresstype=zlib}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t1');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             1 | zlib         |     32768 | t        | f
(1 row)

Drop table ao_ss_ct_t1;
DROP TABLE
-- Create table with compresstype=quicklz
Drop table if exists ao_ss_ct_t2;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t2" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t2 ( i int, j int) with(compresstype=quicklz);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t2 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t2;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t2;
        Append-Only Table "public.ao_ss_ct_t2"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Compression Type: quicklz
Compression Level: 1
Block Size: 32768
Checksum: t
Has OIDs: no
Options: compresstype=quicklz, appendonly=true
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t2';
 relkind | relstorage |               reloptions               
---------+------------+----------------------------------------
 r       | a          | {compresstype=quicklz,appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t2');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             1 | quicklz      |     32768 | t        | f
(1 row)

Drop table ao_ss_ct_t2;
DROP TABLE
-- Create table with compresstype=rle_type(not valid)
Drop table if exists ao_ss_ct_t3;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t3" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t3 ( i int, j int) with(compresstype=rle_type);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: ERROR:  rle_type cannot be used with Append Only relations row orientation
-- Create table with compresstype=none
Drop table if exists ao_ss_ct_t4;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t4" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t4 ( i int, j int) with(compresstype=none);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t4 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t4;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t4;
        Append-Only Table "public.ao_ss_ct_t4"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Compression Type: none
Compression Level: 1
Block Size: 32768
Checksum: t
Has OIDs: no
Options: compresstype=none, appendonly=true
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t4';
 relkind | relstorage |             reloptions              
---------+------------+-------------------------------------
 r       | a          | {compresstype=none,appendonly=true}
(1 row)

SET gp_default_storage_options="appendonly=true,blocksize=8192";
SET
show gp_default_storage_options;
                           gp_default_storage_options                           
--------------------------------------------------------------------------------
 appendonly=true,blocksize=8192,compresstype=none,checksum=true,orientation=row
(1 row)

Alter table ao_ss_ct_t4 add column k int default 20;
ALTER TABLE
select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t4';
 relkind | relstorage |             reloptions              
---------+------------+-------------------------------------
 r       | a          | {compresstype=none,appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t4');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 | none         |     32768 | t        | f
(1 row)

SET gp_default_storage_options="appendonly=true, orientation=column, compresstype=zlib";
SET
show gp_default_storage_options;
                                     gp_default_storage_options                                     
----------------------------------------------------------------------------------------------------
 appendonly=true,blocksize=32768,compresstype=zlib,compresslevel=1,checksum=true,orientation=column
(1 row)

Alter table ao_ss_ct_t4 add column l int default 10;
ALTER TABLE
-- Alter the table and add a column with new compresstype
Alter table ao_ss_ct_t4 add column m int default 10 ENCODING (compresstype=quicklz);
psql:/path/sql_file:1: ERROR:  ENCODING clause supplied for table that is not column oriented
\d+ ao_ss_ct_t4;
        Append-Only Table "public.ao_ss_ct_t4"
 Column |  Type   | Modifiers  | Storage | Description 
--------+---------+------------+---------+-------------
 i      | integer |            | plain   | 
 j      | integer |            | plain   | 
 k      | integer | default 20 | plain   | 
 l      | integer | default 10 | plain   | 
Compression Type: none
Compression Level: 0
Block Size: 32768
Checksum: t
Has OIDs: no
Options: compresstype=none, appendonly=true
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t4';
 relkind | relstorage |             reloptions              
---------+------------+-------------------------------------
 r       | a          | {compresstype=none,appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t4');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             0 | none         |     32768 | t        | f
(1 row)

Drop table ao_ss_ct_t4;
DROP TABLE
-- Create table with compresstype=rle_type  and orientation=column
Drop table if exists ao_ss_ct_t3;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t3" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t3 ( i int, j int) with(compresstype=rle_type, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t3 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t3;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t3;
                             Append-Only Columnar Table "public.ao_ss_ct_t3"
 Column |  Type   | Modifiers | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+-----------+---------+------------------+-------------------+------------+-------------
 i      | integer |           | plain   | rle_type         | 1                 | 32768      | 
 j      | integer |           | plain   | rle_type         | 1                 | 32768      | 
Checksum: t
Has OIDs: no
Options: compresstype=rle_type, orientation=column, appendonly=true
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t3';
 relkind | relstorage |                         reloptions                         
---------+------------+------------------------------------------------------------
 r       | c          | {compresstype=rle_type,orientation=column,appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t3');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             1 | rle_type     |     32768 | t        | t
(1 row)

Drop table ao_ss_ct_t3;
DROP TABLE
-- Create table with a new compresstype at column level for one column 
Drop table if exists ao_ss_ct_t5;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t5" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t5 ( i int, j int encoding(compresstype=quicklz));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t5 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t5;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t5;
                             Append-Only Columnar Table "public.ao_ss_ct_t5"
 Column |  Type   | Modifiers | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+-----------+---------+------------------+-------------------+------------+-------------
 i      | integer |           | plain   | zlib             | 1                 | 32768      | 
 j      | integer |           | plain   | quicklz          | 1                 | 32768      | 
Checksum: t
Has OIDs: no
Options: appendonly=true, compresstype=zlib, orientation=column
Distributed by: (i)

select attnum, attoptions from pg_attribute_encoding where attrelid='ao_ss_ct_t5'::regclass;
 attnum |                       attoptions                       
--------+--------------------------------------------------------
      1 | {compresstype=zlib,blocksize=32768,compresslevel=1}
      2 | {compresstype=quicklz,compresslevel=1,blocksize=32768}
(2 rows)

Drop table ao_ss_ct_t5;
DROP TABLE
-- Create table with compresstype in default column encoding
Drop table if exists ao_ss_ct_t6;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t6" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t6 ( i int, j int, DEFAULT COLUMN ENCODING (compresstype=quicklz)) with(orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t6 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t6;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t6;
                             Append-Only Columnar Table "public.ao_ss_ct_t6"
 Column |  Type   | Modifiers | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+-----------+---------+------------------+-------------------+------------+-------------
 i      | integer |           | plain   | quicklz          | 1                 | 32768      | 
 j      | integer |           | plain   | quicklz          | 1                 | 32768      | 
Checksum: t
Has OIDs: no
Options: orientation=column, appendonly=true, compresstype=zlib
Distributed by: (i)

select attnum, attoptions from pg_attribute_encoding where attrelid='ao_ss_ct_t6'::regclass;
 attnum |                       attoptions                       
--------+--------------------------------------------------------
      1 | {compresstype=quicklz,compresslevel=1,blocksize=32768}
      2 | {compresstype=quicklz,compresslevel=1,blocksize=32768}
(2 rows)

Drop table ao_ss_ct_t6;
DROP TABLE
-- Create table with invalid value for compresstype
Drop table if exists ao_ss_ct_t4;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t4" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t4 ( i int, j int) with(compresstype=xxxx);
psql:/path/sql_file:1: ERROR:  unknown compresstype "xxxx"
-- Create table with orientation,checksum,compresslevel
Drop table if exists ao_ss_ct_t5;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t5" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t5 ( i int, j int) with(orientation=column, compresslevel=1, checksum=true);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t5 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t5;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t5
                             Append-Only Columnar Table "public.ao_ss_ct_t5"
 Column |  Type   | Modifiers | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+-----------+---------+------------------+-------------------+------------+-------------
 i      | integer |           | plain   | zlib             | 1                 | 32768      | 
 j      | integer |           | plain   | zlib             | 1                 | 32768      | 
Checksum: t
Has OIDs: no
Options: orientation=column, compresslevel=1, checksum=true, appendonly=true
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t5';
 relkind | relstorage |                             reloptions                             
---------+------------+--------------------------------------------------------------------
 r       | c          | {orientation=column,compresslevel=1,checksum=true,appendonly=true}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t5');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             1 | zlib         |     32768 | t        | t
(1 row)

Drop table ao_ss_ct_t5;
DROP TABLE
-- ========================================
-- Set the session level guc to quicklz
SET gp_default_storage_options="appendonly=true,compresstype=quicklz";
SET
show gp_default_storage_options;
                                     gp_default_storage_options                                     
----------------------------------------------------------------------------------------------------
 appendonly=true,blocksize=32768,compresstype=quicklz,compresslevel=1,checksum=true,orientation=row
(1 row)

-- Create table with no options
Drop table if exists ao_ss_ct_t1;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t1" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t1 ( i int, j int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t1 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t1;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t1;
        Append-Only Table "public.ao_ss_ct_t1"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Compression Type: quicklz
Compression Level: 1
Block Size: 32768
Checksum: t
Has OIDs: no
Options: appendonly=true, compresstype=quicklz
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t1';
 relkind | relstorage |               reloptions               
---------+------------+----------------------------------------
 r       | a          | {appendonly=true,compresstype=quicklz}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t1');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             1 | quicklz      |     32768 | t        | f
(1 row)

Drop table ao_ss_ct_t1;
DROP TABLE
-- Guc with compresstype quicklz, Alter type with zlib, create table  with new type
Drop table if exists ao_ss_ct_t11;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t11" does not exist, skipping
DROP TABLE
ALTER TYPE char SET DEFAULT ENCODING (compresstype=zlib);
ALTER TYPE
Create table ao_ss_ct_t11 ( i int, j char(20)) with(orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t11 values (generate_series(1,10) , 'guc with quicklz');
INSERT 0 10
Select count(*) from ao_ss_ct_t11;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t11;
                                Append-Only Columnar Table "public.ao_ss_ct_t11"
 Column |     Type      | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+---------------+-----------+----------+------------------+-------------------+------------+-------------
 i      | integer       |           | plain    | quicklz          | 1                 | 32768      | 
 j      | character(20) |           | extended | zlib             | 1                 | 32768      | 
Checksum: t
Has OIDs: no
Options: orientation=column, appendonly=true, compresstype=quicklz
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t11';
 relkind | relstorage |                        reloptions                         
---------+------------+-----------------------------------------------------------
 r       | c          | {orientation=column,appendonly=true,compresstype=quicklz}
(1 row)

select attnum, attoptions from pg_attribute_encoding where attrelid='ao_ss_ct_t11'::regclass order by attnum;
 attnum |                       attoptions                       
--------+--------------------------------------------------------
      1 | {compresstype=quicklz,blocksize=32768,compresslevel=1}
      2 | {compresstype=zlib,compresslevel=1,blocksize=32768}
(2 rows)

ALTER TYPE char SET DEFAULT ENCODING (compresstype=none);
ALTER TYPE
Drop table ao_ss_ct_t11;
DROP TABLE
-- Guc with compresstype quicklz, Alter type with zlib, Alter column with new type
Drop table if exists ao_ss_ct_t12;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t12" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t12 ( i int, j int )  with(orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t12 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Alter type numeric SET DEFAULT ENCODING (compresstype=zlib);
ALTER TYPE
Alter table ao_ss_ct_t12 add column k numeric default 23;
ALTER TABLE
\d+ ao_ss_ct_t12;
                             Append-Only Columnar Table "public.ao_ss_ct_t12"
 Column |  Type   | Modifiers  | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+------------+---------+------------------+-------------------+------------+-------------
 i      | integer |            | plain   | quicklz          | 1                 | 32768      | 
 j      | integer |            | plain   | quicklz          | 1                 | 32768      | 
 k      | numeric | default 23 | main    | zlib             | 1                 | 32768      | 
Checksum: t
Has OIDs: no
Options: orientation=column, appendonly=true, compresstype=quicklz
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t12';
 relkind | relstorage |                        reloptions                         
---------+------------+-----------------------------------------------------------
 r       | c          | {orientation=column,appendonly=true,compresstype=quicklz}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t1i2');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
(0 rows)

select attnum, attoptions from pg_attribute_encoding where attrelid='ao_ss_ct_t12'::regclass order by attnum;
 attnum |                       attoptions                       
--------+--------------------------------------------------------
      1 | {compresstype=quicklz,blocksize=32768,compresslevel=1}
      2 | {compresstype=quicklz,blocksize=32768,compresslevel=1}
      3 | {compresstype=zlib,compresslevel=1,blocksize=32768}
(3 rows)

ALTER TYPE numeric SET DEFAULT ENCODING (compresstype=none);
ALTER TYPE
Drop table ao_ss_ct_t12;
DROP TABLE
-- Set the session level guc to rle_type
SET  gp_default_storage_options="appendonly=true, compresstype=rle_type, orientation=column";
SET
show gp_default_storage_options;
                                       gp_default_storage_options                                       
--------------------------------------------------------------------------------------------------------
 appendonly=true,blocksize=32768,compresstype=rle_type,compresslevel=1,checksum=true,orientation=column
(1 row)

-- Create table with no options 
Drop table if exists ao_ss_ct_t2;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t2" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t2 ( i int, j int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t2 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t2;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t2;
                             Append-Only Columnar Table "public.ao_ss_ct_t2"
 Column |  Type   | Modifiers | Storage | Compression Type | Compression Level | Block Size | Description 
--------+---------+-----------+---------+------------------+-------------------+------------+-------------
 i      | integer |           | plain   | rle_type         | 1                 | 32768      | 
 j      | integer |           | plain   | rle_type         | 1                 | 32768      | 
Checksum: t
Has OIDs: no
Options: appendonly=true, compresstype=rle_type, orientation=column
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t2';
 relkind | relstorage |                         reloptions                         
---------+------------+------------------------------------------------------------
 r       | c          | {appendonly=true,compresstype=rle_type,orientation=column}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t2');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             1 | rle_type     |     32768 | t        | t
(1 row)

Drop table ao_ss_ct_t2;
DROP TABLE
-- Create table with appendonly=false
Drop table if exists ao_ss_ct_t3;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t3" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t3 ( i int, j int) with(appendonly=false);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t3 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t3;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t3;
              Table "public.ao_ss_ct_t3"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Has OIDs: no
Options: appendonly=false
Distributed by: (i)

select relkind, relstorage, reloptions from pg_class where relname='ao_ss_ct_t3';
 relkind | relstorage |     reloptions     
---------+------------+--------------------
 r       | h          | {appendonly=false}
(1 row)

Drop table ao_ss_ct_t3;
DROP TABLE
-- Create table with appendonly=true
Drop table if exists ao_ss_ct_t4;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t4" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t4 ( i int, j int) with(appendonly=true);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
--- =====================================
-- GUC with invalid value
SET gp_default_storage_options="appendonly=true,compresstype=what";
psql:/path/sql_file:1: ERROR:  unknown compresstype "what"
SET gp_default_storage_options="appendonly=true, compresstype=quicklz, compresslevel=4";
psql:/path/sql_file:1: ERROR:  compresslevel=4 is out of range for quicklz (should be 1)
-- GUC with compresstype without appendonly=true
SET gp_default_storage_options="compresstype=quicklz";
SET
show gp_default_storage_options;
                                     gp_default_storage_options                                      
-----------------------------------------------------------------------------------------------------
 appendonly=false,blocksize=32768,compresstype=quicklz,compresslevel=1,checksum=true,orientation=row
(1 row)

-- With no option it will a heap table
Drop table if exists ao_ss_ct_t1;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t1" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t1( i int, j int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t1 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t1;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t1;
              Table "public.ao_ss_ct_t1"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Has OIDs: no
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_ss_ct_t1';
 relkind | relstorage | reloptions 
---------+------------+------------
 r       | h          | 
(1 row)

Drop table ao_ss_ct_t1;
DROP TABLE
-- with appendonly=true specified the table will be created as AO table with compresstype
Drop table if exists ao_ss_ct_t2;
psql:/path/sql_file:1: NOTICE:  table "ao_ss_ct_t2" does not exist, skipping
DROP TABLE
Create table ao_ss_ct_t2( i int, j int) with(appendonly=true);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
Insert into ao_ss_ct_t2 select i, i+1 from generate_series(1,10) i;
INSERT 0 10
Select count(*) from ao_ss_ct_t2;
 count 
-------
    10
(1 row)

\d+ ao_ss_ct_t2;
        Append-Only Table "public.ao_ss_ct_t2"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 i      | integer |           | plain   | 
 j      | integer |           | plain   | 
Compression Type: quicklz
Compression Level: 1
Block Size: 32768
Checksum: t
Has OIDs: no
Options: appendonly=true, compresstype=quicklz
Distributed by: (i)

select relkind, relstorage,reloptions from pg_class where relname='ao_ss_ct_t2';
 relkind | relstorage |               reloptions               
---------+------------+----------------------------------------
 r       | a          | {appendonly=true,compresstype=quicklz}
(1 row)

select compresslevel, compresstype, blocksize, checksum, columnstore from pg_appendonly where relid = (select oid from pg_class where relname='ao_ss_ct_t2');
 compresslevel | compresstype | blocksize | checksum | columnstore 
---------------+--------------+-----------+----------+-------------
             1 | quicklz      |     32768 | t        | f
(1 row)

Drop table ao_ss_ct_t2;
DROP TABLE
-- Guc with compresstype zlib, compresslevel=2, Alter type with compresstype rle_type/quicklz
SET gp_default_storage_options="appendonly=true,compresstype=zlib, compresslevel=2";
SET
Alter type numeric SET DEFAULT ENCODING (compresstype=rle_type);
ALTER TYPE
select * from pg_type_encoding where typid= (select oid from pg_type where typname='numeric');
 typid |                       typoptions                        
-------+---------------------------------------------------------
  1700 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
(1 row)

Alter type numeric SET DEFAULT ENCODING (compresstype=quicklz);
psql:/path/sql_file:1: ERROR:  compresslevel=2 is out of range for quicklz (should be 1)
select * from pg_type_encoding where typid= (select oid from pg_type where typname='numeric');
 typid |                       typoptions                        
-------+---------------------------------------------------------
  1700 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
(1 row)

Alter type numeric SET DEFAULT ENCODING (compresstype=none);
ALTER TYPE
-- Reset guc to default value 
RESET gp_default_storage_options;
RESET
show gp_default_storage_options;
                            gp_default_storage_options                            
----------------------------------------------------------------------------------
 appendonly=false,blocksize=32768,compresstype=none,checksum=true,orientation=row
(1 row)

