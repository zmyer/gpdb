-- Compression precedence testing
--Drop the tables
DROP TABLE if exists CO_01_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_02_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_03_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_04_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_05_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_06_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_062_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_063_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_07_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_072_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_08_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_082_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_09_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_10_compr_precedence;
DROP TABLE
DROP TABLE if exists CO_11_compr_precedence;
psql:/path/sql_file:1: NOTICE:  table "co_11_compr_precedence" does not exist, skipping
DROP TABLE
 
-- storage_directive =quicklz, column_reference=zlib => expected = quicklz
CREATE TABLE CO_01_compr_precedence (
         a1 int ENCODING (compresstype=quicklz,compresslevel=1,blocksize=8192),
         a2 char(5) ENCODING (compresstype=ZLIB,compresslevel=8,blocksize=8192),
         a3 text ENCODING (compresstype=ZLIB,compresslevel=8,blocksize=8192),
         a4 timestamp ENCODING (compresstype=ZLIB,compresslevel=8,blocksize=8192),
         a5 date ENCODING (compresstype=ZLIB,compresslevel=8,blocksize=8192), COLUMN a1 ENCODING (compresstype=ZLIB,compresslevel=1,blocksize=32768) ) WITH (appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
-- check the compress_type of column a1
\d+ CO_01_compr_precedence
                                  Append-Only Columnar Table "public.co_01_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | quicklz          | 1                 | 8192       | 
 a2     | character(5)                |           | extended | zlib             | 8                 | 8192       | 
 a3     | text                        |           | extended | zlib             | 8                 | 8192       | 
 a4     | timestamp without time zone |           | plain    | zlib             | 8                 | 8192       | 
 a5     | date                        |           | plain    | zlib             | 8                 | 8192       | 
Checksum: f
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- storage_directive=not defined on any column, column_reference=quicklz on a1 => expected = quicklz for a1, none for all others
CREATE TABLE CO_02_compr_precedence 
        (a1 int,a2 char(5),a3 text,a4 timestamp ,a5 date, COLUMN a1 ENCODING (compresstype=QUICKLZ,compresslevel=1,blocksize=32768) ) WITH (appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
-- check the compress_type of column a1 
\d+ CO_02_compr_precedence
                                  Append-Only Columnar Table "public.co_02_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | quicklz          | 1                 | 32768      | 
 a2     | character(5)                |           | extended | none             | 0                 | 32768      | 
 a3     | text                        |           | extended | none             | 0                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- storage_directive=compresstype zlib for a5; default column_referece=quicklz => expected zlib for a5
CREATE TABLE CO_03_compr_precedence (
         a1 int,
         a2 char(5),a3 text ,a4 timestamp ,
         a5 date ENCODING (compresstype=ZLIB,compresslevel=8,blocksize=8192), 
         DEFAULT COLUMN ENCODING (compresstype=quicklz,compresslevel=1,blocksize=32768) ) WITH (appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
-- check the compress_type of column a5 
\d+ CO_03_compr_precedence
                                  Append-Only Columnar Table "public.co_03_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | quicklz          | 1                 | 32768      | 
 a2     | character(5)                |           | extended | quicklz          | 1                 | 32768      | 
 a3     | text                        |           | extended | quicklz          | 1                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | quicklz          | 1                 | 32768      | 
 a5     | date                        |           | plain    | zlib             | 8                 | 8192       | 
Checksum: f
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- storage_directive=none; WITH clause=quicklz => expected=quicklz
CREATE TABLE CO_04_compr_precedence 
        (a1 int,a2 char(5),a3 text,a4 timestamp ,a5 date ) WITH (appendonly=true, orientation=column,compresstype=QUICKLZ,compresslevel=1,blocksize=32768);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
-- check the compress_type of column a1
\d+ CO_04_compr_precedence
                                  Append-Only Columnar Table "public.co_04_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | quicklz          | 1                 | 32768      | 
 a2     | character(5)                |           | extended | quicklz          | 1                 | 32768      | 
 a3     | text                        |           | extended | quicklz          | 1                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | quicklz          | 1                 | 32768      | 
 a5     | date                        |           | plain    | quicklz          | 1                 | 32768      | 
Checksum: f
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=quicklz, compresslevel=1, blocksize=32768
Distributed by: (a1)

-- storage_directive = Not defined,Column a1 uses altered type int with compresstype=zlib => expectred=zlib
ALTER TYPE int SET DEFAULT ENCODING (compresstype=ZLIB,compresslevel=1,blocksize=1048576);
ALTER TYPE
CREATE TABLE CO_05_compr_precedence 
        (a1 int,a2 char(5),a3 text,a4 timestamp ,a5 date ) WITH (appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
        
-- check the compress_type of column a1
\d+ CO_05_compr_precedence        
                                  Append-Only Columnar Table "public.co_05_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | zlib             | 1                 | 1048576    | 
 a2     | character(5)                |           | extended | none             | 0                 | 32768      | 
 a3     | text                        |           | extended | none             | 0                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- storage_directive = defined for a1 as quicklz,Column a1 uses altered type int with compresstype=zlib => expected=quicklz
ALTER TYPE int SET DEFAULT ENCODING (compresstype=ZLIB,compresslevel=1,blocksize=1048576);
ALTER TYPE
CREATE TABLE CO_06_compr_precedence 
        (a1 int ENCODING (compresstype=quicklz,compresslevel=1,blocksize=1048576),a2 char(5),a3 text,a4 timestamp ,a5 date ) WITH (appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
        
-- check the compress_type of column a1
\d+ CO_06_compr_precedence      
                                  Append-Only Columnar Table "public.co_06_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | quicklz          | 1                 | 1048576    | 
 a2     | character(5)                |           | extended | none             | 0                 | 32768      | 
 a3     | text                        |           | extended | none             | 0                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- column reference = defined for a1 as zlib,Column a1 uses altered type int with compresstype=quicklz => expected=zlib
ALTER TYPE int SET DEFAULT ENCODING (compresstype=quicklz,compresslevel=1,blocksize=1048576);
ALTER TYPE
CREATE TABLE CO_062_compr_precedence 
        (a1 int ,a2 char(5),a3 text,a4 timestamp ,a5 date, COLUMN a1 ENCODING (compresstype=ZLIB,compresslevel=1,blocksize=1048576) ) WITH (appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
        
-- check the compress_type of column a1
\d+ CO_062_compr_precedence   
                                  Append-Only Columnar Table "public.co_062_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | zlib             | 1                 | 1048576    | 
 a2     | character(5)                |           | extended | none             | 0                 | 32768      | 
 a3     | text                        |           | extended | none             | 0                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- with clause = defined for a1 as zlib,Column a1 uses altered type int with compresstype=quicklz => expected=zlib
ALTER TYPE int SET DEFAULT ENCODING (compresstype=quicklz,compresslevel=1,blocksize=1048576);
ALTER TYPE
CREATE TABLE CO_063_compr_precedence 
        (a1 int ,a2 char(5),a3 text,a4 timestamp ,a5 date ) WITH (appendonly=true, orientation=column,compresstype=ZLIB,compresslevel=1,blocksize=1048576);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
        
-- check the compress_type of column a1
\d+ CO_063_compr_precedence   
                                  Append-Only Columnar Table "public.co_063_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | zlib             | 1                 | 1048576    | 
 a2     | character(5)                |           | extended | zlib             | 1                 | 1048576    | 
 a3     | text                        |           | extended | zlib             | 1                 | 1048576    | 
 a4     | timestamp without time zone |           | plain    | zlib             | 1                 | 1048576    | 
 a5     | date                        |           | plain    | zlib             | 1                 | 1048576    | 
Checksum: f
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=zlib, compresslevel=1, blocksize=1048576
Distributed by: (a1)

--Alter the type back to none to not affect any other tests
ALTER TYPE int SET DEFAULT ENCODING (compresstype=none,compresslevel=0,blocksize=32768);
ALTER TYPE
-- storage_directive=rle; partition level column reference=quicklz => expected =quicklz
CREATE TABLE CO_07_compr_precedence 
        (a1 int ENCODING (compresstype=zlib,compresslevel=1,blocksize=8192),a2 char(5),a3 text,a4 timestamp ,a5 date )  WITH (appendonly=true, orientation=column)
        Partition by range(a1) (start(1) end(2000) every(500) , COLUMN  a1 ENCODING (compresstype=QUICKLZ,compresslevel=1,blocksize=1048576));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_07_compr_precedence_1_prt_1" for table "co_07_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_07_compr_precedence_1_prt_2" for table "co_07_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_07_compr_precedence_1_prt_3" for table "co_07_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_07_compr_precedence_1_prt_4" for table "co_07_compr_precedence"
CREATE TABLE
        
-- check the compress_type of column a1 at table level
\d+ CO_07_compr_precedence 
                                  Append-Only Columnar Table "public.co_07_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | zlib             | 1                 | 8192       | 
 a2     | character(5)                |           | extended | none             | 0                 | 32768      | 
 a3     | text                        |           | extended | none             | 0                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Child tables: co_07_compr_precedence_1_prt_1,
              co_07_compr_precedence_1_prt_2,
              co_07_compr_precedence_1_prt_3,
              co_07_compr_precedence_1_prt_4
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

--check the compress_type of column a1 at partition level
\d+ co_07_compr_precedence_1_prt_1
                              Append-Only Columnar Table "public.co_07_compr_precedence_1_prt_1"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | quicklz          | 1                 | 1048576    | 
 a2     | character(5)                |           | extended | none             | 0                 | 32768      | 
 a3     | text                        |           | extended | none             | 0                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Check constraints:
    "co_07_compr_precedence_1_prt_1_check" CHECK (a1 >= 1 AND a1 < 501)
Inherits: co_07_compr_precedence
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- column reference =zlib; partition level column reference=quicklz => expected =quicklz
CREATE TABLE CO_072_compr_precedence 
        (a1 int,a2 char(5),a3 text,a4 timestamp ,a5 date, COLUMN a1  ENCODING (compresstype=zlib,compresslevel=1,blocksize=8192) )  WITH (appendonly=true, orientation=column)
        Partition by range(a1) (start(1) end(2000) every(500) , COLUMN  a1 ENCODING (compresstype=QUICKLZ,compresslevel=1,blocksize=1048576));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_072_compr_precedence_1_prt_1" for table "co_072_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_072_compr_precedence_1_prt_2" for table "co_072_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_072_compr_precedence_1_prt_3" for table "co_072_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_072_compr_precedence_1_prt_4" for table "co_072_compr_precedence"
CREATE TABLE
        
-- check the compress_type of column a1
\d+ CO_072_compr_precedence 
                                  Append-Only Columnar Table "public.co_072_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | zlib             | 1                 | 8192       | 
 a2     | character(5)                |           | extended | none             | 0                 | 32768      | 
 a3     | text                        |           | extended | none             | 0                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Child tables: co_072_compr_precedence_1_prt_1,
              co_072_compr_precedence_1_prt_2,
              co_072_compr_precedence_1_prt_3,
              co_072_compr_precedence_1_prt_4
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

--check the compress_type of column a1 at partition level
\d+ co_072_compr_precedence_1_prt_1
                              Append-Only Columnar Table "public.co_072_compr_precedence_1_prt_1"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | quicklz          | 1                 | 1048576    | 
 a2     | character(5)                |           | extended | none             | 0                 | 32768      | 
 a3     | text                        |           | extended | none             | 0                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Check constraints:
    "co_072_compr_precedence_1_prt_1_check" CHECK (a1 >= 1 AND a1 < 501)
Inherits: co_072_compr_precedence
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- storage_directive=quicklz;sub partition level column reference=zlib => expected =zlib for the columns at subpartition level
CREATE TABLE CO_08_compr_precedence 
        (a1 int ,a2 char(5),a3 text ENCODING (compresstype=QUICKLZ,compresslevel=1,blocksize=8192),a4 timestamp ,a5 date )  
        WITH (appendonly=true, orientation=column) 
        Partition by range(a1) Subpartition by list(a2) subpartition template 
        ( subpartition part1 values('M') ,
          subpartition part2 values('F'),
          COLUMN a2  ENCODING (compresstype=zlib,compresslevel=1,blocksize=1048576),
          COLUMN a3  ENCODING (compresstype=zlib,compresslevel=1,blocksize=32768)  )      
        (start(1) end(2000) every(500));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_1" for table "co_08_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_2" for table "co_08_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_3" for table "co_08_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_4" for table "co_08_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_1_2_prt_part1" for table "co_08_compr_precedence_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_1_2_prt_part2" for table "co_08_compr_precedence_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_2_2_prt_part1" for table "co_08_compr_precedence_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_2_2_prt_part2" for table "co_08_compr_precedence_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_3_2_prt_part1" for table "co_08_compr_precedence_1_prt_3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_3_2_prt_part2" for table "co_08_compr_precedence_1_prt_3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_4_2_prt_part1" for table "co_08_compr_precedence_1_prt_4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_08_compr_precedence_1_prt_4_2_prt_part2" for table "co_08_compr_precedence_1_prt_4"
CREATE TABLE
        
-- check the compress_type of column a2
\d+ CO_08_compr_precedence 
                                  Append-Only Columnar Table "public.co_08_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | none             | 0                 | 32768      | 
 a2     | character(5)                |           | extended | none             | 0                 | 32768      | 
 a3     | text                        |           | extended | quicklz          | 1                 | 8192       | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Child tables: co_08_compr_precedence_1_prt_1,
              co_08_compr_precedence_1_prt_2,
              co_08_compr_precedence_1_prt_3,
              co_08_compr_precedence_1_prt_4
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

\d+ co_08_compr_precedence_1_prt_1_2_prt_part2
                        Append-Only Columnar Table "public.co_08_compr_precedence_1_prt_1_2_prt_part2"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | none             | 0                 | 32768      | 
 a2     | character(5)                |           | extended | zlib             | 1                 | 1048576    | 
 a3     | text                        |           | extended | zlib             | 1                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Check constraints:
    "co_08_compr_precedence_1_prt_1_2_prt_part2_check" CHECK (a2 = 'F    '::bpchar)
    "co_08_compr_precedence_1_prt_1_check" CHECK (a1 >= 1 AND a1 < 501)
Inherits: co_08_compr_precedence_1_prt_1
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- column_reference=quicklz; sub partition level column reference=zlib => expected =quicklz at subpartition level
CREATE TABLE CO_082_compr_precedence 
        (a1 int ,a2 char(5),a3 text ,a4 timestamp ,a5 date, COLUMN a2 ENCODING (compresstype=ZLIB,compresslevel=1,blocksize=32768) )  
        WITH (appendonly=true, orientation=column) 
        Partition by range(a1) Subpartition by list(a2) subpartition template 
        ( subpartition part1 values('M') ,
          subpartition part2 values('F'),
          COLUMN a2  ENCODING (compresstype=quicklz,compresslevel=1,blocksize=1048576),
          COLUMN a3  ENCODING (compresstype=quicklz,compresslevel=1,blocksize=32768)  )      
        (start(1) end(2000) every(500));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_1" for table "co_082_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_2" for table "co_082_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_3" for table "co_082_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_4" for table "co_082_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_1_2_prt_part1" for table "co_082_compr_precedence_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_1_2_prt_part2" for table "co_082_compr_precedence_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_2_2_prt_part1" for table "co_082_compr_precedence_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_2_2_prt_part2" for table "co_082_compr_precedence_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_3_2_prt_part1" for table "co_082_compr_precedence_1_prt_3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_3_2_prt_part2" for table "co_082_compr_precedence_1_prt_3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_4_2_prt_part1" for table "co_082_compr_precedence_1_prt_4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_082_compr_precedence_1_prt_4_2_prt_part2" for table "co_082_compr_precedence_1_prt_4"
CREATE TABLE
        
-- check the compress_type of column a2
\d+ CO_082_compr_precedence 
                                  Append-Only Columnar Table "public.co_082_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | none             | 0                 | 32768      | 
 a2     | character(5)                |           | extended | zlib             | 1                 | 32768      | 
 a3     | text                        |           | extended | none             | 0                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Child tables: co_082_compr_precedence_1_prt_1,
              co_082_compr_precedence_1_prt_2,
              co_082_compr_precedence_1_prt_3,
              co_082_compr_precedence_1_prt_4
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

\d+ co_082_compr_precedence_1_prt_1_2_prt_part2
                        Append-Only Columnar Table "public.co_082_compr_precedence_1_prt_1_2_prt_part2"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | none             | 0                 | 32768      | 
 a2     | character(5)                |           | extended | quicklz          | 1                 | 1048576    | 
 a3     | text                        |           | extended | quicklz          | 1                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | none             | 0                 | 32768      | 
 a5     | date                        |           | plain    | none             | 0                 | 32768      | 
Checksum: f
Check constraints:
    "co_082_compr_precedence_1_prt_1_2_prt_part2_check" CHECK (a2 = 'F    '::bpchar)
    "co_082_compr_precedence_1_prt_1_check" CHECK (a1 >= 1 AND a1 < 501)
Inherits: co_082_compr_precedence_1_prt_1
Has OIDs: no
Options: appendonly=true, orientation=column
Distributed by: (a1)

-- table level with =zlib; partition level with =quicklz => expected =quicklz
CREATE TABLE CO_09_compr_precedence 
        (a1 int,a2 char(5),a3 text,a4 timestamp ,a5 date )  WITH (appendonly=true, orientation=column,compresstype=zlib) distributed randomly 
        Partition by range(a1) (start(1) end(2000) every(500)   WITH (appendonly=true, orientation=column,compresstype=QUICKLZ,compresslevel=1,blocksize=1048576));
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_09_compr_precedence_1_prt_1" for table "co_09_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_09_compr_precedence_1_prt_2" for table "co_09_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_09_compr_precedence_1_prt_3" for table "co_09_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_09_compr_precedence_1_prt_4" for table "co_09_compr_precedence"
CREATE TABLE
        
-- check the compress_type of column a1
\d+ CO_09_compr_precedence 
                                  Append-Only Columnar Table "public.co_09_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | zlib             | 1                 | 32768      | 
 a2     | character(5)                |           | extended | zlib             | 1                 | 32768      | 
 a3     | text                        |           | extended | zlib             | 1                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | zlib             | 1                 | 32768      | 
 a5     | date                        |           | plain    | zlib             | 1                 | 32768      | 
Checksum: f
Child tables: co_09_compr_precedence_1_prt_1,
              co_09_compr_precedence_1_prt_2,
              co_09_compr_precedence_1_prt_3,
              co_09_compr_precedence_1_prt_4
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=zlib
Distributed randomly

\d+ co_09_compr_precedence_1_prt_1
                              Append-Only Columnar Table "public.co_09_compr_precedence_1_prt_1"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | quicklz          | 1                 | 1048576    | 
 a2     | character(5)                |           | extended | quicklz          | 1                 | 1048576    | 
 a3     | text                        |           | extended | quicklz          | 1                 | 1048576    | 
 a4     | timestamp without time zone |           | plain    | quicklz          | 1                 | 1048576    | 
 a5     | date                        |           | plain    | quicklz          | 1                 | 1048576    | 
Checksum: f
Check constraints:
    "co_09_compr_precedence_1_prt_1_check" CHECK (a1 >= 1 AND a1 < 501)
Inherits: co_09_compr_precedence
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=quicklz, compresslevel=1, blocksize=1048576
Distributed randomly

-- table level with =zlib; subpartition level with =quicklz => expected =quicklz
CREATE TABLE CO_10_compr_precedence 
        (a1 int ,a2 char(5),a3 text ,a4 timestamp ,a5 date)  
        WITH (appendonly=true, orientation=column,compresstype=zlib) distributed randomly
        Partition by range(a1) Subpartition by list(a2) subpartition template 
        ( subpartition part1 values('M') ,
          subpartition part2 values('F') 
          WITH (appendonly=true, orientation=column,compresstype=QUICKLZ,compresslevel=1,blocksize=32768))      
        (start(1) end(2000) every(500));
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_1" for table "co_10_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_2" for table "co_10_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_3" for table "co_10_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_4" for table "co_10_compr_precedence"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_1_2_prt_part1" for table "co_10_compr_precedence_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_1_2_prt_part2" for table "co_10_compr_precedence_1_prt_1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_2_2_prt_part1" for table "co_10_compr_precedence_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_2_2_prt_part2" for table "co_10_compr_precedence_1_prt_2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_3_2_prt_part1" for table "co_10_compr_precedence_1_prt_3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_3_2_prt_part2" for table "co_10_compr_precedence_1_prt_3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_4_2_prt_part1" for table "co_10_compr_precedence_1_prt_4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "co_10_compr_precedence_1_prt_4_2_prt_part2" for table "co_10_compr_precedence_1_prt_4"
CREATE TABLE
        
\d+ CO_10_compr_precedence 
                                  Append-Only Columnar Table "public.co_10_compr_precedence"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | zlib             | 1                 | 32768      | 
 a2     | character(5)                |           | extended | zlib             | 1                 | 32768      | 
 a3     | text                        |           | extended | zlib             | 1                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | zlib             | 1                 | 32768      | 
 a5     | date                        |           | plain    | zlib             | 1                 | 32768      | 
Checksum: f
Child tables: co_10_compr_precedence_1_prt_1,
              co_10_compr_precedence_1_prt_2,
              co_10_compr_precedence_1_prt_3,
              co_10_compr_precedence_1_prt_4
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=zlib
Distributed randomly

\d+ co_10_compr_precedence_1_prt_1_2_prt_part2
                        Append-Only Columnar Table "public.co_10_compr_precedence_1_prt_1_2_prt_part2"
 Column |            Type             | Modifiers | Storage  | Compression Type | Compression Level | Block Size | Description 
--------+-----------------------------+-----------+----------+------------------+-------------------+------------+-------------
 a1     | integer                     |           | plain    | quicklz          | 1                 | 32768      | 
 a2     | character(5)                |           | extended | quicklz          | 1                 | 32768      | 
 a3     | text                        |           | extended | quicklz          | 1                 | 32768      | 
 a4     | timestamp without time zone |           | plain    | quicklz          | 1                 | 32768      | 
 a5     | date                        |           | plain    | quicklz          | 1                 | 32768      | 
Checksum: f
Check constraints:
    "co_10_compr_precedence_1_prt_1_2_prt_part2_check" CHECK (a2 = 'F    '::bpchar)
    "co_10_compr_precedence_1_prt_1_check" CHECK (a1 >= 1 AND a1 < 501)
Inherits: co_10_compr_precedence_1_prt_1
Has OIDs: no
Options: appendonly=true, orientation=column, compresstype=quicklz, compresslevel=1, blocksize=32768
Distributed randomly

