--
-- CK_SYNC1 HEAP TABLE 1
--
create table ck_sync1_heap_alter_part_split_partrange1 (i int) partition by range(i) (start(1) end(10) every(5));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange1_1_prt_1" for table "ck_sync1_heap_alter_part_split_partrange1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange1_1_prt_2" for table "ck_sync1_heap_alter_part_split_partrange1"
CREATE TABLE
--
-- Insert few records into the table
--
insert into ck_sync1_heap_alter_part_split_partrange1 values (generate_series(1,9));
INSERT 0 9
--
-- select from the Table
--
select count(*) from ck_sync1_heap_alter_part_split_partrange1;
 count 
-------
     9
(1 row)

--
-- CK_SYNC1 HEAP TABLE 2
--
create table ck_sync1_heap_alter_part_split_partrange2 (i int) partition by range(i) (start(1) end(10) every(5));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange2_1_prt_1" for table "ck_sync1_heap_alter_part_split_partrange2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange2_1_prt_2" for table "ck_sync1_heap_alter_part_split_partrange2"
CREATE TABLE
--
-- Insert few records into the table
--
insert into ck_sync1_heap_alter_part_split_partrange2 values (generate_series(1,9));
INSERT 0 9
--
-- select from the Table
--
select count(*) from ck_sync1_heap_alter_part_split_partrange2;
 count 
-------
     9
(1 row)

--
-- CK_SYNC1 HEAP TABLE 3
--
create table ck_sync1_heap_alter_part_split_partrange3 (i int) partition by range(i) (start(1) end(10) every(5));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange3_1_prt_1" for table "ck_sync1_heap_alter_part_split_partrange3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange3_1_prt_2" for table "ck_sync1_heap_alter_part_split_partrange3"
CREATE TABLE
--
-- Insert few records into the table
--
insert into ck_sync1_heap_alter_part_split_partrange3 values (generate_series(1,9));
INSERT 0 9
--
-- select from the Table
--
select count(*) from ck_sync1_heap_alter_part_split_partrange3;
 count 
-------
     9
(1 row)

--
-- CK_SYNC1 HEAP TABLE 4
--
create table ck_sync1_heap_alter_part_split_partrange4 (i int) partition by range(i) (start(1) end(10) every(5));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange4_1_prt_1" for table "ck_sync1_heap_alter_part_split_partrange4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange4_1_prt_2" for table "ck_sync1_heap_alter_part_split_partrange4"
CREATE TABLE
--
-- Insert few records into the table
--
insert into ck_sync1_heap_alter_part_split_partrange4 values (generate_series(1,9));
INSERT 0 9
--
-- select from the Table
--
select count(*) from ck_sync1_heap_alter_part_split_partrange4;
 count 
-------
     9
(1 row)

--
-- CK_SYNC1 HEAP TABLE 5
--
create table ck_sync1_heap_alter_part_split_partrange5 (i int) partition by range(i) (start(1) end(10) every(5));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange5_1_prt_1" for table "ck_sync1_heap_alter_part_split_partrange5"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange5_1_prt_2" for table "ck_sync1_heap_alter_part_split_partrange5"
CREATE TABLE
--
-- Insert few records into the table
--
insert into ck_sync1_heap_alter_part_split_partrange5 values (generate_series(1,9));
INSERT 0 9
--
-- select from the Table
--
select count(*) from ck_sync1_heap_alter_part_split_partrange5;
 count 
-------
     9
(1 row)

--
-- CK_SYNC1 HEAP TABLE 6
--
create table ck_sync1_heap_alter_part_split_partrange6 (i int) partition by range(i) (start(1) end(10) every(5));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange6_1_prt_1" for table "ck_sync1_heap_alter_part_split_partrange6"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange6_1_prt_2" for table "ck_sync1_heap_alter_part_split_partrange6"
CREATE TABLE
--
-- Insert few records into the table
--
insert into ck_sync1_heap_alter_part_split_partrange6 values (generate_series(1,9));
INSERT 0 9
--
-- select from the Table
--
select count(*) from ck_sync1_heap_alter_part_split_partrange6;
 count 
-------
     9
(1 row)

--
-- CK_SYNC1 HEAP TABLE 7
--
create table ck_sync1_heap_alter_part_split_partrange7 (i int) partition by range(i) (start(1) end(10) every(5));
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange7_1_prt_1" for table "ck_sync1_heap_alter_part_split_partrange7"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange7_1_prt_2" for table "ck_sync1_heap_alter_part_split_partrange7"
CREATE TABLE
--
-- Insert few records into the table
--
insert into ck_sync1_heap_alter_part_split_partrange7 values (generate_series(1,9));
INSERT 0 9
--
-- select from the Table
--
select count(*) from ck_sync1_heap_alter_part_split_partrange7;
 count 
-------
     9
(1 row)

--
-- ALTER SYNC1 HEAP
--
--
-- Split Partition Range
--
alter table sync1_heap_alter_part_split_partrange2 split partition for(1) at (5) into (partition aa, partition bb);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_heap_alter_part_split_partrange2_1_prt_aa" for table "sync1_heap_alter_part_split_partrange2"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_heap_alter_part_split_partrange2_1_prt_bb" for table "sync1_heap_alter_part_split_partrange2"
ALTER TABLE
--
-- Insert few records into the table
--
insert into sync1_heap_alter_part_split_partrange2 values (generate_series(1,9));
INSERT 0 9
--
-- select from the Table
--
select count(*) from sync1_heap_alter_part_split_partrange2;
 count 
-------
    18
(1 row)

--
-- ALTER CK_SYNC1 HEAP
--
--
-- Split Partition Range
--
alter table ck_sync1_heap_alter_part_split_partrange1 split partition for(1) at (5) into (partition aa, partition bb);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange1_1_prt_aa" for table "ck_sync1_heap_alter_part_split_partrange1"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_heap_alter_part_split_partrange1_1_prt_bb" for table "ck_sync1_heap_alter_part_split_partrange1"
ALTER TABLE
--
-- Insert few records into the table
--
insert into ck_sync1_heap_alter_part_split_partrange1 values (generate_series(1,9));
INSERT 0 9
--
-- select from the Table
--
select count(*) from ck_sync1_heap_alter_part_split_partrange1;
 count 
-------
    18
(1 row)

