-- @Description select into
--
DROP TABLE IF EXISTS uao_orders_into;
DROP TABLE
DROP TABLE IF EXISTS new_uao_orders_into;
DROP TABLE
CREATE TABLE uao_orders_into(order_id serial , customer_id integer,
      order_datetime timestamp, order_total numeric(10,2)) with (appendonly=true, orientation=column);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create implicit sequence "uao_orders_into_order_id_seq" for serial column "uao_orders_into.order_id"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'order_id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
INSERT INTO uao_orders_into(customer_id, order_datetime, order_total)
VALUES (1,'2009-05-01 10:00 AM', 500),
    (1,'2009-05-15 11:00 AM', 650),
    (2,'2009-05-11 11:00 PM', 100),
    (2,'2009-05-12 11:00 PM', 5),
       (3,'2009-04-11 11:00 PM', 100),
          (1,'2009-05-20 11:00 AM', 3);
INSERT 0 6
select * into new_uao_orders_into from uao_orders_into where order_total > 500 order by order_id;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'order_id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 1
select * from new_uao_orders_into;
 order_id | customer_id |   order_datetime    | order_total 
----------+-------------+---------------------+-------------
        2 |           1 | 2009-05-15 11:00:00 |      650.00
(1 row)

