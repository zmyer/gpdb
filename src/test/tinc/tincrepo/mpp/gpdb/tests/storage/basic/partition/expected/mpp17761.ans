-- start_ignore
-- end_ignore
--start_ignore 
drop schema if exists mpp17761 cascade;
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab15_1_prt_e
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab15_1_prt_e_check on table mpp17761.split_tab15_1_prt_e
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab15_1_prt_d
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab15_1_prt_d_check on table mpp17761.split_tab15_1_prt_d
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab15_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab15_1_prt_3_check on append only table mpp17761.split_tab15_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab15_1_prt_2
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab15_1_prt_2_check on append only table mpp17761.split_tab15_1_prt_2
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab15_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab15_1_prt_1_check on append only table mpp17761.split_tab15_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab15
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab5_1_prt_e
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab5_1_prt_e_check on table mpp17761.split_tab5_1_prt_e
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab5_1_prt_d
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab5_1_prt_d_check on table mpp17761.split_tab5_1_prt_d
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab5_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab5_1_prt_b_check on append only table mpp17761.split_tab5_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab5_1_prt_a
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab5_1_prt_a_check on append only table mpp17761.split_tab5_1_prt_a
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab5
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab4_1_prt_dft
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab4_1_prt_c
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab4_1_prt_c_check on append only columnar table mpp17761.split_tab4_1_prt_c
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab4_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab4_1_prt_b_check on append only columnar table mpp17761.split_tab4_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab4_1_prt_a
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab4_1_prt_a_check on append only columnar table mpp17761.split_tab4_1_prt_a
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab4
psql:/path/sql_file:1: NOTICE:  drop cascades to default for append only columnar table mpp17761.split_tab4 column id
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab14_1_prt_co2
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab14_1_prt_co2_check on table mpp17761.split_tab14_1_prt_co2
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab14_1_prt_co1
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab14_1_prt_co1_check on table mpp17761.split_tab14_1_prt_co1
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab14_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab14_1_prt_4_check on table mpp17761.split_tab14_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab14_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab14_1_prt_3_check on table mpp17761.split_tab14_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab14_1_prt_2
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab14_1_prt_2_check on table mpp17761.split_tab14_1_prt_2
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab14_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab14_1_prt_1_check on table mpp17761.split_tab14_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab14
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab13_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab13_1_prt_two_check on append only table mpp17761.split_tab13_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab13_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab13_1_prt_one_check on append only table mpp17761.split_tab13_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab13_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab13_1_prt_b_check on table mpp17761.split_tab13_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab13
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab12_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab12_1_prt_two_check on append only columnar table mpp17761.split_tab12_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab12_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab12_1_prt_one_check on append only columnar table mpp17761.split_tab12_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab12_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab12_1_prt_b_check on table mpp17761.split_tab12_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab12
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab11_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab11_1_prt_two_check on table mpp17761.split_tab11_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab11_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab11_1_prt_one_check on table mpp17761.split_tab11_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab11_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab11_1_prt_b_check on table mpp17761.split_tab11_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab11
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab10_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab10_1_prt_two_check on append only table mpp17761.split_tab10_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab10_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab10_1_prt_one_check on append only table mpp17761.split_tab10_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab10_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab10_1_prt_b_check on append only table mpp17761.split_tab10_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab10
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab3_1_prt_co2
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab3_1_prt_co2_check on append only columnar table mpp17761.split_tab3_1_prt_co2
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab3_1_prt_co1
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab3_1_prt_co1_check on append only columnar table mpp17761.split_tab3_1_prt_co1
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab3_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab3_1_prt_4_check on append only columnar table mpp17761.split_tab3_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab3_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab3_1_prt_3_check on append only columnar table mpp17761.split_tab3_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab3_1_prt_2
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab3_1_prt_2_check on append only columnar table mpp17761.split_tab3_1_prt_2
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab3_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab3_1_prt_1_check on append only columnar table mpp17761.split_tab3_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab3
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab9_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab9_1_prt_two_check on table mpp17761.split_tab9_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab9_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab9_1_prt_one_check on table mpp17761.split_tab9_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab9_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab9_1_prt_b_check on table mpp17761.split_tab9_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab9
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab8_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab8_1_prt_two_check on append only table mpp17761.split_tab8_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab8_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab8_1_prt_one_check on append only table mpp17761.split_tab8_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab8_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab8_1_prt_b_check on append only columnar table mpp17761.split_tab8_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab8_1_prt_a
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab8_1_prt_a_check on append only columnar table mpp17761.split_tab8_1_prt_a
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab8
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab2_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab2_1_prt_two_check on append only columnar table mpp17761.split_tab2_1_prt_two
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab2_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab2_1_prt_one_check on append only columnar table mpp17761.split_tab2_1_prt_one
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab2_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab2_1_prt_b_check on append only columnar table mpp17761.split_tab2_1_prt_b
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab2
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab7_1_prt_splitd
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab7_1_prt_splitd_check on table mpp17761.split_tab7_1_prt_splitd
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab7_1_prt_splitc
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab7_1_prt_splitc_check on table mpp17761.split_tab7_1_prt_splitc
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab7_1_prt_5
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab7_1_prt_5_check on table mpp17761.split_tab7_1_prt_5
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab7_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab7_1_prt_4_check on table mpp17761.split_tab7_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab7_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab7_1_prt_3_check on table mpp17761.split_tab7_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab7_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab7_1_prt_1_check on table mpp17761.split_tab7_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to table mpp17761.split_tab7
psql:/path/sql_file:1: NOTICE:  drop cascades to default for table mpp17761.split_tab7 column id
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab6_1_prt_splitd
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab6_1_prt_splitd_check on append only table mpp17761.split_tab6_1_prt_splitd
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab6_1_prt_splitc
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab6_1_prt_splitc_check on append only table mpp17761.split_tab6_1_prt_splitc
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab6_1_prt_5
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab6_1_prt_5_check on append only table mpp17761.split_tab6_1_prt_5
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab6_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab6_1_prt_4_check on append only table mpp17761.split_tab6_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab6_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab6_1_prt_3_check on append only table mpp17761.split_tab6_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab6_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab6_1_prt_1_check on append only table mpp17761.split_tab6_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to append only table mpp17761.split_tab6
psql:/path/sql_file:1: NOTICE:  drop cascades to default for append only table mpp17761.split_tab6 column id
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab1_1_prt_splitd
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab1_1_prt_splitd_check on append only columnar table mpp17761.split_tab1_1_prt_splitd
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab1_1_prt_splitc
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab1_1_prt_splitc_check on append only columnar table mpp17761.split_tab1_1_prt_splitc
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab1_1_prt_5
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab1_1_prt_5_check on append only columnar table mpp17761.split_tab1_1_prt_5
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab1_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab1_1_prt_4_check on append only columnar table mpp17761.split_tab1_1_prt_4
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab1_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab1_1_prt_3_check on append only columnar table mpp17761.split_tab1_1_prt_3
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab1_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to constraint split_tab1_1_prt_1_check on append only columnar table mpp17761.split_tab1_1_prt_1
psql:/path/sql_file:1: NOTICE:  drop cascades to append only columnar table mpp17761.split_tab1
psql:/path/sql_file:1: NOTICE:  drop cascades to default for append only columnar table mpp17761.split_tab1 column id
DROP SCHEMA
create schema mpp17761;
CREATE SCHEMA
--end_ignore
\echo '-- CASE#1 ( CO table )'
-- CASE#1 ( CO table )
CREATE TABLE mpp17761.split_tab1
        (id SERIAL,a1 int,a2 char(5),a3 numeric,a4 boolean DEFAULT false ,a5 char DEFAULT 'd')  WITH (appendonly=true, orientation=column) distributed randomly
 Partition by range(a1) (start(1)  end(5000) every(1000) ,
 COLUMN  a1 ENCODING (compresstype=quicklz,compresslevel=1,blocksize=8192),
 COLUMN a5 ENCODING (compresstype=zlib,compresslevel=1, blocksize=8192),
 DEFAULT COLUMN ENCODING (compresstype=quicklz,compresslevel=1,blocksize=8192));
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create implicit sequence "split_tab1_id_seq" for serial column "split_tab1.id"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab1_1_prt_1" for table "split_tab1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab1_1_prt_2" for table "split_tab1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab1_1_prt_3" for table "split_tab1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab1_1_prt_4" for table "split_tab1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab1_1_prt_5" for table "split_tab1"
CREATE TABLE
Alter table mpp17761.split_tab1 split partition FOR (RANK(2)) at(1050) into (partition splitc,partition splitd) ;
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab1_1_prt_splitc" for table "split_tab1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab1_1_prt_splitd" for table "split_tab1"
ALTER TABLE
 select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab1_1_prt_splitc','split_tab1_1_prt_splitd','split_tab1','split_tab1_1_prt_1'));
               oid                | relkind | relstorage |              reloptions              
----------------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab1_1_prt_1      | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab1              | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab1_1_prt_splitc | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab1_1_prt_splitd | r       | c          | {appendonly=true,orientation=column}
(4 rows)

\echo '-- CASE#2 ( AO TABLE )'
-- CASE#2 ( AO TABLE )
CREATE TABLE mpp17761.split_tab6(id SERIAL,a1 int,a2 char(5),a3 numeric,a4 boolean DEFAULT false ,a5 char DEFAULT 'd')  
WITH (appendonly=true,compresstype=quicklz,compresslevel=1 ) distributed by (a5)
Partition by range(a1) 
(
    start(1)  end(5000) every(1000)
);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create implicit sequence "split_tab6_id_seq" for serial column "split_tab6.id"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab6_1_prt_1" for table "split_tab6"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab6_1_prt_2" for table "split_tab6"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab6_1_prt_3" for table "split_tab6"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab6_1_prt_4" for table "split_tab6"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab6_1_prt_5" for table "split_tab6"
CREATE TABLE
Alter table mpp17761.split_tab6 split partition FOR (RANK(2)) at(1050) into (partition splitc,partition splitd) ;
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab6_1_prt_splitc" for table "split_tab6"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab6_1_prt_splitd" for table "split_tab6"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab6_1_prt_splitc','split_tab6_1_prt_splitd','split_tab6','split_tab6_1_prt_1'));
               oid                | relkind | relstorage |                       reloptions                       
----------------------------------+---------+------------+--------------------------------------------------------
 mpp17761.split_tab6_1_prt_1      | r       | a          | {appendonly=true,compresstype=quicklz,compresslevel=1}
 mpp17761.split_tab6              | r       | a          | {appendonly=true,compresstype=quicklz,compresslevel=1}
 mpp17761.split_tab6_1_prt_splitc | r       | a          | {appendonly=true,compresstype=quicklz,compresslevel=1}
 mpp17761.split_tab6_1_prt_splitd | r       | a          | {appendonly=true,compresstype=quicklz,compresslevel=1}
(4 rows)

\echo '-- CASE#3 ( HEAP TABLE )'
-- CASE#3 ( HEAP TABLE )
CREATE TABLE mpp17761.split_tab7(id SERIAL,a1 int,a2 char(5),a3 numeric,a4 boolean DEFAULT false ,a5 char DEFAULT 'd')  
WITH (appendonly = false ) distributed by (a5)
Partition by range(a1) 
(
    start(1)  end(5000) every(1000)
);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create implicit sequence "split_tab7_id_seq" for serial column "split_tab7.id"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab7_1_prt_1" for table "split_tab7"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab7_1_prt_2" for table "split_tab7"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab7_1_prt_3" for table "split_tab7"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab7_1_prt_4" for table "split_tab7"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab7_1_prt_5" for table "split_tab7"
CREATE TABLE
Alter table mpp17761.split_tab7 split partition FOR (RANK(2)) at(1050) into (partition splitc,partition splitd) ;
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab7_1_prt_splitc" for table "split_tab7"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab7_1_prt_splitd" for table "split_tab7"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab7_1_prt_splitc','split_tab7_1_prt_splitd','split_tab7','split_tab7_1_prt_1'));
               oid                | relkind | relstorage |     reloptions     
----------------------------------+---------+------------+--------------------
 mpp17761.split_tab7_1_prt_1      | r       | h          | {appendonly=false}
 mpp17761.split_tab7              | r       | h          | {appendonly=false}
 mpp17761.split_tab7_1_prt_splitc | r       | h          | {appendonly=false}
 mpp17761.split_tab7_1_prt_splitd | r       | h          | {appendonly=false}
(4 rows)

\echo '-- CASE#4 ( PARENT: AO CHILD: CO )'
-- CASE#4 ( PARENT: AO CHILD: CO )
create table mpp17761.split_tab2( a int, b int) with (appendonly=true) partition by list(b) 
(
    partition a values (1,2,3,4) with (appendonly = true, orientation=column), 
    partition b values(5,6,7,8) with (appendonly = true, orientation=column)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab2_1_prt_a" for table "split_tab2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab2_1_prt_b" for table "split_tab2"
CREATE TABLE
alter table mpp17761.split_tab2 split partition for(2) at(2) into (partition one,partition two);
psql:/path/sql_file:1: NOTICE:  exchanged partition "a" of relation "split_tab2" with relation "pg_temp_3289041"
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "split_tab2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab2_1_prt_one" for table "split_tab2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab2_1_prt_two" for table "split_tab2"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab2_1_prt_one','split_tab2_1_prt_two','split_tab2_1_prt_b','split_tab2'));
              oid              | relkind | relstorage |              reloptions              
-------------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab2_1_prt_b   | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab2           | r       | a          | {appendonly=true}
 mpp17761.split_tab2_1_prt_one | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab2_1_prt_two | r       | c          | {appendonly=true,orientation=column}
(4 rows)

\echo '-- CASE#5 ( PARENT: AO CHILD: AO )'
-- CASE#5 ( PARENT: AO CHILD: AO )
create table mpp17761.split_tab8( a int, b int) with (appendonly=true) partition by list(b) 
(
    partition a values (1,2,3,4) with (appendonly = true, orientation=column), 
    partition b values(5,6,7,8) with (appendonly = true, orientation=column)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab8_1_prt_a" for table "split_tab8"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab8_1_prt_b" for table "split_tab8"
CREATE TABLE
alter table mpp17761.split_tab8 add partition c values (11,12,13) with (appendonly=true);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab8_1_prt_c" for table "split_tab8"
ALTER TABLE
alter table mpp17761.split_tab8 split partition c at (12) into (partition one,partition two);
psql:/path/sql_file:1: NOTICE:  exchanged partition "c" of relation "split_tab8" with relation "pg_temp_3289326"
psql:/path/sql_file:1: NOTICE:  dropped partition "c" for relation "split_tab8"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab8_1_prt_one" for table "split_tab8"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab8_1_prt_two" for table "split_tab8"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select relfilenode from pg_class where relname in  ( 'split_tab8_1_prt_one','split_tab8_1_prt_two','split_tab8_1_prt_b','split_tab8'));
              oid              | relkind | relstorage |              reloptions              
-------------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab8_1_prt_b   | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab8           | r       | a          | {appendonly=true}
 mpp17761.split_tab8_1_prt_one | r       | a          | {appendonly=true}
 mpp17761.split_tab8_1_prt_two | r       | a          | {appendonly=true}
(4 rows)

\echo '-- CASE#6 ( PARENT: AO CHILD: HEAP )'
-- CASE#6 ( PARENT: AO CHILD: HEAP )
create table mpp17761.split_tab9( a int, b int) with (appendonly=true) partition by list(b) 
(
    partition a values (1,2,3,4) with (appendonly = false ), 
    partition b values(5,6,7,8) with (appendonly = false)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab9_1_prt_a" for table "split_tab9"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab9_1_prt_b" for table "split_tab9"
CREATE TABLE
alter table mpp17761.split_tab9 split partition for(2) at(2) into (partition one,partition two);
psql:/path/sql_file:1: NOTICE:  exchanged partition "a" of relation "split_tab9" with relation "pg_temp_3289665"
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "split_tab9"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab9_1_prt_one" for table "split_tab9"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab9_1_prt_two" for table "split_tab9"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab9_1_prt_one','split_tab9_1_prt_two','split_tab9_1_prt_b','split_tab9'));
              oid              | relkind | relstorage |     reloptions     
-------------------------------+---------+------------+--------------------
 mpp17761.split_tab9_1_prt_b   | r       | h          | {appendonly=false}
 mpp17761.split_tab9           | r       | a          | {appendonly=true}
 mpp17761.split_tab9_1_prt_one | r       | h          | {appendonly=false}
 mpp17761.split_tab9_1_prt_two | r       | h          | {appendonly=false}
(4 rows)

\echo '-- CASE#7 ( PARENT: CO CHILD: CO )'
-- CASE#7 ( PARENT: CO CHILD: CO )
CREATE TABLE mpp17761.split_tab3 (a int, b text) with (appendonly=true, orientation=column, compresstype=quicklz, compresslevel=1)
distributed by (a)
partition by range(a)
(
    start(1) end(20) every(5)
);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab3_1_prt_1" for table "split_tab3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab3_1_prt_2" for table "split_tab3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab3_1_prt_3" for table "split_tab3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab3_1_prt_4" for table "split_tab3"
CREATE TABLE
alter table mpp17761.split_tab3 add partition co start(31) end(35) with (appendonly=true,orientation=column);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab3_1_prt_co" for table "split_tab3"
ALTER TABLE
alter table mpp17761.split_tab3 split partition co  at (33) into (partition co1,partition co2);
psql:/path/sql_file:1: NOTICE:  exchanged partition "co" of relation "split_tab3" with relation "pg_temp_3289934"
psql:/path/sql_file:1: NOTICE:  dropped partition "co" for relation "split_tab3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab3_1_prt_co1" for table "split_tab3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab3_1_prt_co2" for table "split_tab3"
ALTER TABLE
 select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab3_1_prt_1','split_tab3_1_prt_co1','split_tab3'));
              oid              | relkind | relstorage |                                reloptions                                 
-------------------------------+---------+------------+---------------------------------------------------------------------------
 mpp17761.split_tab3_1_prt_1   | r       | c          | {appendonly=true,orientation=column,compresstype=quicklz,compresslevel=1}
 mpp17761.split_tab3           | r       | c          | {appendonly=true,orientation=column,compresstype=quicklz,compresslevel=1}
 mpp17761.split_tab3_1_prt_co1 | r       | c          | {appendonly=true,orientation=column}
(3 rows)

\echo '-- CASE#8 ( PARENT: CO CHILD: AO )'
-- CASE#8 ( PARENT: CO CHILD: AO )
create table mpp17761.split_tab10( a int, b int) with (appendonly=true,orientation=column) partition by list(b) 
(
    partition a values (1,2,3,4) with (appendonly = true ), 
    partition b values(5,6,7,8) with (appendonly = true)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab10_1_prt_a" for table "split_tab10"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab10_1_prt_b" for table "split_tab10"
CREATE TABLE
alter table mpp17761.split_tab10 split partition for(2) at(2) into (partition one,partition two);
psql:/path/sql_file:1: NOTICE:  exchanged partition "a" of relation "split_tab10" with relation "pg_temp_3290377"
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "split_tab10"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab10_1_prt_one" for table "split_tab10"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab10_1_prt_two" for table "split_tab10"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab10_1_prt_one','split_tab10_1_prt_two','split_tab10_1_prt_b','split_tab10'));
              oid               | relkind | relstorage |              reloptions              
--------------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab10_1_prt_b   | r       | a          | {appendonly=true}
 mpp17761.split_tab10           | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab10_1_prt_one | r       | a          | {appendonly=true}
 mpp17761.split_tab10_1_prt_two | r       | a          | {appendonly=true}
(4 rows)

\echo '-- CASE#9 ( PARENT: CO CHILD: HEAP )'
-- CASE#9 ( PARENT: CO CHILD: HEAP )
create table mpp17761.split_tab11( a int, b int) with (appendonly=true,orientation=column) partition by list(b) 
(
    partition a values (1,2,3,4) with (appendonly = false ), 
    partition b values(5,6,7,8) with (appendonly = false)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab11_1_prt_a" for table "split_tab11"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab11_1_prt_b" for table "split_tab11"
CREATE TABLE
alter table mpp17761.split_tab11 split partition for(2) at(2) into (partition one,partition two);
psql:/path/sql_file:1: NOTICE:  exchanged partition "a" of relation "split_tab11" with relation "pg_temp_3290662"
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "split_tab11"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab11_1_prt_one" for table "split_tab11"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab11_1_prt_two" for table "split_tab11"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab11_1_prt_one','split_tab11_1_prt_two','split_tab11_1_prt_b','split_tab11'));
              oid               | relkind | relstorage |              reloptions              
--------------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab11_1_prt_b   | r       | h          | {appendonly=false}
 mpp17761.split_tab11           | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab11_1_prt_one | r       | h          | {appendonly=false}
 mpp17761.split_tab11_1_prt_two | r       | h          | {appendonly=false}
(4 rows)

\echo '-- CASE#10 ( PARENT: HEAP CHILD: CO )'
-- CASE#10 ( PARENT: HEAP CHILD: CO )
create table mpp17761.split_tab12( a int, b int) with (appendonly=false) partition by list(b) 
(
    partition a values (1,2,3,4) with (appendonly = true, orientation=column ), 
    partition b values(5,6,7,8) with (appendonly = false)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab12_1_prt_a" for table "split_tab12"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab12_1_prt_b" for table "split_tab12"
CREATE TABLE
alter table mpp17761.split_tab12 split partition for(2) at(2) into (partition one,partition two);
psql:/path/sql_file:1: NOTICE:  exchanged partition "a" of relation "split_tab12" with relation "pg_temp_3290931"
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "split_tab12"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab12_1_prt_one" for table "split_tab12"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab12_1_prt_two" for table "split_tab12"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab12_1_prt_one','split_tab12_1_prt_two','split_tab12_1_prt_b','split_tab12'));
              oid               | relkind | relstorage |              reloptions              
--------------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab12_1_prt_b   | r       | h          | {appendonly=false}
 mpp17761.split_tab12           | r       | h          | {appendonly=false}
 mpp17761.split_tab12_1_prt_one | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab12_1_prt_two | r       | c          | {appendonly=true,orientation=column}
(4 rows)

\echo '-- CASE#11 ( PARENT: HEAP CHILD: AO )'
-- CASE#11 ( PARENT: HEAP CHILD: AO )
create table mpp17761.split_tab13( a int, b int) with (appendonly=false) partition by list(b) 
(
    partition a values (1,2,3,4) with (appendonly = true,compresstype=quicklz, compresslevel=1 ), 
    partition b values(5,6,7,8) with (appendonly = false)
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab13_1_prt_a" for table "split_tab13"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab13_1_prt_b" for table "split_tab13"
CREATE TABLE
alter table mpp17761.split_tab13 split partition for(2) at(2) into (partition one,partition two);
psql:/path/sql_file:1: NOTICE:  exchanged partition "a" of relation "split_tab13" with relation "pg_temp_3291208"
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "split_tab13"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab13_1_prt_one" for table "split_tab13"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab13_1_prt_two" for table "split_tab13"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab13_1_prt_one','split_tab13_1_prt_two','split_tab13_1_prt_b','split_tab13'));
              oid               | relkind | relstorage |                       reloptions                       
--------------------------------+---------+------------+--------------------------------------------------------
 mpp17761.split_tab13_1_prt_b   | r       | h          | {appendonly=false}
 mpp17761.split_tab13           | r       | h          | {appendonly=false}
 mpp17761.split_tab13_1_prt_one | r       | a          | {appendonly=true,compresstype=quicklz,compresslevel=1}
 mpp17761.split_tab13_1_prt_two | r       | a          | {appendonly=true,compresstype=quicklz,compresslevel=1}
(4 rows)

\echo '-- CASE#12 ( PARENT: HEAP CHILD: HEAP )'
-- CASE#12 ( PARENT: HEAP CHILD: HEAP )
CREATE TABLE mpp17761.split_tab14 (a int, b text) with (appendonly=false )
distributed by (a)
partition by range(a)
(
    start(1) end(20) every(5)
);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab14_1_prt_1" for table "split_tab14"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab14_1_prt_2" for table "split_tab14"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab14_1_prt_3" for table "split_tab14"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab14_1_prt_4" for table "split_tab14"
CREATE TABLE
alter table mpp17761.split_tab14 add partition co start(31) end(35) with (appendonly= false);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab14_1_prt_co" for table "split_tab14"
ALTER TABLE
alter table mpp17761.split_tab14 split partition co  at (33) into (partition co1,partition co2);
psql:/path/sql_file:1: NOTICE:  exchanged partition "co" of relation "split_tab14" with relation "pg_temp_3291485"
psql:/path/sql_file:1: NOTICE:  dropped partition "co" for relation "split_tab14"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab14_1_prt_co1" for table "split_tab14"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab14_1_prt_co2" for table "split_tab14"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab14_1_prt_1','split_tab14_1_prt_co1','split_tab14_1_prt_co1','split_tab14'));
              oid               | relkind | relstorage |     reloptions     
--------------------------------+---------+------------+--------------------
 mpp17761.split_tab14_1_prt_1   | r       | h          | {appendonly=false}
 mpp17761.split_tab14           | r       | h          | {appendonly=false}
 mpp17761.split_tab14_1_prt_co1 | r       | h          | {appendonly=false}
(3 rows)

\echo '--CASE#13 (CO table with default partition )'
--CASE#13 (CO table with default partition )
CREATE TABLE mpp17761.split_tab4( id SERIAL,a1 int,a2 text,a3 numeric,a4 boolean DEFAULT false ,a5 char DEFAULT 'd',COLUMN a3 ENCODING (compresstype=zlib,compresslevel=1, blocksize=8192 )) with (appendonly=true, orientation=column)
partition by list(a3)
(
    partition a values(1.0,2.0,3.0,4.0) ,
    partition b values(5.0,6.0,7.0,8.0) ,
    default partition dft
);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create implicit sequence "split_tab4_id_seq" for serial column "split_tab4.id"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab4_1_prt_a" for table "split_tab4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab4_1_prt_b" for table "split_tab4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab4_1_prt_dft" for table "split_tab4"
CREATE TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab4_1_prt_a','split_tab4','split_tab4_1_prt_dft'));
              oid              | relkind | relstorage |              reloptions              
-------------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab4_1_prt_a   | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab4_1_prt_dft | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab4           | r       | c          | {appendonly=true,orientation=column}
(3 rows)

alter table mpp17761.split_tab4 split default partition at (20.0) into  (partition dft,partition c);
psql:/path/sql_file:1: NOTICE:  exchanged partition "dft" of relation "split_tab4" with relation "pg_temp_3291898"
psql:/path/sql_file:1: NOTICE:  dropped partition "dft" for relation "split_tab4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab4_1_prt_c" for table "split_tab4"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab4_1_prt_dft" for table "split_tab4"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab4_1_prt_a','split_tab4','split_tab4_1_prt_dft','split_tab4_1_prt_c'));
              oid              | relkind | relstorage |              reloptions              
-------------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab4_1_prt_a   | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab4           | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab4_1_prt_c   | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab4_1_prt_dft | r       | c          | {appendonly=true,orientation=column}
(4 rows)

\echo '-- CASE#14 ( CO table , add heap partition , split)'
-- CASE#14 ( CO table , add heap partition , split)
create table mpp17761.split_tab5( a int, b int, c char(5), d boolean default true) with (appendonly=true, orientation=column ) 
distributed randomly 
partition by list(b)
(
    partition a values (1,2,3,4) with (appendonly = true), 
    partition b values(5,6,7,8) with (appendonly = true),
    DEFAULT COLUMN ENCODING (compresstype=zlib,compresslevel=5)
);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab5_1_prt_a" for table "split_tab5"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab5_1_prt_b" for table "split_tab5"
CREATE TABLE
alter table mpp17761.split_tab5 add partition c values (10,11,12,13) with (appendonly = false); 
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab5_1_prt_c" for table "split_tab5"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab5_1_prt_a','split_tab5_1_prt_b','split_tab5_1_prt_c','split_tab5'));
             oid             | relkind | relstorage |              reloptions              
-----------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab5_1_prt_a | r       | a          | {appendonly=true}
 mpp17761.split_tab5_1_prt_b | r       | a          | {appendonly=true}
 mpp17761.split_tab5         | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab5_1_prt_c | r       | h          | {appendonly=false}
(4 rows)

alter table mpp17761.split_tab5 split partition c at(12) into (partition d,partition e);
psql:/path/sql_file:1: NOTICE:  exchanged partition "c" of relation "split_tab5" with relation "pg_temp_3292258"
psql:/path/sql_file:1: NOTICE:  dropped partition "c" for relation "split_tab5"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab5_1_prt_d" for table "split_tab5"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab5_1_prt_e" for table "split_tab5"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab5_1_prt_a','split_tab5_1_prt_b','split_tab5_1_prt_d','split_tab5'));
             oid             | relkind | relstorage |              reloptions              
-----------------------------+---------+------------+--------------------------------------
 mpp17761.split_tab5_1_prt_a | r       | a          | {appendonly=true}
 mpp17761.split_tab5_1_prt_b | r       | a          | {appendonly=true}
 mpp17761.split_tab5         | r       | c          | {appendonly=true,orientation=column}
 mpp17761.split_tab5_1_prt_d | r       | h          | {appendonly=false}
(4 rows)

\echo '-- CASE#15 ( AO table , add Heap partition, split )'
-- CASE#15 ( AO table , add Heap partition, split )
create table mpp17761.split_tab15( a int, b int, c char(5), d boolean default true) with (appendonly=true) 
distributed randomly 
partition by range(b)
(start(1) end(25) every(10));
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab15_1_prt_1" for table "split_tab15"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab15_1_prt_2" for table "split_tab15"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab15_1_prt_3" for table "split_tab15"
CREATE TABLE
--add heap partition
alter table mpp17761.split_tab15 add partition c start(25) end(30) with (appendonly = false); 
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab15_1_prt_c" for table "split_tab15"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab15_1_prt_1','split_tab15_1_prt_2','split_tab15_1_prt_c','split_tab15'));
             oid              | relkind | relstorage |     reloptions     
------------------------------+---------+------------+--------------------
 mpp17761.split_tab15_1_prt_1 | r       | a          | {appendonly=true}
 mpp17761.split_tab15_1_prt_2 | r       | a          | {appendonly=true}
 mpp17761.split_tab15         | r       | a          | {appendonly=true}
 mpp17761.split_tab15_1_prt_c | r       | h          | {appendonly=false}
(4 rows)

--split heap partition
alter table mpp17761.split_tab15 split partition c at(27) into (partition d,partition e);
psql:/path/sql_file:1: NOTICE:  exchanged partition "c" of relation "split_tab15" with relation "pg_temp_3292592"
psql:/path/sql_file:1: NOTICE:  dropped partition "c" for relation "split_tab15"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab15_1_prt_d" for table "split_tab15"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "split_tab15_1_prt_e" for table "split_tab15"
ALTER TABLE
select oid::regclass, relkind, relstorage, reloptions from pg_class where oid in ( select  relfilenode from pg_class where   relname in  ( 'split_tab15_1_prt_1','split_tab15_1_prt_2','split_tab15','split_tab15_1_prt_e'));
             oid              | relkind | relstorage |     reloptions     
------------------------------+---------+------------+--------------------
 mpp17761.split_tab15_1_prt_1 | r       | a          | {appendonly=true}
 mpp17761.split_tab15_1_prt_2 | r       | a          | {appendonly=true}
 mpp17761.split_tab15         | r       | a          | {appendonly=true}
 mpp17761.split_tab15_1_prt_e | r       | h          | {appendonly=false}
(4 rows)

