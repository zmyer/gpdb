--
-- RESYNC CO TABLE 1
--
create table resync_co_alter_part_split_partlist1 (i int)  with ( appendonly='true', orientation='column') partition by list(i) (partition a values(1, 2, 3, 4),
partition b values(5, 6, 7, 8), default partition default_part);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist1_1_prt_a" for table "resync_co_alter_part_split_partlist1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist1_1_prt_b" for table "resync_co_alter_part_split_partlist1"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist1_1_prt_default_part" for table "resync_co_alter_part_split_partlist1"
CREATE TABLE
--
-- Insert few records into the table
--
insert into resync_co_alter_part_split_partlist1 values (generate_series(1,10));
INSERT 0 10
--
-- select from the Table
--
select count(*) from resync_co_alter_part_split_partlist1;
 count 
-------
    10
(1 row)

--
-- RESYNC CO TABLE 2
--
create table resync_co_alter_part_split_partlist2 (i int)  with ( appendonly='true', orientation='column') partition by list(i) (partition a values(1, 2, 3, 4),
partition b values(5, 6, 7, 8), default partition default_part);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist2_1_prt_a" for table "resync_co_alter_part_split_partlist2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist2_1_prt_b" for table "resync_co_alter_part_split_partlist2"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist2_1_prt_default_part" for table "resync_co_alter_part_split_partlist2"
CREATE TABLE
--
-- Insert few records into the table
--
insert into resync_co_alter_part_split_partlist2 values (generate_series(1,10));
INSERT 0 10
--
-- select from the Table
--
select count(*) from resync_co_alter_part_split_partlist2;
 count 
-------
    10
(1 row)

--
-- RESYNC CO TABLE 3
--
create table resync_co_alter_part_split_partlist3 (i int)  with ( appendonly='true', orientation='column') partition by list(i) (partition a values(1, 2, 3, 4),
partition b values(5, 6, 7, 8), default partition default_part);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist3_1_prt_a" for table "resync_co_alter_part_split_partlist3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist3_1_prt_b" for table "resync_co_alter_part_split_partlist3"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist3_1_prt_default_part" for table "resync_co_alter_part_split_partlist3"
CREATE TABLE
--
-- Insert few records into the table
--
insert into resync_co_alter_part_split_partlist3 values (generate_series(1,10));
INSERT 0 10
--
-- select from the Table
--
select count(*) from resync_co_alter_part_split_partlist3;
 count 
-------
    10
(1 row)

--
--ALTER SYNC1 CO TABLE
--
--
-- split partition
--
alter table sync1_co_alter_part_split_partlist6 split partition for(1) at (1,2) into (partition f1a, partition f1b);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "sync1_co_alter_part_split_partlist6"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_split_partlist6_1_prt_f1a" for table "sync1_co_alter_part_split_partlist6"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "sync1_co_alter_part_split_partlist6_1_prt_f1b" for table "sync1_co_alter_part_split_partlist6"
ALTER TABLE
--
-- Insert few records into the table
--
insert into sync1_co_alter_part_split_partlist6 values (generate_series(1,10));
INSERT 0 10
--
-- Alter the table set distributed by 
--
Alter table sync1_co_alter_part_split_partlist6  set with ( reorganize='true') distributed randomly;
ALTER TABLE
--
-- select from the Table
--
select count(*) from sync1_co_alter_part_split_partlist6;
 count 
-------
    20
(1 row)

--
--ALTER CK_SYNC1 CO TABLE
--
--
-- split partition
--
alter table ck_sync1_co_alter_part_split_partlist5 split partition for(1) at (1,2) into (partition f1a, partition f1b);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "ck_sync1_co_alter_part_split_partlist5"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_co_alter_part_split_partlist5_1_prt_f1a" for table "ck_sync1_co_alter_part_split_partlist5"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ck_sync1_co_alter_part_split_partlist5_1_prt_f1b" for table "ck_sync1_co_alter_part_split_partlist5"
ALTER TABLE
--
-- Insert few records into the table
--
insert into ck_sync1_co_alter_part_split_partlist5 values (generate_series(1,10));
INSERT 0 10
--
-- Alter the table set distributed by 
--
Alter table ck_sync1_co_alter_part_split_partlist5  set with ( reorganize='true') distributed randomly;
ALTER TABLE
--
-- select from the Table
--
select count(*) from ck_sync1_co_alter_part_split_partlist5;
 count 
-------
    20
(1 row)


--
--ALTER CT CO TABLE
--
--
-- split partition
--
alter table ct_co_alter_part_split_partlist3 split partition for(1) at (1,2) into (partition f1a, partition f1b);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "ct_co_alter_part_split_partlist3"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ct_co_alter_part_split_partlist3_1_prt_f1a" for table "ct_co_alter_part_split_partlist3"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "ct_co_alter_part_split_partlist3_1_prt_f1b" for table "ct_co_alter_part_split_partlist3"
ALTER TABLE
--
-- Insert few records into the table
--
insert into ct_co_alter_part_split_partlist3 values (generate_series(1,10));
INSERT 0 10
--
-- Alter the table set distributed by 
--
Alter table ct_co_alter_part_split_partlist3  set with ( reorganize='true') distributed randomly;
ALTER TABLE
--
-- select from the Table
--
select count(*) from ct_co_alter_part_split_partlist3;
 count 
-------
    20
(1 row)

--
--ALTER RESYNC CO TABLE
--
--
-- split partition
--
alter table resync_co_alter_part_split_partlist1 split partition for(1) at (1,2) into (partition f1a, partition f1b);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  dropped partition "a" for relation "resync_co_alter_part_split_partlist1"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist1_1_prt_f1a" for table "resync_co_alter_part_split_partlist1"
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "resync_co_alter_part_split_partlist1_1_prt_f1b" for table "resync_co_alter_part_split_partlist1"
ALTER TABLE
--
-- Insert few records into the table
--
insert into resync_co_alter_part_split_partlist1 values (generate_series(1,10));
INSERT 0 10
--
-- Alter the table set distributed by 
--
Alter table resync_co_alter_part_split_partlist1  set with ( reorganize='true') distributed randomly;
ALTER TABLE
--
-- select from the Table
--
select count(*) from resync_co_alter_part_split_partlist1;
 count 
-------
    20
(1 row)

