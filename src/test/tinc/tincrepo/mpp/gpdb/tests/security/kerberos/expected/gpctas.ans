-- start_ignore
-- end_ignore
-- @product_version gpdb: [4.3.2-4.3.98]
drop table if exists ctas_src;
psql:/path/sql_file:1: NOTICE:  table "ctas_src" does not exist, skipping
DROP TABLE
drop table if exists ctas_dst;
psql:/path/sql_file:1: NOTICE:  table "ctas_dst" does not exist, skipping
DROP TABLE
create table ctas_src (domain integer, class integer, attr text, value integer) distributed by (domain);
CREATE TABLE
insert into ctas_src values(1, 1, 'A', 1);
INSERT 0 1
insert into ctas_src values(2, 1, 'A', 0);
INSERT 0 1
insert into ctas_src values(3, 0, 'B', 1);
INSERT 0 1
-- MPP-2859
create table ctas_dst as 
SELECT attr, class, (select count(distinct class) from ctas_src) as dclass FROM ctas_src GROUP BY attr, class distributed by (attr);
SELECT 2
drop table ctas_dst;
DROP TABLE
create table ctas_dst as 
SELECT attr, class, (select max(class) from ctas_src) as maxclass FROM ctas_src GROUP BY attr, class distributed by (attr);
SELECT 2
drop table ctas_dst;
DROP TABLE
create table ctas_dst as 
SELECT attr, class, (select count(distinct class) from ctas_src) as dclass, (select max(class) from ctas_src) as maxclass, (select min(class) from ctas_src) as minclass FROM ctas_src GROUP BY attr, class distributed by (attr);
SELECT 2
-- MPP-4298: "unknown" datatypes.
drop table if exists ctas_foo;
psql:/path/sql_file:1: NOTICE:  table "ctas_foo" does not exist, skipping
DROP TABLE
drop table if exists ctas_bar;
psql:/path/sql_file:1: NOTICE:  table "ctas_bar" does not exist, skipping
DROP TABLE
drop table if exists ctas_baz;
psql:/path/sql_file:1: NOTICE:  table "ctas_baz" does not exist, skipping
DROP TABLE
create table ctas_foo as select * from generate_series(1, 100);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'generate_series' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 100
create table ctas_bar as select a.generate_series as a, b.generate_series as b from ctas_foo a, ctas_foo b;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 10000
create table ctas_baz as select 'delete me' as action, * from ctas_bar;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: WARNING:  column "action" has type "unknown"
DETAIL:  Proceeding with relation creation anyway.
SELECT 10000
-- "action" has no type.
\d ctas_baz
   Table "public.ctas_baz"
 Column |  Type   | Modifiers 
--------+---------+-----------
 action | unknown | 
 a      | integer | 
 b      | integer | 
Distributed by: (a)

select action, b from ctas_baz order by 1,2 limit 5;
  action   | b 
-----------+---
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
(5 rows)

select action, b from ctas_baz order by 2 limit 5;
  action   | b 
-----------+---
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
(5 rows)

select action::text, b from ctas_baz order by 1,2 limit 5;
  action   | b 
-----------+---
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
(5 rows)

alter table ctas_baz alter column action type text;
ALTER TABLE
\d ctas_baz
   Table "public.ctas_baz"
 Column |  Type   | Modifiers 
--------+---------+-----------
 action | text    | 
 a      | integer | 
 b      | integer | 
Distributed by: (a)

select action, b from ctas_baz order by 1,2 limit 5;
  action   | b 
-----------+---
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
(5 rows)

select action, b from ctas_baz order by 2 limit 5;
  action   | b 
-----------+---
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
(5 rows)

select action::text, b from ctas_baz order by 1,2 limit 5;
  action   | b 
-----------+---
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
 delete me | 1
(5 rows)

