-- start_ignore
-- end_ignore
-- Test function gp_read_error_log on non existing table
SELECT gp_read_error_log('non_existing');
 gp_read_error_log 
-------------------
(0 rows)

-- Test gp_read_error_log on non external table
DROP TABLE IF EXISTS heap_test;
DROP TABLE
CREATE TABLE heap_test(i int, j int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
SELECT gp_read_error_log('heap_test');
 gp_read_error_log 
-------------------
(0 rows)

-- Test gp_read_error_log on external table configured with error table
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_1;
DROP EXTERNAL TABLE
DROP TABLE IF EXISTS exttab_funcs_err;
DROP TABLE
\! python @script@ 10 2 > @data_dir@/exttab_funcs_1.tbl
CREATE EXTERNAL TABLE exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS INTO exttab_funcs_err SEGMENT REJECT LIMIT 10;
psql:/path/sql_file:1: NOTICE:  Error table "exttab_funcs_err" does not exist. Auto generating an error table with the same name
CREATE EXTERNAL TABLE
SELECT COUNT(*) FROM exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT gp_read_error_log('exttab_funcs_1');
 gp_read_error_log 
-------------------
(0 rows)

SELECT COUNT(*) FROM exttab_funcs_err;
 count 
-------
     2
(1 row)

-- Test gp_read_error_log from a different schema
DROP SCHEMA IF EXISTS exttab_funcs_schema CASCADE;
psql:/path/sql_file:1: NOTICE:  drop cascades to external table exttab_funcs_schema.exttab_funcs_3
psql:/path/sql_file:1: NOTICE:  drop cascades to external table exttab_funcs_schema.exttab_funcs_2
psql:/path/sql_file:1: NOTICE:  drop cascades to external table exttab_funcs_schema.exttab_funcs_1
DROP SCHEMA
CREATE SCHEMA exttab_funcs_schema;
CREATE SCHEMA
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
 count 
-------
     2
(1 row)

-- CTAS with gp_read_error_log
DROP TABLE IF EXISTS error_log_ctas;
DROP TABLE
CREATE TABLE error_log_ctas AS
SELECT relname, linenum, rawdata FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'relname' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 2
SELECT * FROM error_log_ctas order by linenum;
    relname     | linenum | rawdata 
----------------+---------+---------
 exttab_funcs_1 |       3 | error_0
 exttab_funcs_1 |       4 | error_1
(2 rows)

-- INSERT INTO from gp_read_error_log
INSERT INTO error_log_ctas SELECT relname, linenum, rawdata FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
INSERT 0 2
SELECT * FROM error_log_ctas order by linenum;
    relname     | linenum | rawdata 
----------------+---------+---------
 exttab_funcs_1 |       3 | error_0
 exttab_funcs_1 |       3 | error_0
 exttab_funcs_1 |       4 | error_1
 exttab_funcs_1 |       4 | error_1
(4 rows)

-- Test function gp_truncate_error_log on non existing table
SELECT gp_truncate_error_log('non_existing');
 gp_truncate_error_log 
-----------------------
 f
(1 row)

-- Test gp_truncate_error_log on non external table
DROP TABLE IF EXISTS heap_test;
DROP TABLE
CREATE TABLE heap_test(i int, j int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
SELECT gp_truncate_error_log('heap_test');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

-- Test gp_truncate_error_log on external table configured with error table
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_1;
DROP EXTERNAL TABLE
DROP TABLE IF EXISTS exttab_funcs_err;
DROP TABLE
\! python @script@ 10 2 > @data_dir@/exttab_funcs_1.tbl
CREATE EXTERNAL TABLE exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS INTO exttab_funcs_err SEGMENT REJECT LIMIT 10;
psql:/path/sql_file:1: NOTICE:  Error table "exttab_funcs_err" does not exist. Auto generating an error table with the same name
CREATE EXTERNAL TABLE
SELECT COUNT(*) FROM exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT gp_truncate_error_log('exttab_funcs_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT COUNT(*) FROM exttab_funcs_err;
 count 
-------
     2
(1 row)

-- Test gp_read_error_log from a different schema
DROP SCHEMA IF EXISTS exttab_funcs_schema CASCADE;
psql:/path/sql_file:1: NOTICE:  drop cascades to external table exttab_funcs_schema.exttab_funcs_1
DROP SCHEMA
CREATE SCHEMA exttab_funcs_schema;
CREATE SCHEMA
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
 count 
-------
     2
(1 row)

SELECT gp_truncate_error_log('exttab_funcs_schema.exttab_funcs_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
 count 
-------
     0
(1 row)

-- Test gp_truncate_error_log on all tables
-- Generate error logs
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_1 CASCADE;
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_2 CASCADE;
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_3 CASCADE;
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_schema.exttab_funcs_1 CASCADE;
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_schema.exttab_funcs_2 CASCADE;
psql:/path/sql_file:1: NOTICE:  table "exttab_funcs_2" does not exist, skipping
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_schema.exttab_funcs_3 CASCADE;
psql:/path/sql_file:1: NOTICE:  table "exttab_funcs_3" does not exist, skipping
DROP EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_2( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_3( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_2( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_3( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
SELECT COUNT(*) FROM exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_2;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_3;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_2;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_3;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_1');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_2');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_3');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_2');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_3');
 count 
-------
     2
(1 row)

-- Truncate all log files
SELECT gp_truncate_error_log('*');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_1');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_2');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_3');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_2');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_3');
 count 
-------
     0
(1 row)

-- Test gp_truncate_error_log('*.*')
-- Generate error logs in the current database
SELECT COUNT(*) FROM exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_2;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_3;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_2;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_3;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

-- Make sure error logs are generated
SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_1');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_2');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_3');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_2');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_3');
 count 
-------
     2
(1 row)

-- Create and generate error logs in another database
drop database if exists exttab_test;
DROP DATABASE
create database exttab_test;
CREATE DATABASE
\c exttab_test
You are now connected to database "exttab_test" as user "@user@".
DROP SCHEMA IF EXISTS exttab_funcs_schema CASCADE;
psql:/path/sql_file:1: NOTICE:  schema "exttab_funcs_schema" does not exist, skipping
DROP SCHEMA
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_1 CASCADE;
psql:/path/sql_file:1: NOTICE:  table "exttab_funcs_1" does not exist, skipping
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_2 CASCADE;
psql:/path/sql_file:1: NOTICE:  table "exttab_funcs_2" does not exist, skipping
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_3 CASCADE;
psql:/path/sql_file:1: NOTICE:  table "exttab_funcs_3" does not exist, skipping
DROP EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_2( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_3( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE SCHEMA exttab_funcs_schema;
CREATE SCHEMA
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_2( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_3( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
-- Generate error logs in the current database
SELECT COUNT(*) FROM exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_2;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_3;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_1;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_2;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_3;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 count 
-------
     8
(1 row)

-- Make sure error logs are generated
SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_1');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_2');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_3');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_2');
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_3');
 count 
-------
     2
(1 row)

-- Truncate error logs on all databases 
SELECT gp_truncate_error_log('*.*');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_1');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_2');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_3');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_2');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_3');
 count 
-------
     0
(1 row)

\c @dbname@
You are now connected to database "@dbname@" as user "@user@".
SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_1');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_2');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_3');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_2');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_3');
 count 
-------
     0
(1 row)

