-- start_ignore
-- end_ignore
DROP EXTERNAL TABLE IF EXISTS exttab_subq_1;
psql:/path/sql_file:1: NOTICE:  table "exttab_subq_1" does not exist, skipping
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_subq_2;
psql:/path/sql_file:1: NOTICE:  table "exttab_subq_2" does not exist, skipping
DROP EXTERNAL TABLE
-- Generate the file with very few errors
\! python @script@ 10 2 > @data_dir@/exttab_subq_1.tbl
-- does not reach reject limit
CREATE EXTERNAL TABLE exttab_subq_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_subq_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
-- Generate the file with lot of errors
\! python @script@ 200 50 > @data_dir@/exttab_subq_2.tbl
-- reaches reject limit, use the same err table
CREATE EXTERNAL TABLE exttab_subq_2( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_subq_2.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 2;
CREATE EXTERNAL TABLE
-- Test: subqueries reaching segment reject limit
TRUNCATE TABLE exttab_subq_err;
psql:/path/sql_file:1: ERROR:  relation "exttab_subq_err" does not exist
SELECT sum(distinct e1.i), sum(distinct e2.i), e1.j FROM
(SELECT i, j FROM exttab_subq_1 WHERE i < 5 ) e1,
(SELECT i, j FROM exttab_subq_2 WHERE i < 10) e2
group by e1.j;
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg0 slice2 @host@:40000 pid=32211)
DETAIL:  External table exttab_subq_2, line 6 of gpfdist://@host@:@port@/exttab_subq_2.tbl: "error_1"
SELECT COUNT(*) > 0 FROM
(
SELECT * FROM gp_read_error_log('exttab_subq_1')
UNION ALL
SELECT * FROM gp_read_error_log('exttab_subq_2')
) FOO;
 ?column? 
----------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT sum(distinct e1.i), sum(distinct e2.i), e1.j FROM
(SELECT i, j FROM exttab_subq_1 WHERE i < 5 ) e1,
(SELECT i, j FROM exttab_subq_1 WHERE i < 10) e2
group by e1.j
HAVING sum(distinct e1.i) > (SELECT max(i) FROM exttab_subq_2);
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg0 slice4 @host@:40000 pid=32189)
DETAIL:  External table exttab_subq_2, line 6 of gpfdist://@host@:@port@/exttab_subq_2.tbl: "error_1"
SELECT COUNT(*) > 0 FROM
(
SELECT * FROM gp_read_error_log('exttab_subq_1')
UNION ALL
SELECT * FROM gp_read_error_log('exttab_subq_2')
) FOO;
 ?column? 
----------
 t
(1 row)

-- CSQ
SELECT gp_truncate_error_log('exttab_subq_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT e1.i , e1.j FROM
exttab_subq_1 e1, exttab_subq_1 e2
WHERE e1.j = e2.j and 
e1.i + 1 IN ( SELECT i from exttab_subq_2 WHERE i <= e1.i);
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg0 slice1 @host@:40000 pid=32211)
DETAIL:  External table exttab_subq_2, line 6 of gpfdist://@host@:@port@/exttab_subq_2.tbl: "error_1"
SELECT COUNT(*) > 0 FROM
(
SELECT * FROM gp_read_error_log('exttab_subq_1')
UNION ALL
SELECT * FROM gp_read_error_log('exttab_subq_2')
) FOO;
 ?column? 
----------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT ( SELECT i FROM exttab_subq_2 WHERE i <= e1.i) as i, e1.j
FROM exttab_subq_2 e1, exttab_subq_1 e2
WHERE e1.i = e2.i;
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg0 slice2 @host@:40000 pid=32189)
DETAIL:  External table exttab_subq_2, line 6 of gpfdist://@host@:@port@/exttab_subq_2.tbl: "error_1"
SELECT COUNT(*) > 0 FROM
(
SELECT * FROM gp_read_error_log('exttab_subq_1')
UNION ALL
SELECT * FROM gp_read_error_log('exttab_subq_2')
) FOO;
 ?column? 
----------
 t
(1 row)

-- Test: subqueries without reaching segment reject limit
SELECT gp_truncate_error_log('exttab_subq_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT sum(distinct e1.i), sum(distinct e2.i), e1.j FROM
(SELECT i, j FROM exttab_subq_1 WHERE i < 5 ) e1,
(SELECT i, j FROM exttab_subq_1 WHERE i < 10) e2
group by e1.j order by 3,2,1;
 sum | sum |    j     
-----+-----+----------
   0 |  40 | 0_number
   1 |  40 | 1_number
   4 |  40 | 4_number
(3 rows)

SELECT COUNT(*) > 0 FROM gp_read_error_log('exttab_subq_1');
 ?column? 
----------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT sum(distinct e1.i), sum(distinct e2.i), e1.j FROM
(SELECT i, j FROM exttab_subq_1 WHERE i < 5 ) e1,
(SELECT i, j FROM exttab_subq_1 WHERE i < 10) e2
group by e1.j
HAVING sum(distinct e1.i) > (SELECT max(i) FROM exttab_subq_1);
 sum | sum | j 
-----+-----+---
(0 rows)

SELECT COUNT(*) > 0 FROM gp_read_error_log('exttab_subq_1');
 ?column? 
----------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT e1.i , e1.j FROM
exttab_subq_1 e1, exttab_subq_1 e2
WHERE e1.j = e2.j and 
e1.i + 1 IN ( SELECT i from exttab_subq_1 WHERE i <= e1.i);
 i | j 
---+---
(0 rows)

SELECT COUNT(*) > 0 FROM gp_read_error_log('exttab_subq_1');
 ?column? 
----------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT ( SELECT i FROM exttab_subq_1 WHERE i <= e1.i) as i, e1.j
FROM exttab_subq_1 e1, exttab_subq_1 e2
WHERE e1.i = e2.i;
 i |    j     
---+----------
   | 0_number
   | 1_number
   | 4_number
   | 5_number
   | 6_number
   | 7_number
   | 8_number
   | 9_number
(8 rows)

SELECT COUNT(*) > 0 FROM gp_read_error_log('exttab_subq_1');
 ?column? 
----------
 t
(1 row)

-- Test: CTAS with subqueries and segment reject limit reached
DROP TABLE IF EXISTS exttab_subq_ctas_1;
psql:/path/sql_file:1: NOTICE:  table "exttab_subq_ctas_1" does not exist, skipping
DROP TABLE
SELECT gp_truncate_error_log('exttab_subq_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

CREATE TABLE exttab_subq_ctas_1 AS
SELECT e1.i , e1.j FROM
exttab_subq_1 e1, exttab_subq_1 e2
WHERE e1.j = e2.j and 
e1.i + 1 IN ( SELECT i from exttab_subq_2 WHERE i <= e1.i);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg0 slice1 @host@:40000 pid=32216)
DETAIL:  External table exttab_subq_2, line 6 of gpfdist://@host@:@port@/exttab_subq_2.tbl: "error_1"
-- should error out
SELECT * FROM exttab_subq_ctas_1;
psql:/path/sql_file:1: ERROR:  relation "exttab_subq_ctas_1" does not exist
LINE 1: SELECT * FROM exttab_subq_ctas_1;
                      ^
SELECT COUNT(*) > 0 FROM
(
SELECT * FROM gp_read_error_log('exttab_subq_1')
UNION ALL
SELECT * FROM gp_read_error_log('exttab_subq_2')
) FOO;
 ?column? 
----------
 t
(1 row)

-- Test: CTAS with subqueries and segment reject within limits
DROP TABLE IF EXISTS exttab_subq_ctas_2;
psql:/path/sql_file:1: NOTICE:  table "exttab_subq_ctas_2" does not exist, skipping
DROP TABLE
SELECT gp_truncate_error_log('exttab_subq_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT gp_truncate_error_log('exttab_subq_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

CREATE TABLE exttab_subq_ctas_2 AS
SELECT e1.i , e1.j FROM
exttab_subq_1 e1, exttab_subq_1 e2
WHERE e1.j = e2.j and 
e1.i + 1 IN ( SELECT i from exttab_subq_1 WHERE i <= e1.i);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT 0
-- should not error out
SELECT * FROM exttab_subq_ctas_2;
 i | j 
---+---
(0 rows)

SELECT COUNT(*) > 0 FROM gp_read_error_log('exttab_subq_1');
 ?column? 
----------
 t
(1 row)

 
