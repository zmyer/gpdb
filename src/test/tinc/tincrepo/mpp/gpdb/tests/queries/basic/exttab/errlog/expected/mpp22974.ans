-- start_ignore
-- end_ignore
-- default should be 1000
show gp_initial_bad_row_limit;
 gp_initial_bad_row_limit 
-----------------------------------
 1000
(1 row)

DROP EXTERNAL TABLE IF EXISTS exttab_first_reject_limit_1 cascade;
DROP EXTERNAL TABLE
-- Generate the file with 5000 error rows at the beginning of the file
\! python @errors@ 10000 5000 > @data_dir@/exttab_first_reject_limit_1.tbl
CREATE EXTERNAL TABLE exttab_first_reject_limit_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_first_reject_limit_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 20000;
CREATE EXTERNAL TABLE
-- should fail with an appropriate error message
SELECT COUNT(*) FROM exttab_first_reject_limit_1;
psql:/path/sql_file:1: ERROR:  All 1000 first rows in this segment were rejected. Aborting operation regardless of REJECT LIMIT value. Last error was: missing data for column "j"  (seg0 slice1 @host@:40000 pid=13264)
DETAIL:  External table exttab_first_reject_limit_1, line 1000 of gpfdist://@host@:@port@/exttab_first_reject_limit_1.tbl: "error_0"
SELECT COUNT(*) > 0 FROM gp_read_error_log('exttab_first_reject_limit_1');
 ?column? 
----------
 t
(1 row)

set gp_initial_bad_row_limit = 6000;
SET
-- should work now
select gp_truncate_error_log('exttab_first_reject_limit_1');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT COUNT(*) FROM exttab_first_reject_limit_1;
psql:/path/sql_file:1: NOTICE:  Found 5000 data formatting errors (5000 or more input rows). Rejected related input data.
 count 
-------
  5000
(1 row)

select COUNT(*) FROM gp_read_error_log('exttab_first_reject_limit_1');
 count 
-------
  5000
(1 row)

-- first segment reject limit should be checked before segment reject limit
DROP EXTERNAL TABLE IF EXISTS exttab_first_reject_limit_2;
DROP EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_first_reject_limit_2( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_first_reject_limit_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 500;
CREATE EXTERNAL TABLE
set gp_initial_bad_row_limit = 2;
SET
-- should report an error saying first rows were rejected
SELECT COUNT(*) FROM exttab_first_reject_limit_2;
psql:/path/sql_file:1: ERROR:  All 2 first rows in this segment were rejected. Aborting operation regardless of REJECT LIMIT value. Last error was: missing data for column "j"  (seg1 slice1 @host@:40001 pid=13266)
DETAIL:  External table exttab_first_reject_limit_2, line 2 of gpfdist://@host@:@port@/exttab_first_reject_limit_1.tbl: "error_0"
SELECT COUNT(*) from gp_read_error_log('exttab_first_reject_limit_2');
 count 
-------
     1
(1 row)

set gp_initial_bad_row_limit = 600;
SET
-- should report an error saying segment reject limit reached
SELECT gp_truncate_error_log('exttab_first_reject_limit_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT COUNT(*) FROM exttab_first_reject_limit_2;
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg1 slice1 @host@:40001 pid=13266)
DETAIL:  External table exttab_first_reject_limit_2, line 500 of gpfdist://@host@:@port@/exttab_first_reject_limit_1.tbl: "error_0"
SELECT COUNT(*) from gp_read_error_log('exttab_first_reject_limit_2');
 count 
-------
   499
(1 row)

-- set unlimited first error rows, should fail only because of segment reject limits
set gp_initial_bad_row_limit = 0;
SET
SELECT gp_truncate_error_log('exttab_first_reject_limit_2');
 gp_truncate_error_log 
-----------------------
 t
(1 row)

SELECT COUNT(*) FROM exttab_first_reject_limit_2;
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg1 slice1 @host@:40001 pid=13266)
DETAIL:  External table exttab_first_reject_limit_2, line 500 of gpfdist://@host@:@port@/exttab_first_reject_limit_1.tbl: "error_0"
SELECT COUNT(*) from gp_read_error_log('exttab_first_reject_limit_2');
 count 
-------
   499
(1 row)

-- With copy command
DROP TABLE IF EXISTS test_first_segment_reject_limit;
DROP TABLE
CREATE TABLE test_first_segment_reject_limit (LIKE exttab_first_reject_limit_1);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
CREATE TABLE
SET gp_initial_bad_row_limit = 500;
SET
COPY test_first_segment_reject_limit FROM '@data_dir@/exttab_first_reject_limit_1.tbl' WITH DELIMITER '|' segment reject limit 20000;
psql:/path/sql_file:1: ERROR:  All 500 first rows in this segment were rejected. Aborting operation regardless of REJECT LIMIT value. Last error was: missing data for column "j"
CONTEXT:  COPY test_first_segment_reject_limit, line 500: "error_0"
SET gp_initial_bad_row_limit = 6000;
SET
-- should go through fine
COPY test_first_segment_reject_limit FROM '@data_dir@/exttab_first_reject_limit_1.tbl' WITH DELIMITER '|' segment reject limit 20000;
psql:/path/sql_file:1: NOTICE:  Found 5000 data formatting errors (5000 or more input rows). Rejected related input data.
COPY 5000
SELECT COUNT(*) FROM test_first_segment_reject_limit;
 count 
-------
  5000
(1 row)

