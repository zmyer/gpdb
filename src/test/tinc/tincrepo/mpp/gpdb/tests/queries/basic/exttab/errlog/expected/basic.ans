-- start_ignore
-- end_ignore
-- Test 1: scan with no errors
DROP EXTERNAL TABLE IF EXISTS exttab_union_1 cascade;
DROP EXTERNAL TABLE
-- Generate the file
\! python @script@ 10 0 > @data_dir@/exttab_union_1.tbl
CREATE EXTERNAL TABLE exttab_union_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_union_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 2;
CREATE EXTERNAL TABLE
-- Empty error log 
SELECT * FROM gp_read_error_log('exttab_union_1'); 
 cmdtime | relname | filename | linenum | bytenum | errmsg | rawdata | rawbytes 
---------+---------+----------+---------+---------+--------+---------+----------
(0 rows)

SELECT COUNT(*) FROM exttab_union_1;
 count 
-------
    10
(1 row)

-- Error log should still be empty
SELECT * FROM gp_read_error_log('exttab_union_1');
 cmdtime | relname | filename | linenum | bytenum | errmsg | rawdata | rawbytes 
---------+---------+----------+---------+---------+--------+---------+----------
(0 rows)

-- Test 2: Some errors without exceeding reject limit
DROP EXTERNAL TABLE IF EXISTS exttab_union_2 cascade;
DROP EXTERNAL TABLE
-- Generate file with 2 errors
\! python @script@ 10 2 > @data_dir@/exttab_union_2.tbl
CREATE EXTERNAL TABLE exttab_union_2( i int, j text )
LOCATION ('gpfdist://@host@:@port@/exttab_union_2.tbl') FORMAT 'TEXT' (DELIMITER '|')
LOG ERRORS SEGMENT REJECT LIMIT 10;
CREATE EXTERNAL TABLE
-- should not error out as segment reject limit will not be reached
SELECT * FROM exttab_union_2 order by i;
psql:/path/sql_file:1: NOTICE:  Found 2 data formatting errors (2 or more input rows). Rejected related input data.
 i |    j     
---+----------
 0 | 0_number
 1 | 1_number
 4 | 4_number
 5 | 5_number
 6 | 6_number
 7 | 7_number
 8 | 8_number
 9 | 9_number
(8 rows)

-- Error rows logged
SELECT count(*) from gp_read_error_log('exttab_union_2');
 count 
-------
     2
(1 row)

-- Test 3: Errors with exceeding reject limit
DROP EXTERNAL TABLE IF EXISTS exttab_basic_3 cascade;
DROP EXTERNAL TABLE
-- Generate file with 10 errors
\! python @script@ 20 10 > @data_dir@/exttab_basic_3.tbl
CREATE EXTERNAL TABLE exttab_basic_3( i int, j text )
LOCATION ('gpfdist://@host@:@port@/exttab_basic_3.tbl') FORMAT 'TEXT' (DELIMITER '|')
LOG ERRORS SEGMENT REJECT LIMIT 2;
CREATE EXTERNAL TABLE
-- should error out as segment reject limit will be reached
-- Note, this test might not work if there are more than 5 segments in which case we might not reach the limit
SELECT * FROM exttab_basic_3;
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg1 slice1 @host@:40001 pid=21346)
DETAIL:  External table exttab_basic_3, line 3 of gpfdist://@host@:@port@/exttab_basic_3.tbl: "error_1"
-- Error log should have one row that was rejected until the segment reject limit reached
select count(*) from gp_read_error_log('exttab_basic_3');
 count 
-------
     1
(1 row)

-- Test 4: Insert into another table
DROP EXTERNAL TABLE IF EXISTS exttab_basic_4 cascade;
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_basic_5 cascade;
DROP EXTERNAL TABLE
DROP TABLE IF EXISTS exttab_insert_1;
DROP TABLE
-- Generate file with 5 errors
\! python @script@ 20 5 > @data_dir@/exttab_basic_4.tbl
CREATE EXTERNAL TABLE exttab_basic_4( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_basic_4.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 100;
CREATE EXTERNAL TABLE
CREATE TABLE exttab_insert_1 (LIKE exttab_basic_4);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
CREATE TABLE
-- Insert should go through fine
INSERT INTO exttab_insert_1 SELECT * FROM exttab_basic_4;
psql:/path/sql_file:1: NOTICE:  Found 5 data formatting errors (5 or more input rows). Rejected related input data.
INSERT 0 15
SELECT * FROM exttab_insert_1 order by i;
 i  |     j     
----+-----------
  0 | 0_number
  2 | 2_number
  3 | 3_number
  5 | 5_number
  7 | 7_number
  8 | 8_number
  9 | 9_number
 10 | 10_number
 12 | 12_number
 13 | 13_number
 14 | 14_number
 15 | 15_number
 16 | 16_number
 17 | 17_number
 19 | 19_number
(15 rows)

-- Error table should have five rows that were rejected
select count(*) from gp_read_error_log('exttab_basic_4');
 count 
-------
     5
(1 row)

DROP EXTERNAL TABLE IF EXISTS exttab_basic_5;
psql:/path/sql_file:1: NOTICE:  table "exttab_basic_5" does not exist, skipping
DROP EXTERNAL TABLE
-- Generate file with a lot of errors
\! python @script@ 200 100 > @data_dir@/exttab_basic_5.tbl
-- Use the same error log above
CREATE EXTERNAL TABLE exttab_basic_5( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_basic_5.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 5;
CREATE EXTERNAL TABLE
-- Insert should fail
INSERT INTO exttab_insert_1 select * from exttab_basic_5;
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg1 slice1 @host@:40001 pid=21408)
DETAIL:  External table exttab_basic_5, line 13 of gpfdist://@host@:@port@/exttab_basic_5.tbl: "error_4"
SELECT * from exttab_insert_1 order by i;
 i  |     j     
----+-----------
  0 | 0_number
  2 | 2_number
  3 | 3_number
  5 | 5_number
  7 | 7_number
  8 | 8_number
  9 | 9_number
 10 | 10_number
 12 | 12_number
 13 | 13_number
 14 | 14_number
 15 | 15_number
 16 | 16_number
 17 | 17_number
 19 | 19_number
(15 rows)

-- Error table should have additional rows that were rejected by the above query
SELECT count(*) from gp_read_error_log('exttab_basic_5');
 count 
-------
     4
(1 row)

-- Test 5: CTAS
DROP EXTERNAL TABLE IF EXISTS exttab_basic_6 cascade;
DROP EXTERNAL TABLE
DROP EXTERNAL TABLE IF EXISTS exttab_basic_7 cascade;
DROP EXTERNAL TABLE
DROP TABLE IF EXISTS exttab_ctas_1 cascade;
DROP TABLE
DROP TABLE IF EXISTS exttab_ctas_2 cascade;
psql:/path/sql_file:1: NOTICE:  table "exttab_ctas_2" does not exist, skipping
DROP TABLE
-- Generate file with 5 errors
\! python @script@ 20 5 > @data_dir@/exttab_basic_6.tbl
CREATE EXTERNAL TABLE exttab_basic_6( i int, j text )
LOCATION ('gpfdist://@host@:@port@/exttab_basic_6.tbl') FORMAT 'TEXT' (DELIMITER '|')
LOG ERRORS SEGMENT REJECT LIMIT 100;
CREATE EXTERNAL TABLE
CREATE TABLE exttab_ctas_1 as SELECT * FROM exttab_basic_6;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  Found 5 data formatting errors (5 or more input rows). Rejected related input data.
SELECT 15
-- CTAS should go through fine
SELECT * FROM exttab_ctas_1 order by i;
 i  |     j     
----+-----------
  0 | 0_number
  2 | 2_number
  3 | 3_number
  5 | 5_number
  7 | 7_number
  8 | 8_number
  9 | 9_number
 10 | 10_number
 12 | 12_number
 13 | 13_number
 14 | 14_number
 15 | 15_number
 16 | 16_number
 17 | 17_number
 19 | 19_number
(15 rows)

-- Error table should have five rows that were rejected
select count(*) from gp_read_error_log('exttab_basic_6');
 count 
-------
     5
(1 row)

DROP EXTERNAL TABLE IF EXISTS exttab_basic_7;
psql:/path/sql_file:1: NOTICE:  table "exttab_basic_7" does not exist, skipping
DROP EXTERNAL TABLE
-- Generate file with a lot of errors
\! python @script@ 200 100 > @data_dir@/exttab_basic_7.tbl
CREATE EXTERNAL TABLE exttab_basic_7( i int, j text )
LOCATION ('gpfdist://@host@:@port@/exttab_basic_7.tbl') FORMAT 'TEXT' (DELIMITER '|')
LOG ERRORS SEGMENT REJECT LIMIT 5;
CREATE EXTERNAL TABLE
-- CTAS should fail
CREATE TABLE exttab_ctas_2 AS select * from exttab_basic_7;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "j"  (seg0 slice1 @host@:40000 pid=21406)
DETAIL:  External table exttab_basic_7, line 13 of gpfdist://@host@:@port@/exttab_basic_7.tbl: "error_4"
-- Table should not exist
SELECT * from exttab_ctas_2 order by i;
psql:/path/sql_file:1: ERROR:  relation "exttab_ctas_2" does not exist
LINE 1: SELECT * from exttab_ctas_2 order by i;
                      ^
-- Error table should have additional rows that were rejected by the above query
SELECT count(*) from gp_read_error_log('exttab_basic_7');
 count 
-------
     4
(1 row)

-- Test that pg_exttable.fmterrtbl references to itself for external table with error logs
DROP EXTERNAL TABLE IF EXISTS exttab_error_log;
DROP EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_error_log( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_union_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 2;
CREATE EXTERNAL TABLE
SELECT reloid = fmterrtbl FROM pg_exttable
WHERE reloid = (SELECT oid from pg_class where relname ilike 'exttab_error_log');
 ?column? 
----------
 t
(1 row)

DROP EXTERNAL TABLE IF EXISTS exttab_error_tbl;
DROP EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_error_tbl( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_union_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS INTO sample_errtbl SEGMENT REJECT LIMIT 2;
CREATE EXTERNAL TABLE
-- Should be False
SELECT reloid = fmterrtbl FROM pg_exttable
WHERE reloid = (SELECT oid from pg_class where relname ilike 'exttab_error_tbl');
 ?column? 
----------
 f
(1 row)

-- Test that drop external table gets rid off error logs
DROP EXTERNAL TABLE IF EXISTS exttab_error_log;
DROP EXTERNAL TABLE
CREATE EXTERNAL TABLE exttab_error_log( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_union_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 2;
CREATE EXTERNAL TABLE
SELECT COUNT(*) FROM exttab_error_log;
 count 
-------
    10
(1 row)

SELECT COUNT(*) FROM gp_read_error_log('exttab_error_log');
 count 
-------
     0
(1 row)

DROP EXTERNAL TABLE exttab_error_log;
DROP EXTERNAL TABLE
SELECT COUNT(*) FROM gp_read_error_log('exttab_error_log');
 count 
-------
     0
(1 row)

