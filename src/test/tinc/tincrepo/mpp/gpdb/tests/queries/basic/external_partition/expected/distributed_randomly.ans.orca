-- start_ignore
-- end_ignore
-- 
-- @created 2015-07-11 12:00:00
-- @modified 2015-07-11 12:00:00
-- @tags external_partition 
-- @gpdiff true 
-- @description Tests for distributed randomly 
--start_ignore
drop table if exists pt_ext;
DROP TABLE
CREATE TABLE pt_ext
(
  col1 int,
  col2 decimal,
  col3 text,
  col4 bool
)
distributed by (col1)
partition by list(col2)
(
	partition part1 values(1,2,3,4,5,6,7,8,9,10),
	partition part2 values(11,12,13,14,15,16,17,18,19,20),
	partition part3 values(21,22,23,24,25,26,27,28,29,30),
	partition part4 values(31,32,33,34,35,36,37,38,39,40),
	partition part5 values(41,42,43,44,45,46,47,48,49,50)
);
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "pt_ext_1_prt_part1" for table "pt_ext"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "pt_ext_1_prt_part2" for table "pt_ext"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "pt_ext_1_prt_part3" for table "pt_ext"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "pt_ext_1_prt_part4" for table "pt_ext"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "pt_ext_1_prt_part5" for table "pt_ext"
CREATE TABLE
insert into pt_ext select i,i,'test',true from generate_series(1,50) i;
INSERT 0 50
create temp table tmp as select * from pt_ext where col1 < 11;
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause. Creating a NULL policy entry.
SELECT 10
\! rm /tmp/exttab_list
copy tmp to '/tmp/exttab_list' csv;
COPY 10
create readable external table ret(like pt_ext) location('file://vraghavan.local/tmp/exttab_list') format 'csv';
CREATE EXTERNAL TABLE
alter table pt_ext exchange partition part1 with table ret without validation;
ALTER TABLE
drop table ret;
DROP TABLE
--end_ignore
create table pt_ext_t(col1 int);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'col1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE
explain select * from pt_ext join pt_ext_t on pt_ext.col1 = pt_ext_t.col1;
                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=0.06..13535.57 rows=1002 width=73)
   ->  Hash Join  (cost=0.06..13535.57 rows=501 width=73)
         Hash Cond: public.pt_ext.col1 = pt_ext_t.col1
         ->  Append  (cost=0.00..11017.20 rows=500660 width=69)
               ->  Seq Scan on pt_ext_1_prt_part2 pt_ext  (cost=0.00..4.30 rows=165 width=69)
               ->  Seq Scan on pt_ext_1_prt_part3 pt_ext  (cost=0.00..4.30 rows=165 width=69)
               ->  Seq Scan on pt_ext_1_prt_part4 pt_ext  (cost=0.00..4.30 rows=165 width=69)
               ->  Seq Scan on pt_ext_1_prt_part5 pt_ext  (cost=0.00..4.30 rows=165 width=69)
               ->  External Scan on pt_ext_1_prt_part1 pt_ext  (cost=0.00..11000.00 rows=500000 width=69)
         ->  Hash  (cost=0.03..0.03 rows=1 width=4)
               ->  Broadcast Motion 2:2  (slice1; segments: 2)  (cost=0.00..0.03 rows=1 width=4)
                     ->  Seq Scan on pt_ext_t  (cost=0.00..0.00 rows=1 width=4)
 Settings:  optimizer=on
 Optimizer status: legacy query optimizer
(14 rows)

alter table pt_ext drop partition part1;
ALTER TABLE
explain select * from pt_ext join pt_ext_t on pt_ext.col1 = pt_ext_t.col1;
                                                 QUERY PLAN                                                 
------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..862.00 rows=1 width=25)
   ->  Hash Join  (cost=0.00..862.00 rows=1 width=25)
         Hash Cond: pt_ext.col1 = pt_ext_t.col1
         ->  Sequence  (cost=0.00..431.00 rows=1 width=21)
               ->  Partition Selector for pt_ext (dynamic scan id: 1)  (cost=10.00..100.00 rows=50 width=4)
                     Partitions selected:  4 (out of 4)
               ->  Dynamic Table Scan on pt_ext (dynamic scan id: 1)  (cost=0.00..431.00 rows=1 width=21)
         ->  Hash  (cost=431.00..431.00 rows=1 width=4)
               ->  Table Scan on pt_ext_t  (cost=0.00..431.00 rows=1 width=4)
 Settings:  optimizer=on
 Optimizer status: PQO version 1.597
(11 rows)

drop table pt_ext_t;
DROP TABLE
