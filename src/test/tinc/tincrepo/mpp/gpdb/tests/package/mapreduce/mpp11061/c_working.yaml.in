%YAML 1.1
---

# ============================================================================
# Support of "C" language functions was enabled in the 1.0.0.2 version of
# the Greenplum YAML specification by adding the new "LIBRARY" attribute
# to MAP/TRANSITION/CONSOLIDATE/FINALIZE specifications.
# ============================================================================
VERSION:   1.0.0.2
USER:      @db_user@

DEFINE:

  # ==========================================================================
  # This is the input used by all our examples
  # ==========================================================================
  - INPUT:
      NAME:      network
      GPFDIST:   localhost:8090/mpp11061/example.txt
      COLUMNS:   [key int4, value int4]
      DELIMITER: '|'

  - TRANSITION:
      NAME:       int4_accum
      PARAMETERS: [state int8, value int4]
      RETURNS:    [state int8]
      LANGUAGE:   C
      LIBRARY:    @abs_srcdir@/mpp11061/gpmrdemo.so
      FUNCTION:   int4_accum

  - CONSOLIDATE:
      NAME:       int8_add
      PARAMETERS: [value1 int8, value2 int8]
      RETURNS:    [value int8]
      LANGUAGE:   C
      LIBRARY:    @abs_srcdir@/mpp11061/gpmrdemo.so
      FUNCTION:   int8_add

  - REDUCE:
      NAME:        c_sum
      TRANSITION:  int4_accum
      CONSOLIDATE: int8_add

  # This task isn't strictly necessary, we could have simply defined
  # the REDUCE in the RUN block below.
  - TASK:
      NAME:        sum_mr_task
      SOURCE:      network
      REDUCE:      c_sum



  #==========================================================================
  #2) SUM as a builtin reducer
  #
  #Note: the use of the builtin SUM reducer
  #==========================================================================
  - TASK:
      NAME:       sum_builtin_task
      SOURCE:     network
      REDUCE:     SUM

# ============================================================================
# The execute block is what is responsible for actually calling
# each of the above examples and associating them with specific
# outputs.
# ============================================================================
EXECUTE:
  - RUN:
      SOURCE:   sum_mr_task

  - RUN:
      SOURCE:   sum_builtin_task
