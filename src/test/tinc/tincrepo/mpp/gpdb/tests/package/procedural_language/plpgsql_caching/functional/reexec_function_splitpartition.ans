-- start_ignore
drop table if exists partitioned_table; 
psql:/path/sql_file:1: NOTICE:  table "partitioned_table" does not exist, skipping
DROP TABLE
drop function if exists partfunc();
psql:/path/sql_file:1: NOTICE:  function partfunc() does not exist, skipping
DROP FUNCTION
-- end_ignore
create table partitioned_table
( a numeric, b int, c varchar )
partition by range(b)
(
   partition part1 start(1) end (3),
   default partition defpart
);
psql:/path/sql_file:1: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "partitioned_table_1_prt_defpart" for table "partitioned_table"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "partitioned_table_1_prt_part1" for table "partitioned_table"
CREATE TABLE
insert into partitioned_table(a, b, c) values (9.9999999999, 1, 'test');
INSERT 0 1
insert into partitioned_table(a, b, c) values (8.888888, 2, 'test');
INSERT 0 1
insert into partitioned_table(a, b, c) values (4.444444444444, 4, 'testdef');
INSERT 0 1
insert into partitioned_table(a, b, c) values (7.7777, 10, 'testdef');
INSERT 0 1
insert into partitioned_table(a, b, c) values (5.5555555555555, 1, 'test');
INSERT 0 1
create function partfunc() returns text as 
$$
declare
   nm   numeric;
begin
   select a from partitioned_table into nm;
   return 'done';
end;
$$ LANGUAGE plpgsql;
CREATE FUNCTION
select partfunc();
 partfunc 
----------
 done
(1 row)

alter table partitioned_table split default partition
   start(4) inclusive end(10) exclusive into (partition part2, default partition);
psql:/path/sql_file:1: NOTICE:  exchanged partition "defpart" of relation "partitioned_table" with relation "pg_temp_70328"
psql:/path/sql_file:1: NOTICE:  dropped partition "defpart" for relation "partitioned_table"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "partitioned_table_1_prt_part2" for table "partitioned_table"
psql:/path/sql_file:1: NOTICE:  CREATE TABLE will create partition "partitioned_table_1_prt_defpart" for table "partitioned_table"
ALTER TABLE
select partfunc();
 partfunc 
----------
 done
(1 row)

