-- start_ignore
SET optimizer=off;
SET
-- end_ignore
-- ETF distribution is the same as underlying source table
-- Should not have redistribution motion, except for SCATTER RANDOMLY
-- Table t1 is distributed by column a
-- Table t3 is distributed by columns a and e
-- Table t4 is distributed randomly
    DROP TABLE IF EXISTS t3;
psql:/path/sql_file:1: NOTICE:  table "t3" does not exist, skipping
DROP TABLE
    CREATE TABLE t3 (a int, b int, c int, d int, e text)
    DISTRIBUTED BY (a, e);
CREATE TABLE
    INSERT INTO t3 SELECT i, i/3, i%2, 100-i, 'text'||i
    FROM generate_series(1,100) i;
INSERT 0 100
    DROP TABLE IF EXISTS t4;
psql:/path/sql_file:1: NOTICE:  table "t4" does not exist, skipping
DROP TABLE
    CREATE TABLE t4 (a int, b int, c int, d int, e text)
    DISTRIBUTED RANDOMLY;
CREATE TABLE
    INSERT INTO t4 SELECT i, i/3, i%2, 100-i, 'text'||i 
    FROM generate_series(1,100) i;
INSERT 0 100
    -- SCATTER BY the same single distribution key
    -- of the source table
    -- No redistribution should be involved
    EXPLAIN SELECT * FROM transform( TABLE(
        select a, e from t1 scatter by a
    ) );
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..3.25 rows=100 width=36)
   ->  Table Function Scan on transform  (cost=0.00..3.25 rows=100 width=36)
         ->  Seq Scan on t1  (cost=0.00..2.00 rows=100 width=10)
 Settings:  optimizer=off
(4 rows)

    -- SCATTER BY the same composite distribution keys (a, e)
    -- of the source table
    -- No redistribution should be involved
    EXPLAIN SELECT * FROM transform( TABLE(
        select a, e from t3 scatter by a, e
    ) );
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=0.00..3.25 rows=100 width=36)
   ->  Table Function Scan on transform  (cost=0.00..3.25 rows=100 width=36)
         ->  Seq Scan on t3  (cost=0.00..2.00 rows=100 width=10)
 Settings:  optimizer=off
(4 rows)

    -- Both source table and ETF sub query are SCATTER RANDOMLY
    -- Redistribution is needed
    EXPLAIN SELECT * FROM transform( TABLE(
        select a, e from t4 scatter randomly
    ) );
                                           QUERY PLAN                                            
-------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice2; segments: 1)  (cost=0.00..3.25 rows=100 width=36)
   ->  Table Function Scan on transform  (cost=0.00..3.25 rows=100 width=36)
         ->  Redistribute Motion 1:1  (slice1; segments: 1)  (cost=0.00..2.00 rows=100 width=10)
               ->  Seq Scan on t4  (cost=0.00..2.00 rows=100 width=10)
 Settings:  optimizer=off
(5 rows)

