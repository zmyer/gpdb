-- start_ignore
SET optimizer=off;
SET
-- end_ignore
-- Create ETF using return syntax: TABLE LIKE table, however the "liked" table is non-existing
    DROP FUNCTION IF EXISTS transform(anytable);
DROP FUNCTION
    CREATE OR REPLACE FUNCTION transform (a anytable)
      RETURNS TABLE (LIKE outtable_nonexist)
      AS '$libdir/tabfunc_gppc_demo', 'mytransform'
      LANGUAGE C;
psql:/path/sql_file:1: ERROR:  type outtable_nonexist does not exist
-- Create ETF using return syntax: TABLE LIKE table
    CREATE OR REPLACE FUNCTION transform(a anytable)
      RETURNS TABLE (LIKE outtable)
      AS '$libdir/tabfunc_gppc_demo', 'mytransform'
      LANGUAGE C;
CREATE FUNCTION
-- Verify ETF can be called successfully
select * from transform(TABLE(select * from intable where id<3));
psql:/path/sql_file:1: ERROR:  invalid tuple returned from table function  (seg0 slice1 rh55-qavm61:40000 pid=31759)
DETAIL:  Returned tuple does not match output tuple descriptor.
-- Add a new column to output table, then drop the new added column.
alter table outtable add column newcol int;
ALTER TABLE
alter table outtable drop column newcol;
ALTER TABLE
\d outtable;
   Table "public.outtable"
 Column |  Type   | Modifiers 
--------+---------+-----------
 a      | text    | 
 b      | integer | 
Distributed randomly

-- Calling ETF again, get ERROR: invalid output tuple
-- MPP-14231
select * from transform(TABLE(select * from intable where id<3));
psql:/path/sql_file:1: ERROR:  invalid tuple returned from table function  (seg0 slice1 rh55-qavm61:40000 pid=31759)
DETAIL:  Returned tuple does not match output tuple descriptor.
-- Recreate outtable
DROP TABLE IF EXISTS outtable cascade;
psql:/path/sql_file:1: NOTICE:  drop cascades to function transform(anytable)
DROP TABLE
CREATE TABLE outtable(a text, b int) distributed randomly;
CREATE TABLE
-- Recreate transform function
CREATE OR REPLACE FUNCTION transform (a anytable)
      RETURNS TABLE (a text, b int)
      AS '$libdir/tabfunc_gppc_demo', 'mytransform'
      LANGUAGE C;
CREATE FUNCTION
