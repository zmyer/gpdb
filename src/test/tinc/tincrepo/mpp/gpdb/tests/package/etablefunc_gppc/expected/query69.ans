-- start_ignore
SET optimizer=off;
SET
-- end_ignore
    -- create describe (callback) function
    -- both input and output type must be internal
    CREATE OR REPLACE FUNCTION project_desc(internal)
    RETURNS internal
    AS '$libdir/tabfunc_gppc_demo', 'project_describe'
    LANGUAGE C;
CREATE FUNCTION
    -- create dynamic return type (drt) table function
    -- using the callback function
    -- the return type must be defined as set of record
    CREATE OR REPLACE FUNCTION project(anytable, integer)
    RETURNS setof record
    AS '$libdir/tabfunc_gppc_demo', 'project'
    LANGUAGE C
    WITH (describe = project_desc);
CREATE FUNCTION
    drop view if exists history_v;
psql:/path/sql_file:1: NOTICE:  view "history_v" does not exist, skipping
DROP VIEW
    create view history_v as (
    select * from history order by id);
CREATE VIEW
    -- History table self-join
    SELECT * FROM project( TABLE(SELECT * FROM history h1, history h2
        WHERE h1.id = h2.id and h1.time=h2.time 
        ORDER BY h1.id SCATTER BY h2.time), 3)
    WHERE id <3 ORDER BY 1;
 id 
----
  1
  1
  1
  1
  2
  2
  2
  2
  2
  2
  2
  2
(12 rows)

    -- Join history table with history_v view
    SELECT * FROM project( TABLE(SELECT * FROM history h1, history_v h2
        WHERE h1.id = h2.id and h1.time=h2.time 
        ORDER BY h1.id SCATTER BY h2.time), 3)
    WHERE id <3 ORDER BY 1;
 id 
----
  1
  1
  1
  1
  2
  2
  2
  2
  2
  2
  2
  2
(12 rows)

  -- Join history table with ETF, using join format
    SELECT * from history h1 join project( TABLE(SELECT * FROM history h1, history_v h2
        WHERE h1.id = h2.id and h1.time=h2.time 
        ORDER BY h1.id SCATTER BY h2.time), 3) h3
    ON h1.id = h3.id
    order by h1.time limit 5;
 id |        time         | id 
----+---------------------+----
  3 | 2011-08-19 19:05:13 |  3
  3 | 2011-08-19 19:05:13 |  3
  3 | 2011-08-19 19:05:13 |  3
  3 | 2011-08-19 19:05:13 |  3
  3 | 2011-08-19 19:05:13 |  3
(5 rows)

    -- Join history table with ETF, put join condition in where clause
    SELECT * from history h1, project( TABLE(SELECT * FROM history h1, history_v h2
        WHERE h1.id = h2.id and h1.time=h2.time 
        ORDER BY h1.id SCATTER BY h2.time), 3) h3
    WHERE h1.id = h3.id
    order by h1.time desc limit 5;
 id |        time         | id 
----+---------------------+----
  1 | 2011-08-22 10:16:10 |  1
  1 | 2011-08-22 10:16:10 |  1
  1 | 2011-08-22 10:16:10 |  1
  1 | 2011-08-22 10:16:10 |  1
  1 | 2011-08-22 10:15:04 |  1
(5 rows)

