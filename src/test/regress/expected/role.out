-- 
-- ROLE
--
-- MPP-15479: ALTER ROLE SET statement
DROP ROLE IF EXISTS role_112911;
NOTICE:  role "role_112911" does not exist, skipping
NOTICE:  role "role_112911" does not exist, skipping  (seg0 localhost:12001 pid=20806)
NOTICE:  role "role_112911" does not exist, skipping  (seg1 localhost:12002 pid=20807)
CREATE ROLE role_112911 WITH LOGIN;
NOTICE:  resource queue required -- using default resource queue "pg_default"
CREATE SCHEMA common_schema;
/* Alter Role Set statement_mem */
ALTER ROLE role_112911 SET statement_mem TO '150MB';
SELECT gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM pg_authid WHERE rolname = 'role_112911'
 UNION ALL
SELECT DISTINCT 0 as gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM gp_dist_random('pg_authid') WHERE rolname = 'role_112911';
 gp_segment_id |   rolname   |      rolconfig      
---------------+-------------+---------------------
            -1 | role_112911 | statement_mem=150MB
             0 | role_112911 | statement_mem=150MB
(2 rows)

/* Alter Role Set search_path */
ALTER ROLE role_112911 SET search_path = common_schema;
SELECT gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM pg_authid WHERE rolname = 'role_112911'
 UNION ALL
SELECT DISTINCT 0 as gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM gp_dist_random('pg_authid') WHERE rolname = 'role_112911';
 gp_segment_id |   rolname   |                   rolconfig                   
---------------+-------------+-----------------------------------------------
            -1 | role_112911 | statement_mem=150MB,search_path=common_schema
             0 | role_112911 | statement_mem=150MB,search_path=common_schema
(2 rows)

/* Alter Role Reset statement_mem */
ALTER ROLE role_112911 RESET statement_mem;
SELECT gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM pg_authid WHERE rolname = 'role_112911'
 UNION ALL
SELECT DISTINCT 0 as gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM gp_dist_random('pg_authid') WHERE rolname = 'role_112911';
 gp_segment_id |   rolname   |         rolconfig         
---------------+-------------+---------------------------
            -1 | role_112911 | search_path=common_schema
             0 | role_112911 | search_path=common_schema
(2 rows)

/* Alter Role Set statement_mem */
ALTER ROLE role_112911 SET statement_mem = 100000;
SELECT gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM pg_authid WHERE rolname = 'role_112911'
 UNION ALL
SELECT DISTINCT 0 as gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM gp_dist_random('pg_authid') WHERE rolname = 'role_112911';
 gp_segment_id |   rolname   |                   rolconfig                    
---------------+-------------+------------------------------------------------
            -1 | role_112911 | search_path=common_schema,statement_mem=100000
             0 | role_112911 | search_path=common_schema,statement_mem=100000
(2 rows)

/* Alter Role Reset All */
ALTER ROLE role_112911 RESET ALL;
SELECT gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM pg_authid WHERE rolname = 'role_112911'
 UNION ALL
SELECT DISTINCT 0 as gp_segment_id, rolname, array_to_string(rolconfig,',') as rolconfig
  FROM gp_dist_random('pg_authid') WHERE rolname = 'role_112911';
 gp_segment_id |   rolname   | rolconfig 
---------------+-------------+-----------
            -1 | role_112911 | 
             0 | role_112911 | 
(2 rows)

-- Set search_path to a non-existent schema. This used to (incorrectly)
-- print a NOTICE from each segment. (MPP-3068)
alter role role_112911 set search_path to blahblah1;
NOTICE:  schema "blahblah1" does not exist
DROP ROLE role_112911;
DROP SCHEMA common_schema;
-- SHA-256 testing
set password_hash_algorithm to "SHA-256";
create role sha256 password 'abc';
NOTICE:  resource queue required -- using default resource queue "pg_default"
select rolname, rolpassword from pg_authid where rolname = 'sha256';
 rolname |                              rolpassword                               
---------+------------------------------------------------------------------------
 sha256  | sha256b0cec85177f91ffcdc8f9b4ca25f8f24f310b0898d33074d1c37f063b87fd193
(1 row)

drop role sha256;
create role superuser;
NOTICE:  resource queue required -- using default resource queue "pg_default"
create role u1;
NOTICE:  resource queue required -- using default resource queue "pg_default"
set role superuser;
create table t1(a int, b int constraint c check (b>=100));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create view t1_view as select * from t1;
grant all privileges on t1, t1_view to u1;
set role superuser;
revoke all privileges on TABLE t1, t1_view FROM u1;
set role u1;
select * from t1_view order by 1;
ERROR:  permission denied for relation t1_view
reset role;
drop view t1_view;
drop table t1;
drop role u1;
drop role superuser;
-- Test creating user who has been renamed before.
CREATE USER jonathan11 WITH PASSWORD 'abc1';
NOTICE:  resource queue required -- using default resource queue "pg_default"
CREATE USER jonathan12 WITH PASSWORD 'abc2';
NOTICE:  resource queue required -- using default resource queue "pg_default"
ALTER USER jonathan11 RENAME TO jona11;
ALTER USER jonathan12 RENAME TO jona12;
DROP USER jona11;
DROP USER jona12;
CREATE USER jonathan12 WITH PASSWORD 'abc2';
NOTICE:  resource queue required -- using default resource queue "pg_default"
ALTER USER jonathan11 RENAME TO jona11;
ERROR:  role "jonathan11" does not exist
ALTER USER jonathan12 RENAME TO jona12;
CREATE GROUP marketing WITH USER jona11,jona12;
NOTICE:  resource queue required -- using default resource queue "pg_default"
ERROR:  role "jona11" does not exist
ALTER GROUP marketing RENAME TO market;
ERROR:  role "marketing" does not exist
DROP GROUP market;
ERROR:  role "market" does not exist
DROP USER jona11;
ERROR:  role "jona11" does not exist
DROP USER jona12;
