-- Matrix multiply array[x][m] * array[m][y]
select matrix_multiply(ARRAY[[1,2]]::int2[], ARRAY[[1],[2]]::int2[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], ARRAY[[1],[2]]::int4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], ARRAY[[1],[2]]::int8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], ARRAY[[1],[2]]::float4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], ARRAY[[1],[2]]::float8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], ARRAY[[1],[2]]::numeric[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], ARRAY[[1],[2]]::int2[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], ARRAY[[1],[2]]::int4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], ARRAY[[1],[2]]::int8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], ARRAY[[1],[2]]::float4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], ARRAY[[1],[2]]::float8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], ARRAY[[1],[2]]::numeric[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], ARRAY[[1],[2]]::int2[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], ARRAY[[1],[2]]::int4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], ARRAY[[1],[2]]::int8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], ARRAY[[1],[2]]::float4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], ARRAY[[1],[2]]::float8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], ARRAY[[1],[2]]::numeric[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], ARRAY[[1],[2]]::int2[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], ARRAY[[1],[2]]::int4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], ARRAY[[1],[2]]::int8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], ARRAY[[1],[2]]::float4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], ARRAY[[1],[2]]::float8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], ARRAY[[1],[2]]::numeric[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], ARRAY[[1],[2]]::int2[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], ARRAY[[1],[2]]::int4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], ARRAY[[1],[2]]::int8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], ARRAY[[1],[2]]::float4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], ARRAY[[1],[2]]::float8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], ARRAY[[1],[2]]::numeric[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], ARRAY[[1],[2]]::int2[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], ARRAY[[1],[2]]::int4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], ARRAY[[1],[2]]::int8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], ARRAY[[1],[2]]::float4[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], ARRAY[[1],[2]]::float8[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], ARRAY[[1],[2]]::numeric[]);
 matrix_multiply 
-----------------
 {{5}}
(1 row)

-- Matrix multiply array[x][m] * scalar
select matrix_multiply(ARRAY[[1,2]]::int2[], 5::int2);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], 5::int4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], 5::int8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], 5::float4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], 5::float8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int2[], 5::numeric);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], 5::int2);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], 5::int4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], 5::int8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], 5::float4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], 5::float8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int4[], 5::numeric);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], 5::int2);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], 5::int4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], 5::int8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], 5::float4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], 5::float8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::int8[], 5::numeric);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], 5::int2);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], 5::int4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], 5::int8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], 5::float4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], 5::float8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float4[], 5::numeric);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], 5::int2);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], 5::int4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], 5::int8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], 5::float4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], 5::float8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::float8[], 5::numeric);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], 5::int2);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], 5::int4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], 5::int8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], 5::float4);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], 5::float8);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

select matrix_multiply(ARRAY[[1,2]]::numeric[], 5::numeric);
 matrix_multiply 
-----------------
 {{5,10}}
(1 row)

-- matrix add array[] + array[]
select matrix_add(ARRAY[[1,2]]::int2[], ARRAY[[1,2]]::int2[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int2[], ARRAY[[1,2]]::int4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int2[], ARRAY[[1,2]]::int8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int2[], ARRAY[[1,2]]::float4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int2[], ARRAY[[1,2]]::float8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int2[], ARRAY[[1,2]]::numeric[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int4[], ARRAY[[1,2]]::int2[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int4[], ARRAY[[1,2]]::int4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int4[], ARRAY[[1,2]]::int8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int4[], ARRAY[[1,2]]::float4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int4[], ARRAY[[1,2]]::float8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int4[], ARRAY[[1,2]]::numeric[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int8[], ARRAY[[1,2]]::int2[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int8[], ARRAY[[1,2]]::int4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int8[], ARRAY[[1,2]]::int8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int8[], ARRAY[[1,2]]::float4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int8[], ARRAY[[1,2]]::float8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::int8[], ARRAY[[1,2]]::numeric[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float4[], ARRAY[[1,2]]::int2[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float4[], ARRAY[[1,2]]::int4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float4[], ARRAY[[1,2]]::int8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float4[], ARRAY[[1,2]]::float4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float4[], ARRAY[[1,2]]::float8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float4[], ARRAY[[1,2]]::numeric[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float8[], ARRAY[[1,2]]::int2[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float8[], ARRAY[[1,2]]::int4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float8[], ARRAY[[1,2]]::int8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float8[], ARRAY[[1,2]]::float4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float8[], ARRAY[[1,2]]::float8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::float8[], ARRAY[[1,2]]::numeric[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::numeric[], ARRAY[[1,2]]::int2[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::numeric[], ARRAY[[1,2]]::int4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::numeric[], ARRAY[[1,2]]::int8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::numeric[], ARRAY[[1,2]]::float4[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::numeric[], ARRAY[[1,2]]::float8[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

select matrix_add(ARRAY[[1,2]]::numeric[], ARRAY[[1,2]]::numeric[]);
 matrix_add 
------------
 {{2,4}}
(1 row)

create table dtype
(tint2     int2[],
 tint4     int4[],
 tint8     int8[],
 tfloat4   float4[],
 tfloat8   float8[],
 tnumeric  numeric[]) 
Distributed randomly;
insert into dtype values(
  array[1,   2,   3],
  array[1,   2,   3],
  array[1,   2,   3],
  array[1.1, 2.2, 3.3],
  array[1.1, 2.2, 3.3],
  array[1.1, 2.2, 3.3]
);
insert into dtype values(
  array[5,   4,   3],
  array[5,   4,   3],
  array[5,   4,   3],
  array[5.1, 4.2, 3.3],
  array[5.1, 4.2, 3.3],
  array[5.1, 4.2, 3.3]
);
select sum(tint2)    from dtype;
   sum   
---------
 {6,6,6}
(1 row)

select sum(tint4)    from dtype;
   sum   
---------
 {6,6,6}
(1 row)

select sum(tint8)    from dtype;
   sum   
---------
 {6,6,6}
(1 row)

select sum(tfloat4)  from dtype;
                         sum                          
------------------------------------------------------
 {6.19999992847443,6.39999985694885,6.59999990463257}
(1 row)

select sum(tfloat8)  from dtype;
      sum      
---------------
 {6.2,6.4,6.6}
(1 row)

select sum(tnumeric) from dtype;
      sum      
---------------
 {6.2,6.4,6.6}
(1 row)

-- should be able to handle null values during sumation
insert into dtype values(null, null, null, null, null, null);
select sum(tint2)    from dtype;
   sum   
---------
 {6,6,6}
(1 row)

select sum(tint4)    from dtype;
   sum   
---------
 {6,6,6}
(1 row)

select sum(tint8)    from dtype;
   sum   
---------
 {6,6,6}
(1 row)

select sum(tfloat4)  from dtype;
                         sum                          
------------------------------------------------------
 {6.19999992847443,6.39999985694885,6.59999990463257}
(1 row)

select sum(tfloat8)  from dtype;
      sum      
---------------
 {6.2,6.4,6.6}
(1 row)

select sum(tnumeric) from dtype;
      sum      
---------------
 {6.2,6.4,6.6}
(1 row)

-- these should fail, but tell us what the return type of sum() was
select sum(tint2)::boolean[]     from dtype;  -- bigint[]
ERROR:  cannot cast type bigint[] to boolean[]
LINE 1: select sum(tint2)::boolean[]     from dtype;
                           ^
select sum(tint4)::boolean[]     from dtype;  -- bigint[]
ERROR:  cannot cast type bigint[] to boolean[]
LINE 1: select sum(tint4)::boolean[]     from dtype;
                           ^
select sum(tint8)::boolean[]     from dtype;  -- bigint[]
ERROR:  cannot cast type bigint[] to boolean[]
LINE 1: select sum(tint8)::boolean[]     from dtype;
                           ^
select sum(tfloat4)::boolean[]   from dtype;  -- float8[]
ERROR:  cannot cast type double precision[] to boolean[]
LINE 1: select sum(tfloat4)::boolean[]   from dtype;
                             ^
select sum(tfloat8)::boolean[]   from dtype;  -- float8[]
ERROR:  cannot cast type double precision[] to boolean[]
LINE 1: select sum(tfloat8)::boolean[]   from dtype;
                             ^
select sum(tnumeric)::boolean[]  from dtype;  -- float8[]
ERROR:  cannot cast type double precision[] to boolean[]
LINE 1: select sum(tnumeric)::boolean[]  from dtype;
                              ^
-- What would normal sum do?
select sum(tint2[1])::boolean     from dtype;  -- bigint
ERROR:  cannot cast type bigint to boolean
LINE 1: select sum(tint2[1])::boolean     from dtype;
                              ^
select sum(tint4[1])::boolean     from dtype;  -- bigint
ERROR:  cannot cast type bigint to boolean
LINE 1: select sum(tint4[1])::boolean     from dtype;
                              ^
select sum(tint8[1])::boolean     from dtype;  -- numeric  (bigint above)
ERROR:  cannot cast type numeric to boolean
LINE 1: select sum(tint8[1])::boolean     from dtype;
                              ^
select sum(tfloat4[1])::boolean   from dtype;  -- float4   (float8 above)
ERROR:  cannot cast type real to boolean
LINE 1: select sum(tfloat4[1])::boolean   from dtype;
                                ^
select sum(tfloat8[1])::boolean   from dtype;  -- float8
ERROR:  cannot cast type double precision to boolean
LINE 1: select sum(tfloat8[1])::boolean   from dtype;
                                ^
select sum(tnumeric[1])::boolean  from dtype;  -- numeric
ERROR:  cannot cast type numeric to boolean
LINE 1: select sum(tnumeric[1])::boolean  from dtype;
                                 ^
-- Matrix inversion 
select pinv(array[[1,-1,3],[2,1,2],[-2,-2,1]])::numeric(10,8)[] as pinv;
                                                      pinv                                                      
----------------------------------------------------------------------------------------------------------------
 {{1.00000000,-1.00000000,-1.00000000},{-1.20000000,1.40000000,0.80000000},{-0.40000000,0.80000000,0.60000000}}
(1 row)

select pinv(array[[1,-1],[2,1],[-2,-2]])::numeric(10,8)[] as pinv;
                                    pinv                                     
-----------------------------------------------------------------------------
 {{0.37931034,0.24137931,-0.06896552},{-0.48275862,-0.03448276,-0.27586207}}
(1 row)

select pinv(array[[1,-1,3],[2,1,2]])::numeric(10,8)[] as pinv;
                                    pinv                                     
-----------------------------------------------------------------------------
 {{-0.10000000,0.30000000},{-0.32000000,0.36000000},{0.26000000,0.02000000}}
(1 row)

select pinv(array[[1,-1,3],[2,1,2],[-2,-2,1]])::numeric(10,8)[] as pinv;
                                                      pinv                                                      
----------------------------------------------------------------------------------------------------------------
 {{1.00000000,-1.00000000,-1.00000000},{-1.20000000,1.40000000,0.80000000},{-0.40000000,0.80000000,0.60000000}}
(1 row)

-- Matrix inversion with oddly shaped matrixes
select pinv(array[[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]])::numeric(10,8)[] as pinv;
pinv

 {{0.00000574},{0.00000861},{0.00001148},{0.00001435},{0.00001721},{0.00002008},{0.00002295},{0.00002582},{0.00002869},{0.00003156},{0.00003443},{0.00003730},{0.00004017},{0.00004304},{0.00004590},{0.00004877},{0.00005164},{0.00005451},{0.00005738},{0.00006025},{0.00006312},{0.00006599},{0.00006886},{0.00007173},{0.00007459},{0.00007746},{0.00008033},{0.00008320},{0.00008607},{0.00008894},{0.00009181},{0.00009468},{0.00009755},{0.00010042},{0.00010329},{0.00010615},{0.00010902},{0.00011189},{0.00011476},{0.00011763},{0.00012050},{0.00012337},{0.00012624},{0.00012911},{0.00013198},{0.00013484},{0.00013771},{0.00014058},{0.00014345},{0.00014632},{0.00014919},{0.00015206},{0.00015493},{0.00015780},{0.00016067},{0.00016353},{0.00016640},{0.00016927},{0.00017214},{0.00017501},{0.00017788},{0.00018075},{0.00018362},{0.00018649},{0.00018936},{0.00019222},{0.00019509},{0.00019796},{0.00020083},{0.00020370},{0.00020657},{0.00020944},{0.00021231},{0.00021518},{0.00021805},{0.00022092},{0.00022378},{0.00022665},{0.00022952},{0.00023239},{0.00023526},{0.00023813},{0.00024100},{0.00024387},{0.00024674},{0.00024961},{0.00025247},{0.00025534},{0.00025821},{0.00026108},{0.00026395},{0.00026682},{0.00026969},{0.00027256},{0.00027543},{0.00027830},{0.00028116},{0.00028403},{0.00028690},{0.00028977}}
(1 row)

select pinv(array[[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[
19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[
35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[
51],[52],[53],[54],[55],[56],[57],[58],[59],[60],[61],[62],[63],[64],[65],[66],[
67],[68],[69],[70],[71],[72],[73],[74],[75],[76],[77],[78],[79],[80],[81],[82],[
83],[84],[85],[86],[87],[88],[89],[90],[91],[92],[93],[94],[95],[96],[97],[98],[
99],[100],[101]])::numeric(10,8)[] as pinv;
pinv
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {{0.00000574,0.00000861,0.00001148,0.00001435,0.00001721,0.00002008,0.00002295,0.00002582,0.00002869,0.00003156,0.00003443,0.00003730,0.00004017,0.00004304,0.00004590,0.00004877,0.00005164,0.00005451,0.00005738,0.00006025,0.00006312,0.00006599,0.00006886,0.00007173,0.00007459,0.00007746,0.00008033,0.00008320,0.00008607,0.00008894,0.00009181,0.00009468,0.00009755,0.00010042,0.00010329,0.00010615,0.00010902,0.00011189,0.00011476,0.00011763,0.00012050,0.00012337,0.00012624,0.00012911,0.00013198,0.00013484,0.00013771,0.00014058,0.00014345,0.00014632,0.00014919,0.00015206,0.00015493,0.00015780,0.00016067,0.00016353,0.00016640,0.00016927,0.00017214,0.00017501,0.00017788,0.00018075,0.00018362,0.00018649,0.00018936,0.00019222,0.00019509,0.00019796,0.00020083,0.00020370,0.00020657,0.00020944,0.00021231,0.00021518,0.00021805,0.00022092,0.00022378,0.00022665,0.00022952,0.00023239,0.00023526,0.00023813,0.00024100,0.00024387,0.00024674,0.00024961,0.00025247,0.00025534,0.00025821,0.00026108,0.00026395,0.00026682,0.00026969,0.00027256,0.00027543,0.00027830,0.00028116,0.00028403,0.00028690,0.00028977}}
(1 row)

-- Null matrix
select pinv(array[[0,0,0], [0,0,0], [0,0,0]]) as pinv;
           pinv            
---------------------------
 {{0,0,0},{0,0,0},{0,0,0}}
(1 row)

-- Ensure that  AA' = A'A
select matrix_multiply(array[[1,-1,3],[2,1,2],[-2,-2,1]], 
                       pinv(array[[1,-1,3],[2,1,2],[-2,-2,1]]))::numeric(10,8)[] as "AA'";
                                                    AA'                                                     
------------------------------------------------------------------------------------------------------------
 {{1.00000000,0.00000000,0.00000000},{0.00000000,1.00000000,0.00000000},{0.00000000,0.00000000,1.00000000}}
(1 row)

select matrix_multiply(pinv(array[[1,-1,3],[2,1,2],[-2,-2,1]]),
                       array[[1,-1,3],[2,1,2],[-2,-2,1]])::numeric(10,8)[] as "A'A";
                                                    A'A                                                     
------------------------------------------------------------------------------------------------------------
 {{1.00000000,0.00000000,0.00000000},{0.00000000,1.00000000,0.00000000},{0.00000000,0.00000000,1.00000000}}
(1 row)

select matrix_multiply(pinv(array[['1.0e+308'::float8,0,0],[0, 1, 1]]),
                       array[['1.0e+308'::float8,0,0],[0, 1, 1]]) as "A'A";
            A'A            
---------------------------
 {{1,0,0},{0,0,0},{0,0,0}}
(1 row)

drop table dtype;
-- Check overflow
--SMALLINT: [-32768, 32767]
select matrix_add(array[32767]::smallint[], array[1]::smallint[]);      --overflow
ERROR:  int value out of range: overflow
select matrix_add(array[32766]::smallint[], array[1]::smallint[]);      --no overflow
 matrix_add 
------------
 {32767}
(1 row)

select matrix_add(array[-32768]::smallint[], array[-1]::smallint[]);    --overflow
ERROR:  int value out of range: overflow
select matrix_add(array[-32767]::smallint[], array[-1]::smallint[]);    --no overflow
 matrix_add 
------------
 {-32768}
(1 row)

select matrix_add(array[array[16000]]::smallint[], array[array[32000]]::smallint[]); --overflow
ERROR:  int value out of range: overflow
-- Check overflow
--INT: [-2147483648, 2147483647]
select matrix_add(array[2147483647]::int[], array[1]::int[]);   --overflow
ERROR:  int value out of range: overflow
select matrix_add(array[2147483646]::int[], array[1]::int[]);   --no overflow
  matrix_add  
--------------
 {2147483647}
(1 row)

select matrix_add(array[-2147483648]::int[], array[-1]::int[]); --overflow
ERROR:  int value out of range: overflow
select matrix_add(array[-2147483647]::int[], array[-1]::int[]); --no overflow
  matrix_add   
---------------
 {-2147483648}
(1 row)

 
-- Check overflow
--BIGINT: [-9223372036854775808, 9223372036854775807]
select matrix_add(array[9223372036854775807]::bigint[], array[1]::bigint[]);    --overflow
ERROR:  int value out of range: overflow
select matrix_add(array[9223372036854775806]::bigint[], array[1]::int[]);       --no overflow
      matrix_add       
-----------------------
 {9223372036854775807}
(1 row)

select matrix_add(array[-9223372036854775808]::bigint[], array[-1]::bigint[]);  --overflow
ERROR:  int value out of range: overflow
select matrix_add(array[-9223372036854775807]::bigint[], array[-1]::int[]);     --no overflow
       matrix_add       
------------------------
 {-9223372036854775808}
(1 row)

 
-- Matrix_multiply will promote result to int64 or float8 automatically
select matrix_multiply(array[array[9223372036854775807/3]]::bigint[], array[array[4]]::bigint[]);       --overflow
ERROR:  int value out of range: overflow
select matrix_multiply(array[array[-9223372036854775808]]::bigint[], array[array[-1]]::bigint[]);       --overflow
ERROR:  int value out of range: overflow
 
select matrix_multiply(array[array[10e200], array[10e200]]::float8[], array[array[10e200]]::float8[]);  --overflow
ERROR:  value out of range: overflow
 
