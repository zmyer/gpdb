-- check behavior when values are NULL with date type
create table date_null (a int4, b date);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into date_null values (1, '1957-04-09');
insert into date_null values (2, NULL);
select a from date_null where b <= date '1957-04-10';
 a
---
 1
(1 row)

select a from date_null where b <= date '1957-04-10' - interval '90' day;
 a
---
 1
(1 row)

-- check behavior when values are NULL with float8 type
create table float8_null (a float8, b float8, c float8);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into float8_null values (1, NULL, NULL);
select a from float8_null where b <=a;
 a
---
(0 rows)

select a from float8_null where b*a <=0;
 a
---
(0 rows)

select a from float8_null where b*c <=0;
 a
---
(0 rows)

select a+b from float8_null;
 ?column?
----------

(1 row)

select b+c from float8_null;
 ?column?
----------

(1 row)

select a-b from float8_null;
 ?column?
----------

(1 row)

select b-c from float8_null;
 ?column?
----------

(1 row)

-- check behavior when values are NULL with int4 type
create table int4_null (a int4, b int4, c int4);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into int4_null values (1, NULL, NULL);
select a from int4_null where b <=a;
 a
---
(0 rows)

select a from int4_null where b*a <=0;
 a
---
(0 rows)

select a from int4_null where b*c <=0;
 a
---
(0 rows)

select a+b from int4_null;
 ?column?
----------

(1 row)

select b+c from int4_null;
 ?column?
----------

(1 row)

select a-b from int4_null;
 ?column?
----------

(1 row)

select b-c from int4_null;
 ?column?
----------

(1 row)

-- check behavior when values are NULL with int8 type
create table int8_null (a int8, b int8, c int8);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into int8_null values (1, NULL, NULL);
select a from int8_null where b <=a;
 a
---
(0 rows)

select a from int8_null where b*a <=0;
 a
---
(0 rows)

select a from int8_null where b*c <=0;
 a
---
(0 rows)

select a+b from int8_null;
 ?column?
----------

(1 row)

select b+c from int8_null;
 ?column?
----------

(1 row)

select a-b from int8_null;
 ?column?
----------

(1 row)

select b-c from int8_null;
 ?column?
----------

(1 row)

