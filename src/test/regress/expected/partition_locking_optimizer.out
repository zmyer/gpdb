-- Test locking behaviour. When creating, dropping, querying or adding indexes
-- partitioned tables, we want to lock only the master, not the children.
-- Show locks in master and in segments. Because the number of segments
-- in the cluster depends on configuration, we print only summary information
-- of the locks in segments. If a relation is locked only on one segment,
-- we print that as a special case, but otherwise we just print "n segments",
-- meaning the relation is locked on more than one segment.
create or replace view locktest as
select coalesce(
  case when relname like 'pg_toast%index' then 'toast index'
       when relname like 'pg_toast%' then 'toast table'
       when relname like 'pg_aoseg%' then 'aoseg table'
       else relname end, 'dropped table'),
  mode,
  locktype,
  case when l.gp_segment_id = -1 then 'master'
       when COUNT(*) = 1 then '1 segment'
       else 'n segments' end AS node
from pg_locks l
left outer join pg_class c on (l.relation = c.oid),
pg_database d
where relation is not null
and l.database = d.oid
and (relname <> 'gp_fault_strategy' or relname IS NULL)
and d.datname = current_database()
group by l.gp_segment_id = -1, relation, relname, locktype, mode
order by 1, 3, 2;
-- Partitioned table with toast table
begin;
-- creation
create table g (i int, t text) partition by range(i)
(start(1) end(10) every(1));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "g_1_prt_1" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_2" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_3" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_4" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_5" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_6" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_7" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_8" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_9" for table "g"
select * from locktest;
          coalesce          |        mode         | locktype |    node    
----------------------------+---------------------+----------+------------
 g                          | AccessExclusiveLock | relation | master
 g                          | AccessExclusiveLock | relation | n segments
 gp_distribution_policy     | RowExclusiveLock    | relation | master
 locktest                   | AccessShareLock     | relation | master
 pg_class                   | AccessShareLock     | relation | master
 pg_class                   | RowExclusiveLock    | relation | master
 pg_class_oid_index         | AccessShareLock     | relation | master
 pg_class_relname_nsp_index | AccessShareLock     | relation | master
 pg_depend                  | RowExclusiveLock    | relation | master
 pg_locks                   | AccessShareLock     | relation | master
 pg_partition               | AccessShareLock     | relation | master
 pg_partition               | RowExclusiveLock    | relation | master
 pg_partition_rule          | RowExclusiveLock    | relation | master
 pg_type                    | RowExclusiveLock    | relation | master
 toast index                | AccessExclusiveLock | relation | n segments
 toast index                | AccessExclusiveLock | relation | master
 toast table                | ShareLock           | relation | n segments
 toast table                | ShareLock           | relation | master
(18 rows)

commit;
-- drop
begin;
drop table g;
select * from locktest;
          coalesce          |        mode         | locktype |    node    
----------------------------+---------------------+----------+------------
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | n segments
 gp_distribution_policy     | RowExclusiveLock    | relation | n segments
 gp_distribution_policy     | RowExclusiveLock    | relation | master
 locktest                   | AccessShareLock     | relation | master
 pg_class                   | AccessShareLock     | relation | master
 pg_class                   | RowExclusiveLock    | relation | master
 pg_class_oid_index         | AccessShareLock     | relation | master
 pg_class_relname_nsp_index | AccessShareLock     | relation | master
 pg_depend                  | RowExclusiveLock    | relation | master
 pg_locks                   | AccessShareLock     | relation | master
 pg_partition               | RowExclusiveLock    | relation | master
 pg_partition_rule          | RowExclusiveLock    | relation | master
 pg_type                    | RowExclusiveLock    | relation | master
(18 rows)

commit;
-- AO table (ao segments, block directory won't exist after create)
begin;
-- creation
create table g (i int, t text, n numeric)
with (appendonly = true)
partition by list(i)
(values(1), values(2), values(3));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "g_1_prt_1" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_2" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_3" for table "g"
select * from locktest;
          coalesce          |        mode         | locktype |    node    
----------------------------+---------------------+----------+------------
 g                          | AccessExclusiveLock | relation | n segments
 g                          | AccessExclusiveLock | relation | master
 gp_distribution_policy     | RowExclusiveLock    | relation | master
 locktest                   | AccessShareLock     | relation | master
 pg_appendonly              | RowExclusiveLock    | relation | n segments
 pg_appendonly              | RowExclusiveLock    | relation | master
 pg_class                   | AccessShareLock     | relation | master
 pg_class                   | RowExclusiveLock    | relation | master
 pg_class_oid_index         | AccessShareLock     | relation | master
 pg_class_relname_nsp_index | AccessShareLock     | relation | master
 pg_depend                  | RowExclusiveLock    | relation | master
 pg_locks                   | AccessShareLock     | relation | master
 pg_partition               | AccessShareLock     | relation | master
 pg_partition               | RowExclusiveLock    | relation | master
 pg_partition_rule          | RowExclusiveLock    | relation | master
 pg_type                    | RowExclusiveLock    | relation | master
 toast index                | AccessExclusiveLock | relation | n segments
 toast index                | AccessExclusiveLock | relation | master
 toast table                | ShareLock           | relation | n segments
 toast table                | ShareLock           | relation | master
(20 rows)

commit;
begin;
-- add a little data
insert into g values(1), (2), (3);
insert into g values(1), (2), (3);
insert into g values(1), (2), (3);
insert into g values(1), (2), (3);
insert into g values(1), (2), (3);
select * from locktest;
          coalesce          |        mode         |         locktype         |    node    
----------------------------+---------------------+--------------------------+------------
 aoseg table                | AccessShareLock     | relation                 | n segments
 aoseg table                | AccessShareLock     | relation                 | n segments
 aoseg table                | AccessShareLock     | relation                 | n segments
 aoseg table                | AccessShareLock     | relation                 | n segments
 g                          | RowExclusiveLock    | relation                 | n segments
 g                          | RowExclusiveLock    | relation                 | master
 g_1_prt_1                  | AccessExclusiveLock | append-only segment file | master
 g_1_prt_1                  | AccessExclusiveLock | append-only segment file | 1 segment
 g_1_prt_1                  | AccessShareLock     | relation                 | master
 g_1_prt_1                  | RowExclusiveLock    | relation                 | 1 segment
 g_1_prt_2                  | AccessExclusiveLock | append-only segment file | 1 segment
 g_1_prt_2                  | AccessExclusiveLock | append-only segment file | master
 g_1_prt_2                  | AccessShareLock     | relation                 | master
 g_1_prt_2                  | RowExclusiveLock    | relation                 | 1 segment
 g_1_prt_3                  | AccessExclusiveLock | append-only segment file | master
 g_1_prt_3                  | AccessExclusiveLock | append-only segment file | 1 segment
 g_1_prt_3                  | AccessShareLock     | relation                 | master
 g_1_prt_3                  | RowExclusiveLock    | relation                 | 1 segment
 locktest                   | AccessShareLock     | relation                 | master
 pg_class                   | AccessShareLock     | relation                 | master
 pg_class_oid_index         | AccessShareLock     | relation                 | master
 pg_class_relname_nsp_index | AccessShareLock     | relation                 | master
 pg_locks                   | AccessShareLock     | relation                 | master
(23 rows)

commit;
-- drop
begin;
drop table g;
select * from locktest;
          coalesce          |        mode         | locktype |    node    
----------------------------+---------------------+----------+------------
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | n segments
 gp_distribution_policy     | RowExclusiveLock    | relation | n segments
 gp_distribution_policy     | RowExclusiveLock    | relation | master
 locktest                   | AccessShareLock     | relation | master
 pg_appendonly              | RowExclusiveLock    | relation | master
 pg_appendonly              | RowExclusiveLock    | relation | n segments
 pg_class                   | AccessShareLock     | relation | master
 pg_class                   | RowExclusiveLock    | relation | master
 pg_class_oid_index         | AccessShareLock     | relation | master
 pg_class_relname_nsp_index | AccessShareLock     | relation | master
 pg_depend                  | RowExclusiveLock    | relation | master
 pg_locks                   | AccessShareLock     | relation | master
 pg_partition               | RowExclusiveLock    | relation | master
 pg_partition_rule          | RowExclusiveLock    | relation | master
 pg_type                    | RowExclusiveLock    | relation | master
(26 rows)

commit;
-- Indexing
create table g (i int, t text) partition by range(i)
(start(1) end(10) every(1));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "g_1_prt_1" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_2" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_3" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_4" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_5" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_6" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_7" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_8" for table "g"
NOTICE:  CREATE TABLE will create partition "g_1_prt_9" for table "g"
begin;
create index g_idx on g(i);
NOTICE:  building index for child partition "g_1_prt_1"
NOTICE:  building index for child partition "g_1_prt_2"
NOTICE:  building index for child partition "g_1_prt_3"
NOTICE:  building index for child partition "g_1_prt_4"
NOTICE:  building index for child partition "g_1_prt_5"
NOTICE:  building index for child partition "g_1_prt_6"
NOTICE:  building index for child partition "g_1_prt_7"
NOTICE:  building index for child partition "g_1_prt_8"
NOTICE:  building index for child partition "g_1_prt_9"
select * from locktest;
          coalesce          |        mode         | locktype |    node    
----------------------------+---------------------+----------+------------
 g                          | ShareLock           | relation | n segments
 g                          | ShareLock           | relation | master
 g_idx                      | AccessExclusiveLock | relation | n segments
 g_idx                      | AccessExclusiveLock | relation | master
 locktest                   | AccessShareLock     | relation | master
 pg_class                   | AccessShareLock     | relation | master
 pg_class_oid_index         | AccessShareLock     | relation | master
 pg_class_relname_nsp_index | AccessShareLock     | relation | master
 pg_locks                   | AccessShareLock     | relation | master
 pg_partition_rule          | AccessShareLock     | relation | master
(10 rows)

commit;
-- Force use of the index in the select and delete below. We're not interested
-- in the plan we get, but a seqscan will not lock the index while an index
-- scan will, and we want to avoid the plan-dependent difference in the
-- expected output of this test.
set enable_seqscan=off;
-- test select locking
begin;
select * from g where i = 1;
 i | t 
---+---
(0 rows)

-- Known_opt_diff: MPP-20936
select * from locktest;
          coalesce          |      mode       | locktype |   node    
----------------------------+-----------------+----------+-----------
 g                          | AccessShareLock | relation | master
 g_1_prt_1                  | AccessShareLock | relation | 1 segment
 g_idx_1_prt_1              | AccessShareLock | relation | 1 segment
 locktest                   | AccessShareLock | relation | master
 pg_class                   | AccessShareLock | relation | master
 pg_class_oid_index         | AccessShareLock | relation | master
 pg_class_relname_nsp_index | AccessShareLock | relation | master
 pg_locks                   | AccessShareLock | relation | master
(8 rows)

commit;
begin;
-- insert locking
insert into g values(3, 'f');
select * from locktest;
          coalesce          |       mode       | locktype |   node    
----------------------------+------------------+----------+-----------
 g                          | RowExclusiveLock | relation | master
 g                          | RowExclusiveLock | relation | 1 segment
 g_1_prt_3                  | RowExclusiveLock | relation | 1 segment
 locktest                   | AccessShareLock  | relation | master
 pg_class                   | AccessShareLock  | relation | master
 pg_class_oid_index         | AccessShareLock  | relation | master
 pg_class_relname_nsp_index | AccessShareLock  | relation | master
 pg_locks                   | AccessShareLock  | relation | master
(8 rows)

commit;
-- delete locking
begin;
delete from g where i = 4;
-- Known_opt_diff: MPP-20936
select * from locktest;
          coalesce          |       mode       | locktype |    node    
----------------------------+------------------+----------+------------
 g                          | ExclusiveLock    | relation | master
 g                          | RowExclusiveLock | relation | n segments
 g_1_prt_4                  | AccessShareLock  | relation | n segments
 g_idx_1_prt_4              | AccessShareLock  | relation | n segments
 locktest                   | AccessShareLock  | relation | master
 pg_class                   | AccessShareLock  | relation | master
 pg_class_oid_index         | AccessShareLock  | relation | master
 pg_class_relname_nsp_index | AccessShareLock  | relation | master
 pg_locks                   | AccessShareLock  | relation | master
(9 rows)

commit;
-- drop index
begin;
drop table g;
select * from locktest;
          coalesce          |        mode         | locktype |    node    
----------------------------+---------------------+----------+------------
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | master
 dropped table              | AccessExclusiveLock | relation | n segments
 dropped table              | AccessExclusiveLock | relation | master
 gp_distribution_policy     | RowExclusiveLock    | relation | master
 gp_distribution_policy     | RowExclusiveLock    | relation | n segments
 locktest                   | AccessShareLock     | relation | master
 pg_class                   | AccessShareLock     | relation | master
 pg_class                   | RowExclusiveLock    | relation | master
 pg_class_oid_index         | AccessShareLock     | relation | master
 pg_class_relname_nsp_index | AccessShareLock     | relation | master
 pg_depend                  | RowExclusiveLock    | relation | master
 pg_locks                   | AccessShareLock     | relation | master
 pg_partition               | RowExclusiveLock    | relation | master
 pg_partition_rule          | RowExclusiveLock    | relation | master
 pg_type                    | RowExclusiveLock    | relation | master
(20 rows)

commit;
