\echo '-- start_ignore'
-- start_ignore
DROP EXTERNAL TABLE IF EXISTS houses;
NOTICE:  table "houses" does not exist, skipping
DROP EXTERNAL TABLE IF EXISTS greek;
NOTICE:  table "greek" does not exist, skipping
DROP EXTERNAL TABLE IF EXISTS four_numbers;
NOTICE:  table "four_numbers" does not exist, skipping
DROP EXTERNAL TABLE IF EXISTS four_numbers_no_LF_before_EOF;
NOTICE:  table "four_numbers_no_lf_before_eof" does not exist, skipping
DROP EXTERNAL TABLE IF EXISTS export_greek;
NOTICE:  table "export_greek" does not exist, skipping
DROP EXTERNAL TABLE IF EXISTS export_houses;
NOTICE:  table "export_houses" does not exist, skipping
\echo '-- end_ignore'
-- end_ignore
/* Readable external tables */
CREATE READABLE EXTERNAL TABLE houses (
	id INT,
	tax INT,
	bedroom INT,
	bath FLOAT,
	price INT,
	size INT,
	lot INT
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/houses.txt')
FORMAT 'TEXT' (
	DELIMITER '|'
);
GRANT ALL ON TABLE houses TO PUBLIC;
CREATE READABLE EXTERNAL TABLE greek (
	letter CHARACTER(1),
	english_word VARCHAR,
	some_array DOUBLE PRECISION[]
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/greek_utf8.txt')
FORMAT 'TEXT'
ENCODING 'UTF8';
GRANT ALL ON TABLE greek TO PUBLIC;
CREATE READABLE EXTERNAL TABLE four_numbers (
	num INT
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/four_numbers.txt')
FORMAT 'TEXT';
GRANT ALL ON TABLE four_numbers TO PUBLIC;
CREATE READABLE EXTERNAL TABLE four_numbers_no_LF_before_EOF (
	num INT
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/four_numbers_no_LF_before_EOF.txt')
FORMAT 'TEXT';
GRANT ALL ON TABLE four_numbers TO PUBLIC;
/* Writable external tables */
/* Note the / at the end of the Location URI. This should not fail. */
CREATE WRITABLE EXTERNAL TABLE export_greek (
	letter CHARACTER(1),
	english_word VARCHAR,
	some_array DOUBLE PRECISION[]
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/permitexport/')
FORMAT 'TEXT' (
	DELIMITER E'\t'
);
CREATE WRITABLE EXTERNAL TABLE export_houses (
	id INT,
	tax INT,
	bedroom INT,
	bath FLOAT,
	price INT,
	size INT,
	lot INT
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/permitexport')
FORMAT 'TEXT' (
	DELIMITER E'\t'
);
/* Note that roles are defined at the system-level and are valid
 * for all databases in your Greenplum Database system. */
\echo '-- start_ignore'
-- start_ignore
revoke all on protocol gphdfs from _hadoop_perm_test_role;
ERROR:  role "_hadoop_perm_test_role" does not exist
DROP ROLE IF EXISTS _hadoop_perm_test_role;
NOTICE:  role "_hadoop_perm_test_role" does not exist, skipping
NOTICE:  role "_hadoop_perm_test_role" does not exist, skipping  (seg1 hdp:10001 pid=20470)
NOTICE:  role "_hadoop_perm_test_role" does not exist, skipping  (seg0 hdp:10000 pid=20468)
\echo '-- end_ignore'
-- end_ignore
/* Now create a new role. Initially this role should NOT
 * be allowed to create an external hdfs table. */
CREATE ROLE _hadoop_perm_test_role
WITH CREATEEXTTABLE
LOGIN;
NOTICE:  resource queue required -- using default resource queue "pg_default"
\set OLD_GP_USER :USER
\connect - _hadoop_perm_test_role;
/* The following MUST fail! */
CREATE EXTERNAL TABLE dummy_greek (
	letter CHARACTER(1),
	english_word VARCHAR,
	some_array DOUBLE PRECISION[]
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/greek_utf8.txt')
FORMAT 'TEXT'
ENCODING 'UTF8';
ERROR:  permission denied for external protocol gphdfs
/* Writing data must also fail */
CREATE WRITABLE EXTERNAL TABLE export_dummy_greek (
	letter CHARACTER(1),
	english_word VARCHAR,
	some_array DOUBLE PRECISION[]
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/export')
FORMAT 'TEXT' (
    DELIMITER ';'
)
ENCODING 'UTF8';
ERROR:  permission denied for external protocol gphdfs
\connect - :OLD_GP_USER
--ALTER ROLE _hadoop_perm_test_role
--WITH
--CREATEEXTTABLE(type='writable', protocol='gphdfs');
grant insert on protocol gphdfs to _hadoop_perm_test_role;
\connect - _hadoop_perm_test_role;
/* The following MUST still fail! */
CREATE EXTERNAL TABLE dummy_greek (
	letter CHARACTER(1),
	english_word VARCHAR,
	some_array DOUBLE PRECISION[]
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/greek_utf8.txt')
FORMAT 'TEXT'
ENCODING 'UTF8';
ERROR:  permission denied for external protocol gphdfs
/* On the other hand, creating the writable external table must work now. */
CREATE WRITABLE EXTERNAL TABLE export_dummy_greek (
	letter CHARACTER(1),
	english_word VARCHAR,
	some_array DOUBLE PRECISION[]
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/export')
FORMAT 'TEXT' (
    DELIMITER ';'
)
ENCODING 'UTF8';
INSERT INTO export_dummy_greek
SELECT * FROM greek;
\connect - :OLD_GP_USER
--ALTER ROLE _hadoop_perm_test_role
--WITH
--CREATEEXTTABLE(type='readable', protocol='gphdfs')
--CREATEEXTTABLE(type='writable');
grant all on protocol gphdfs to _hadoop_perm_test_role;
\connect - _hadoop_perm_test_role
/* The following should finally work! */
CREATE EXTERNAL TABLE dummy_greek (
	letter CHARACTER(1),
	english_word VARCHAR,
	some_array DOUBLE PRECISION[]
)
LOCATION ('gphdfs://10.152.10.234:8020/plaintext/greek_utf8.txt')
FORMAT 'TEXT'
ENCODING 'UTF8';
SELECT some_array[2] FROM dummy_greek
ORDER BY letter
OFFSET 1 LIMIT 1;
 some_array 
------------
        -90
(1 row)

DROP EXTERNAL TABLE dummy_greek;
DROP EXTERNAL TABLE export_dummy_greek;
\connect - :OLD_GP_USER
revoke all on protocol gphdfs from _hadoop_perm_test_role;
DROP ROLE IF EXISTS _hadoop_perm_test_role;
--start_ignore
\!/usr/hdp/2.3.2.0-2950/hadoop/bin/hadoop fs -rm -r /mapreduce/*
rm: `/mapreduce/*': No such file or directory
\!/usr/hdp/2.3.2.0-2950/hadoop/bin/hadoop fs -rm -r /mapred/*
rm: `/mapred/*': No such file or directory
--end_ignore
