<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic_jnp_yng_4v">
        <title>About gphdfs JVM Memory</title>
        <body>
                <p>When Greenplum Database accesses external table data from an HDFS location with
                                <codeph>gphdfs</codeph> protocol, each Greenplum Database segment on
                        a host system starts a JVM for use by the protocol. The default JVM heapsize
                        is 1GB and should be enough for most workloads</p>
                <p>If the <codeph>gphdfs</codeph> JVM runs out of memory, the issue might be related
                        to the density of tuples inside the Hadoop HDFS block assigned to the
                                <codeph>gphdfs</codeph> segment worker. A higher density of tuples
                        per block requires more <codeph>gphdfs</codeph> memory. HDFS block size is
                        usually 128MB, 256MB, or 512MB depending on the Hadoop cluster
                        configuration.</p>
                <p>You can increase the JVM heapsize by changing <codeph>GP_JAVA_OPT</codeph>
                        variable in the file <codeph>$GPHOME/lib/hadoop/hadoop_env.sh</codeph>. In
                        this example line, the option <codeph>-Xmx1000m</codeph> specifies that the
                        JVM consumes 1GB of virtual memory.</p>
                <p>
                        <codeblock>export GP_JAVA_OPT='-Xmx1000m -XX:+DisplayVMOutputToStderr'</codeblock>
                </p>
                <p>The <codeph>$GPHOME/lib/hadoop/hadoop_env.sh</codeph> must be updated for every
                        segment instance in the Greenplum Database system.</p>
                <note type="important">Before increasing the <codeph>gphdfs</codeph> JVM memory,
                        ensure that you have sufficient memory on the host. For example, 8 primary
                        segments consume 8GB of virtual memory for the <codeph>gphdfs</codeph> JVM
                        when using default. Increasing the Java -<codeph>Xmx</codeph> value to 2GB
                        results in 16GB allocated in that environment of 8 segments per host.
                </note>
        </body>
</topic>
