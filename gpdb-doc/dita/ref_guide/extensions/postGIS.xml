<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1" xml:lang="en">
  <title id="ij138244">Greenplum PostGIS Extension</title>
  <body>
    <p>This chapter contains the following information:</p>
    <ul>
      <li id="ij166737">
        <xref href="#topic2" type="topic" format="dita"/>
      </li>
      <li id="ij168801">
        <xref href="#topic3" type="topic" format="dita"/>
      </li>
      <li id="ij168816">
        <xref href="#topic5" type="topic" format="dita"/>
      </li>
      <li>
        <xref href="#topic_urn_wcj_bq" format="dita"/>
      </li>
      <li id="ij172091">
        <xref href="#topic6" type="topic" format="dita"/>
      </li>
      <li id="ij168827">
        <xref href="#topic7" type="topic" format="dita"/>
      </li>
      <li>
        <xref href="#postgis_support" format="dita"/>
      </li>
    </ul>
  </body>
  <topic id="topic2" xml:lang="en">
    <title id="ij166739">About PostGIS</title>
    <body>
      <p>PostGIS is a spatial database extension for PostgreSQL that allows GIS (Geographic
        Information Systems) objects to be stored in the database. The Greenplum Database PostGIS
        extension includes support for GiST-based R-Tree spatial indexes and functions for analysis
        and processing of GIS objects. </p>
      <p>Go to<xref href="http://postgis.refractions.net/" scope="external" format="html">
          http://postgis.refractions.net/ </xref>for more information about PostGIS.</p>
      <p>For information about Greenplum Database PostGIS extension support, see <xref
          href="#postgis_support" format="dita"/>.</p>
    </body>
    <topic id="topic3" xml:lang="en">
      <title id="ij168742">Greenplum PostGIS Extension</title>
      <body>
        <p>The Greenplum Database PostGIS extension is available from <xref
            href="https://network.pivotal.io" scope="external" format="html"><ph>Pivotal
              Network</ph></xref>. You can install it using the Greenplum Package Manager
            (<codeph>gppkg</codeph>). For details, see <codeph>gppkg</codeph> in the <cite>Greenplum
            Database Utility Guide</cite>.</p>
        <ul id="ul_h32_p42_4p">
          <li id="ij169271">Greenplum Database 4.3 supports PostGIS extension package version 2.0
            (PostGIS 2.0.3).</li>
          <li id="ij173964">Greenplum Database 4.2.6 and later supports PostGIS extension package
            version 1.0 and 2.0 (PostGIS 1.4 and 2.0.3) <p>Only one version of the PostGIS extension
              package, either 1.0 or 2.0, can be installed on an installation of Greenplum Database.
            </p></li>
          <li id="ij169291">Greenplum Database prior to 4.2.6 supports PostGIS extension package
            version 1.0 (PostGIS 1.4).<table id="ij170583">
              <title>PostGIS Component Version</title>
              <tgroup cols="4">
                <colspec colnum="1" colname="col1" colwidth="110pt"/>
                <colspec colnum="2" colname="col2" colwidth="72pt"/>
                <colspec colnum="3" colname="col3" colwidth="72pt"/>
                <colspec colnum="4" colname="col4" colwidth="72pt"/>
                <thead>
                  <row>
                    <entry colname="col1">PostGIS Extension Package</entry>
                    <entry colname="col2">PostGIS</entry>
                    <entry colname="col3">Geos</entry>
                    <entry colname="col4">Proj</entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry colname="col1">2.0</entry>
                    <entry colname="col2">2.0.3</entry>
                    <entry colname="col3">3.3.8</entry>
                    <entry colname="col4">4.8.0</entry>
                  </row>
                  <row>
                    <entry colname="col1">1.0</entry>
                    <entry colname="col2">1.4.2</entry>
                    <entry colname="col3">3.2.2</entry>
                    <entry colname="col4">4.7.0</entry>
                  </row>
                </tbody>
              </tgroup>
            </table></li>
        </ul>
        <p>For the information about supported extension packages and software versions see the
            <cite>Greenplum Database Release Notes</cite>.</p>
        <note type="important">Extension packages for Greenplum Database 4.3.4.x and earlier are not
          compatible with Greenplum Database 4.3.5.0 and later due to the introduction of Pivotal
          Query Optimizer. Also, extension packages for Greenplum Database 4.3.5.0 and later are not
          compatible with Greenplum Database 4.3.4.x and earlier. <p>To use extension packages with
            Greenplum Database 4.3.5.0 and later, you must install and use Greenplum Database
            extension packages (gppkg files and contrib modules) that are built for Greenplum
            Database 4.3.5.0 and later. For custom modules that were used with Greenplum Database
            4.3.4.x and earlier, you must rebuild the modules for use with Greenplum Database
            4.3.5.0 and later.</p></note>
        <p>Major enhancements and changes in 2.0.3 from 1.4.2 include:</p>
        <ul id="ul_mk2_p42_4p">
          <li id="ij170226">Support for geographic coordinates (latitude and longitude) with a
            GEOGRAPHY type and related functions.</li>
          <li id="ij170227">Input format support for these formats: GML, KML, and JSON</li>
          <li id="ij173515">Unknown SRID changed from -1 to 0</li>
          <li id="ij173483">3D relationship and measurement support functions</li>
          <li id="ij170230">Making spatial indexes 3D aware</li>
          <li id="ij173412">KNN GiST centroid distance operator</li>
          <li id="ij170231">Many deprecated functions are removed</li>
          <li id="ij172262">Performance improvements</li>
        </ul>
        <p>See the PostGIS documentation for a list of changes: <xref
            href="http://postgis.net/docs/manual-2.0/release_notes.html" scope="external"
            format="html"><ph>http://postgis.net/docs/manual-2.0/release_notes.html</ph></xref></p>
        <note type="warning">PostGIS 2.0 removed many functions that were deprecated but available
          in PostGIS 1.4. Functions and applications written with functions that were deprecated in
          PostGIS 1.4 might need to be rewritten. See the PostGIS documentation for a list of new,
          enhanced, or changed functions: <xref
            href="http://postgis.net/docs/manual-2.0/PostGIS_Special_Functions_Index.html#NewFunctions"
            scope="external" format="html"
              ><ph>http://postgis.net/docs/manual-2.0/PostGIS_Special_Functions_Index.html
              #NewFunctions</ph></xref></note>
      </body>
      <topic id="topic4" xml:lang="en">
        <title>Greenplum Database PostGIS Limitations</title>
        <body>
          <p>The Greenplum Database PostGIS extension does not support the following features:</p>
          <ul id="ul_mm2_p42_4p">
            <li id="ij169095">Topology</li>
            <li id="ij169096">Raster</li>
            <li id="ij166819">A small number of user defined functions and aggregates</li>
            <li id="ij166822">PostGIS long transaction support</li>
            <li id="ij169588">Geometry and geography type modifier</li>
          </ul>
          <p>For information about Greenplum Database PostGIS support, see <xref
              href="#postgis_support" format="dita"/>.</p>
        </body>
      </topic>
    </topic>
  </topic>
  <topic id="topic5" xml:lang="en">
    <title id="ij169610">Enabling PostGIS Support</title>
    <body>
      <p>After installing the PostGIS extension package, you enable PostGIS support for each
        database that requires its use. To enable the support, run enabler SQL scripts that are
        supplied with the PostGIS package, in your target database.</p>
      <p>For PosgGIS 1.4 the enabler script is <codeph>postgis.sql</codeph></p>
      <codeblock>psql -f postgis.sql -d <i>your_database</i></codeblock>
      <p>
        <ph>Your database is now spatially enabled.</ph>
      </p>
      <p>For PostGIS 2.0.3, you run two SQL scripts <codeph>postgis.sql</codeph> and
          <codeph>spatial_ref_sys.sql</codeph> in your target database.</p>
      <p>For example:</p>
      <codeblock>psql -d mydatabase -f 
  $GPHOME/share/postgresql/contrib/postgis-2.0/postgis.sql
psql -d mydatabase -f 
  $GPHOME/share/postgresql/contrib/postgis-2.0/spatial_ref_sys.sql</codeblock>
      <note type="note"><codeph>spatial_ref_sys.sql</codeph> populates the
          <codeph>spatial_ref_sys</codeph> table with EPSG coordinate system definition identifiers.
        If you have overridden standard entries and want to use those overrides, do not load the
          <codeph>spatial_ref_sys.sql</codeph> file when creating the new database. </note>
      <p>Your database is now spatially enabled.</p>
    </body>
  </topic>
  <topic id="topic_urn_wcj_bq">
    <title>Upgrading the Greenplum PostGIS Extension</title>
    <body>
      <p>If you upgrade from PostGIS extension package version 2.0 (pv2.0) or later, you must run
          <codeph>postgis_upgrade_20_minor.sql</codeph> in your target database. This example
        upgrades the PostGIS extension package and runs the script:</p>
      <codeblock>gppkg -u postgis-ossv2.0.3_pv2.0.1_gpdb4.3-rhel5-x86_64.gppkg

psql -d mydatabase -f $GPHOME/share/postgresql/contrib/postgis-2.0/postgis_upgrade_20_minor.sql</codeblock>
    </body>
  </topic>
  <topic id="topic6" xml:lang="en">
    <title id="ij169830">Migrating from PostGIS 1.4 to 2.0</title>
    <body>
      <p>To migrate a PostGIS-enabled database from 1.4 to 2.0 you must perform a PostGIS HARD
        UPGRADE. A HARD UPGRADE consists of dumping a database that is enabled with PostGIS 1.4 and
        loading the database the data to a new database that is enabled with PostGIS 2.0.</p>
      <p>For information about a PostGIS HARD UPGRADE procedure, see the PostGIS documentation:
          <xref href="http://postgis.net/docs/manual-2.0/postgis_installation.html#hard_upgrade"
          scope="external" format="html"
            ><ph>http://postgis.net/docs/manual-2.0/postgis_installation.html#hard_upgrade</ph></xref></p>
    </body>
  </topic>
  <topic id="topic7" xml:lang="en">
    <title id="ij170351">Usage</title>
    <body>
      <p>
        <ph>The following example SQL statements create non-OpenGIS tables and geometries.</ph>
      </p>
      <codeblock>CREATE TABLE geom_test ( gid int4, geom geometry, 
  name varchar(25) );
INSERT INTO geom_test ( gid, geom, name )
  VALUES ( 1, 'POLYGON((0 0 0,0 5 0,5 5 0,5 0 0,0 0 0))', '3D Square');
INSERT INTO geom_test ( gid, geom, name ) 
  VALUES ( 2, 'LINESTRING(1 1 1,5 5 5,7 7 5)', '3D Line' );
INSERT INTO geom_test ( gid, geom, name )
  VALUES ( 3, 'MULTIPOINT(3 4,8 9)', '2D Aggregate Point' );
SELECT * from geom_test WHERE geom &amp;&amp;
  Box3D(ST_GeomFromEWKT('LINESTRING(2 2 0, 3 3 0)'));</codeblock>
      <p>The following example SQL statements create a table, adds a geometry column to the table
        with a SRID integer value that references an entry in the SPATIAL_REF_SYS table. The
          <codeph>INSERT</codeph> statements add to geopoints to the table.</p>
      <codeblock>CREATE TABLE geotest (id INT4, name VARCHAR(32) );
SELECT AddGeometryColumn('geotest','geopoint', 4326,'POINT',2);
INSERT INTO geotest (id, name, geopoint)
  VALUES (1, 'Olympia', ST_GeometryFromText('POINT(-122.90 46.97)', 4326));
INSERT INTO geotest (id, name, geopoint)|
  VALUES (2, 'Renton', ST_GeometryFromText('POINT(-122.22 47.50)', 4326));
SELECT name,ST_AsText(geopoint) FROM geotest;</codeblock>
    </body>
    <topic id="topic8" xml:lang="en">
      <title>Spatial Indexes</title>
      <body>
        <p>PostgreSQL provides support for GiST spatial indexing. The GiST scheme offers indexing
          even on large objects. It uses a system of lossy indexing in which smaller objects act as
          proxies for larger ones in the index. In the PostGIS indexing system, all objects use
          their bounding boxes as proxies in the index.</p>
      </body>
      <topic id="topic9" xml:lang="en">
        <title>Building a Spatial Index</title>
        <body>
          <p>You can build a GiST index as follows:</p>
          <codeblock>CREATE INDEX <i>indexname</i>
ON <i>tablename</i>
USING GIST ( <i>geometryfield</i> );</codeblock>
        </body>
      </topic>
    </topic>
  </topic>
  <topic id="postgis_support">
    <title>PostGIS Extension Support and Limitations</title>
    <body>
      <p>This section describes Greenplum PostGIS extension feature support and limitations.</p>
      <ul id="ul_gvb_b4b_3p">
        <li>
          <xref href="#topic_g2d_hkb_3p" format="dita"/>
        </li>
        <li>
          <xref href="#topic_y5z_nkb_3p" format="dita"/>
        </li>
        <li>
          <xref href="#topic_wy2_rkb_3p" format="dita"/>
        </li>
      </ul>
      <p>The Greenplum Database PostGIS extension does not support the following features:</p>
      <ul id="ul_xpr_21h_kp">
        <li>Topology</li>
        <li>Raster</li>
      </ul>
    </body>
    <topic id="topic_g2d_hkb_3p">
      <title>Supported PostGIS Data Types</title>
      <body>
        <p>Greenplum Database PostGIS extension supports these PostGIS data types:</p>
        <ul id="ul_bdm_qnp_fp">
          <li dir="ltr">box2d</li>
          <li dir="ltr">box3d</li>
          <li dir="ltr">geometry</li>
          <li dir="ltr">geography</li>
          <li dir="ltr">spheroid</li>
        </ul>
      </body>
    </topic>
    <topic id="topic_y5z_nkb_3p">
      <title>Supported PostGIS Index</title>
      <body>
        <p>Greenplum Database PostGIS extension supports the GiST (Generalized Search Tree)
          index.</p>
      </body>
    </topic>
    <topic id="topic_wy2_rkb_3p">
      <title>PostGIS Extension Limitations</title>
      <body>
        <p>This section lists the Greenplum Database PostGIS extension limitations for user defined
          functions (UDFs), data types and aggregates. </p>
        <ul id="ul_vzc_bpb_3p">
          <li>Data types and functions related to PostGIS topology or raster functionality, such as
              <apiname>TopoGeometry</apiname> and <apiname>ST_AsRaster</apiname> are not supported
            by Greenplum Database.</li>
          <li><apiname>ST_Estimated_Extent</apiname> function is not supported. The function
            requires table column statistics for user defined data types that are not available with
            Greenplum Database.</li>
          <li><apiname>ST_GeomFronGeoJSON</apiname> function is not supported. The function requires
            JSON support. JSON is not supported in Greenplum Database.</li>
          <li>These PostGIS aggregates are not supported by Greenplum Database:<ul
              id="ul_ylg_hpb_3p">
              <li><apiname>ST_MemCollect</apiname></li>
              <li><apiname>ST_MakeLine</apiname></li>
            </ul><p>On a Greenplum Database with multiple segments, the aggregate might return
              different answers if it is called several times repeatedly.</p></li>
          <li>
            <p>Greenplum Database does not support PostGIS long transactions.</p>
            <p>PostGIS relies on triggers and the PostGIS table <i>public.authorization_table</i>
              for long transaction support. When PostGIS attempts to acquire locks for long
              transactions, Greenplum Database reports errors citing that the function cannot access
              the relation, <i>authorization_table</i>.</p>
          </li>
          <li>Greenplum Database does not support type modifiers for user defined types. <p>The work
              around is to use the <codeph>AddGeometryColumn</codeph> function for PostGIS geometry.
              For example, a table with PostGIS geometry cannot be created with the following SQL
              command:<codeblock>CREATE TABLE geometries(id INTEGER, geom geometry(LINESTRING));</codeblock>Use
              the <codeph>AddGeometryColumn</codeph> function to add PostGIS geometry to a table.
              For example, these following SQL statements create a table and add PostGIS geometry to
              the
              table:<codeblock>CREATE TABLE geometries(id INTEGER);
SELECT AddGeometryColumn('public', 'geometries', 'geom', 0, 'LINESTRING', 2);</codeblock></p></li>
        </ul>
      </body>
    </topic>
  </topic>
</topic>
