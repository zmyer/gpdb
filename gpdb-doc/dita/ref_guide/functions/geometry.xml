<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="functions-geometry">
  <title>Geometric Functions and Operators</title>
  <body>
    <p> The geometric types <codeph>point</codeph>, <codeph>box</codeph>, <codeph>lseg</codeph>,
        <codeph>line</codeph>, <codeph>path</codeph>, <codeph>polygon</codeph>, and
        <codeph>circle</codeph> have a large set of native support functions and operators, shown in
        <xref href="#functions-geometry/functions-geometry-op-table"/>, <xref
        href="#functions-geometry/functions-geometry-func-table" format="dita"/>, and <xref
        href="#functions-geometry/functions-geometry-conv-table" format="dita"/>. </p>
    <note type="caution">
      <p> Note that the "same as" operator, <codeph>~=</codeph>, represents the usual notion of
        equality for the <codeph>point</codeph>, <codeph>box</codeph>, <codeph>polygon</codeph>, and
          <codeph>circle</codeph> types. Some of these types also have an <codeph>=</codeph>
        operator, but <codeph>=</codeph> compares for equal <i>areas</i> only. The other scalar
        comparison operators (<codeph>&lt;=</codeph> and so on) likewise compare areas for these
        types. </p>
    </note>
    <table id="functions-geometry-op-table">
      <title>Geometric Operators</title>
      <tgroup cols="3">
        <colspec colnum="1" colname="c1" colwidth="1*"/>
        <colspec colnum="2" colname="c2" colwidth="1.12*"/>
        <colspec colnum="3" colname="c3" colwidth="1.88*"/>
        <thead>
          <row>
            <entry>Operator</entry>
            <entry>Description</entry>
            <entry>Example</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <codeph>+</codeph>
            </entry>
            <entry>Translation</entry>
            <entry>
              <codeph>box '((0,0),(1,1))' + point '(2.0,0)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>-</codeph>
            </entry>
            <entry>Translation</entry>
            <entry>
              <codeph>box '((0,0),(1,1))' - point '(2.0,0)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>*</codeph>
            </entry>
            <entry>Scaling/rotation</entry>
            <entry>
              <codeph>box '((0,0),(1,1))' * point '(2.0,0)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>/</codeph>
            </entry>
            <entry>Scaling/rotation</entry>
            <entry>
              <codeph>box '((0,0),(2,2))' / point '(2.0,0)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>#</codeph>
            </entry>
            <entry>Point or box of intersection</entry>
            <entry>
              <codeph>'((1,-1),(-1,1))' # '((1,1),(-1,-1))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>#</codeph>
            </entry>
            <entry>Number of points in path or polygon</entry>
            <entry>
              <codeph># '((1,0),(0,1),(-1,0))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>@-@</codeph>
            </entry>
            <entry>Length or circumference</entry>
            <entry>
              <codeph>@-@ path '((0,0),(1,0))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>@@</codeph>
            </entry>
            <entry>Center</entry>
            <entry>
              <codeph>@@ circle '((0,0),10)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>##</codeph>
            </entry>
            <entry>Closest point to first operand on second operand</entry>
            <entry>
              <codeph>point '(0,0)' ## lseg '((2,0),(0,2))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&lt;-&gt;</codeph>
            </entry>
            <entry>Distance between</entry>
            <entry>
              <codeph>circle '((0,0),1)' &lt;-&gt; circle '((5,0),1)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&amp;&amp;</codeph>
            </entry>
            <entry>Overlaps?</entry>
            <entry>
              <codeph>box '((0,0),(1,1))' &amp;&amp; box '((0,0),(2,2))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&lt;&lt;</codeph>
            </entry>
            <entry>Is strictly left of?</entry>
            <entry>
              <codeph>circle '((0,0),1)' &lt;&lt; circle '((5,0),1)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&gt;&gt;</codeph>
            </entry>
            <entry>Is strictly right of?</entry>
            <entry>
              <codeph>circle '((5,0),1)' &gt;&gt; circle '((0,0),1)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&amp;&lt;</codeph>
            </entry>
            <entry>Does not extend to the right of?</entry>
            <entry>
              <codeph>box '((0,0),(1,1))' &amp;&lt; box '((0,0),(2,2))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&amp;&gt;</codeph>
            </entry>
            <entry>Does not extend to the left of?</entry>
            <entry>
              <codeph>box '((0,0),(3,3))' &amp;&gt; box '((0,0),(2,2))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&lt;&lt;|</codeph>
            </entry>
            <entry>Is strictly below?</entry>
            <entry>
              <codeph>box '((0,0),(3,3))' &lt;&lt;| box '((3,4),(5,5))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>|&gt;&gt;</codeph>
            </entry>
            <entry>Is strictly above?</entry>
            <entry>
              <codeph>box '((3,4),(5,5))' |&gt;&gt; box '((0,0),(3,3))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&amp;&lt;|</codeph>
            </entry>
            <entry>Does not extend above?</entry>
            <entry>
              <codeph>box '((0,0),(1,1))' &amp;&lt;| box '((0,0),(2,2))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>|&amp;&gt;</codeph>
            </entry>
            <entry>Does not extend below?</entry>
            <entry>
              <codeph>box '((0,0),(3,3))' |&amp;&gt; box '((0,0),(2,2))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&lt;^</codeph>
            </entry>
            <entry>Is below (allows touching)?</entry>
            <entry>
              <codeph>circle '((0,0),1)' &lt;^ circle '((0,5),1)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&gt;^</codeph>
            </entry>
            <entry>Is above (allows touching)?</entry>
            <entry>
              <codeph>circle '((0,5),1)' &gt;^ circle '((0,0),1)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>?#</codeph>
            </entry>
            <entry>Intersects?</entry>
            <entry>
              <codeph>lseg '((-1,0),(1,0))' ?# box '((-2,-2),(2,2))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>?-</codeph>
            </entry>
            <entry>Is horizontal?</entry>
            <entry>
              <codeph>?- lseg '((-1,0),(1,0))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>?-</codeph>
            </entry>
            <entry>Are horizontally aligned?</entry>
            <entry>
              <codeph>point '(1,0)' ?- point '(0,0)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>?|</codeph>
            </entry>
            <entry>Is vertical?</entry>
            <entry>
              <codeph>?| lseg '((-1,0),(1,0))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>?|</codeph>
            </entry>
            <entry>Are vertically aligned?</entry>
            <entry>
              <codeph>point '(0,1)' ?| point '(0,0)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>?-|</codeph>
            </entry>
            <entry>Is perpendicular?</entry>
            <entry>
              <codeph>lseg '((0,0),(0,1))' ?-| lseg '((0,0),(1,0))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>?||</codeph>
            </entry>
            <entry>Are parallel?</entry>
            <entry>
              <codeph>lseg '((-1,0),(1,0))' ?|| lseg '((-1,2),(1,2))'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>@&gt;</codeph>
            </entry>
            <entry>Contains?</entry>
            <entry>
              <codeph>circle '((0,0),2)' @&gt; point '(1,1)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>&lt;@</codeph>
            </entry>
            <entry>Contained in or on?</entry>
            <entry>
              <codeph>point '(1,1)' &lt;@ circle '((0,0),2)'</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>~=</codeph>
            </entry>
            <entry>Same as?</entry>
            <entry>
              <codeph>polygon '((0,0),(1,1))' ~= polygon '((1,1),(0,0))'</codeph>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <note>
      <p> Before PostgreSQL 8.2, the containment operators <codeph>@&gt;</codeph> and
          <codeph>&lt;@</codeph> were respectively called <codeph>~</codeph> and <codeph>@</codeph>.
        These names are still available, but are deprecated and will eventually be retired. </p>
    </note>
    <table id="functions-geometry-func-table">
      <title>Geometric Functions</title>
      <tgroup cols="4">
        <colspec colnum="1" colname="c1" colwidth="1.85*"/>
        <colspec colnum="2" colname="c2" colwidth="1.27*"/>
        <colspec colnum="3" colname="c3" colwidth="1*"/>
        <colspec colnum="4" colname="c4" colwidth="1.92*"/>
        <thead>
          <row>
            <entry>Function</entry>
            <entry>Return Type</entry>
            <entry>Description</entry>
            <entry>Example</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <codeph><codeph>area</codeph>(<i>object</i>)</codeph>
            </entry>
            <entry>
              <codeph>double precision</codeph>
            </entry>
            <entry>area</entry>
            <entry>
              <codeph>area(box '((0,0),(1,1))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>center</codeph>(<i>object</i>)</codeph>
            </entry>
            <entry>
              <codeph>point</codeph>
            </entry>
            <entry>center</entry>
            <entry>
              <codeph>center(box '((0,0),(1,2))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>diameter</codeph>(<codeph>circle</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>double precision</codeph>
            </entry>
            <entry>diameter of circle</entry>
            <entry>
              <codeph>diameter(circle '((0,0),2.0)')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>height</codeph>(<codeph>box</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>double precision</codeph>
            </entry>
            <entry>vertical size of box</entry>
            <entry>
              <codeph>height(box '((0,0),(1,1))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>isclosed</codeph>(<codeph>path</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>boolean</codeph>
            </entry>
            <entry>a closed path?</entry>
            <entry>
              <codeph>isclosed(path '((0,0),(1,1),(2,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>isopen</codeph>(<codeph>path</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>boolean</codeph>
            </entry>
            <entry>an open path?</entry>
            <entry>
              <codeph>isopen(path '[(0,0),(1,1),(2,0)]')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>length</codeph>(<i>object</i>)</codeph>
            </entry>
            <entry>
              <codeph>double precision</codeph>
            </entry>
            <entry>length</entry>
            <entry>
              <codeph>length(path '((-1,0),(1,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>npoints</codeph>(<codeph>path</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>int</codeph>
            </entry>
            <entry>number of points</entry>
            <entry>
              <codeph>npoints(path '[(0,0),(1,1),(2,0)]')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>npoints</codeph>(<codeph>polygon</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>int</codeph>
            </entry>
            <entry>number of points</entry>
            <entry>
              <codeph>npoints(polygon '((1,1),(0,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>pclose</codeph>(<codeph>path</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>path</codeph>
            </entry>
            <entry>convert path to closed</entry>
            <entry>
              <codeph>pclose(path '[(0,0),(1,1),(2,0)]')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>popen</codeph>(<codeph>path</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>path</codeph>
            </entry>
            <entry>convert path to open</entry>
            <entry>
              <codeph>popen(path '((0,0),(1,1),(2,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>radius</codeph>(<codeph>circle</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>double precision</codeph>
            </entry>
            <entry>radius of circle</entry>
            <entry>
              <codeph>radius(circle '((0,0),2.0)')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>width</codeph>(<codeph>box</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>double precision</codeph>
            </entry>
            <entry>horizontal size of box</entry>
            <entry>
              <codeph>width(box '((0,0),(1,1))')</codeph>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <table id="functions-geometry-conv-table">
      <title>Geometric Type Conversion Functions</title>
      <tgroup cols="4">
        <colspec colnum="1" colname="c1" colwidth="2.6*"/>
        <colspec colnum="2" colname="c2" colwidth="1*"/>
        <colspec colnum="3" colname="c3" colwidth="1.18*"/>
        <colspec colnum="4" colname="c4" colwidth="1.87*"/>
        <thead>
          <row>
            <entry>Function</entry>
            <entry>Return Type</entry>
            <entry>Description</entry>
            <entry>Example</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <codeph><codeph>box</codeph>(<codeph>circle</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>box</codeph>
            </entry>
            <entry>circle to box</entry>
            <entry>
              <codeph>box(circle '((0,0),2.0)')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>box</codeph>(<codeph>point</codeph>, <codeph>point</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>box</codeph>
            </entry>
            <entry>points to box</entry>
            <entry>
              <codeph>box(point '(0,0)', point '(1,1)')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>box</codeph>(<codeph>polygon</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>box</codeph>
            </entry>
            <entry>polygon to box</entry>
            <entry>
              <codeph>box(polygon '((0,0),(1,1),(2,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>circle</codeph>(<codeph>box</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>circle</codeph>
            </entry>
            <entry>box to circle</entry>
            <entry>
              <codeph>circle(box '((0,0),(1,1))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>circle</codeph>(<codeph>point</codeph>, <codeph>double
                  precision</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>circle</codeph>
            </entry>
            <entry>center and radius to circle</entry>
            <entry>
              <codeph>circle(point '(0,0)', 2.0)</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>circle</codeph>(<codeph>polygon</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>circle</codeph>
            </entry>
            <entry>polygon to circle</entry>
            <entry>
              <codeph>circle(polygon '((0,0),(1,1),(2,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>lseg</codeph>(<codeph>box</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>lseg</codeph>
            </entry>
            <entry>box diagonal to line segment</entry>
            <entry>
              <codeph>lseg(box '((-1,0),(1,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>lseg</codeph>(<codeph>point</codeph>, <codeph>point</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>lseg</codeph>
            </entry>
            <entry>points to line segment</entry>
            <entry>
              <codeph>lseg(point '(-1,0)', point '(1,0)')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>path</codeph>(<codeph>polygon</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>point</codeph>
            </entry>
            <entry>polygon to path</entry>
            <entry>
              <codeph>path(polygon '((0,0),(1,1),(2,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>point</codeph>(<codeph>double precision</codeph>, <codeph>double
                  precision</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>point</codeph>
            </entry>
            <entry>construct point</entry>
            <entry>
              <codeph>point(23.4, -44.5)</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>point</codeph>(<codeph>box</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>point</codeph>
            </entry>
            <entry>center of box</entry>
            <entry>
              <codeph>point(box '((-1,0),(1,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>point</codeph>(<codeph>circle</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>point</codeph>
            </entry>
            <entry>center of circle</entry>
            <entry>
              <codeph>point(circle '((0,0),2.0)')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>point</codeph>(<codeph>lseg</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>point</codeph>
            </entry>
            <entry>center of line segment</entry>
            <entry>
              <codeph>point(lseg '((-1,0),(1,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>point</codeph>(<codeph>polygon</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>point</codeph>
            </entry>
            <entry>center of polygon</entry>
            <entry>
              <codeph>point(polygon '((0,0),(1,1),(2,0))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>polygon</codeph>(<codeph>box</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>polygon</codeph>
            </entry>
            <entry>box to 4-point polygon</entry>
            <entry>
              <codeph>polygon(box '((0,0),(1,1))')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>polygon</codeph>(<codeph>circle</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>polygon</codeph>
            </entry>
            <entry>circle to 12-point polygon</entry>
            <entry>
              <codeph>polygon(circle '((0,0),2.0)')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>polygon</codeph>(<i>npts</i>, <codeph>circle</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>polygon</codeph>
            </entry>
            <entry>circle to <i>npts</i>-point polygon</entry>
            <entry>
              <codeph>polygon(12, circle '((0,0),2.0)')</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>polygon</codeph>(<codeph>path</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>polygon</codeph>
            </entry>
            <entry>path to polygon</entry>
            <entry>
              <codeph>polygon(path '((0,0),(1,1),(2,0))')</codeph>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p> It is possible to access the two component numbers of a <codeph>point</codeph> as though it
      were an array with indices 0 and 1. For example, if <codeph>t.p</codeph> is a
        <codeph>point</codeph> column then <codeph>SELECT p[0] FROM t</codeph> retrieves the X
      coordinate and <codeph>UPDATE t SET p[1] = ...</codeph> changes the Y coordinate. In the same
      way, a value of type <codeph>box</codeph> or <codeph>lseg</codeph> may be treated as an array
      of two <codeph>point</codeph> values. </p>
    <p> The <codeph>area</codeph> function works for the types <codeph>box</codeph>,
        <codeph>circle</codeph>, and <codeph>path</codeph>. The <codeph>area</codeph> function only
      works on the <codeph>path</codeph> data type if the points in the <codeph>path</codeph> are
      non-intersecting. For example, the <codeph>path</codeph>
      <codeph>'((0,0),(0,1),(2,1),(2,2),(1,2),(1,0),(0,0))'::PATH</codeph> won't work, however, the
      following visually identical <codeph>path</codeph>
      <codeph>'((0,0),(0,1),(1,1),(1,2),(2,2),(2,1),(1,1),(1,0),(0,0))'::PATH</codeph> will work. If
      the concept of an intersecting versus non-intersecting <codeph>path</codeph> is confusing,
      draw both of the above <codeph>path</codeph>s side by side on a piece of graph paper. </p>
  </body>
</topic>
