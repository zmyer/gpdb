<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="functions-binarystring">
  <title>Binary String Functions and Operators</title>
  <shortdesc> This section describes functions and operators for examining and manipulating values
    of type <codeph>bytea</codeph>. </shortdesc>
  <body>
    <p> SQL defines some string functions with a special syntax where certain key words rather than
      commas are used to separate the arguments. Details are in <xref
        href="#functions-binarystring/functions-binarystring-sql"/>. Some functions are also
      implemented using the regular syntax for function invocation. (See <xref
        href="#functions-binarystring/functions-binarystring-other"/>.) </p>
    <table id="functions-binarystring-sql">
      <title>SQL Binary String Functions and Operators</title>
      <tgroup cols="3">
        <thead>
          <row>
            <entry>Function</entry>
            <entry>Return Type</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <codeph>
                <i>string</i>
                <codeph>||</codeph>
                <i>string</i>
              </codeph>
            </entry>
            <entry>
              <codeph>bytea</codeph>
            </entry>
            <entry> String concatenation </entry>
          </row>
          <row>
            <entry><codeph>get_bit</codeph>(<i>string</i>, <i>offset</i>)</entry>
            <entry>
              <codeph>int</codeph>
            </entry>
            <entry> Extract bit from string </entry>
          </row>
          <row>
            <entry><codeph>get_byte</codeph>(<i>string</i>, <i>offset</i>)</entry>
            <entry>
              <codeph>int</codeph>
            </entry>
            <entry> Extract byte from string </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>octet_length</codeph>(<i>string</i>)</codeph>
            </entry>
            <entry>
              <codeph>int</codeph>
            </entry>
            <entry>Number of bytes in binary string</entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>position</codeph>(<i>substring</i> in <i>string</i>)</codeph>
            </entry>
            <entry>
              <codeph>int</codeph>
            </entry>
            <entry>Location of specified substring</entry>
          </row>
          <row>
            <entry><codeph>set_bit</codeph>(<i>string</i>, <i>offset</i>, <i>newvalue</i>)</entry>
            <entry>
              <codeph>bytea</codeph>
            </entry>
            <entry> Set bit in string </entry>
          </row>
          <row>
            <entry><codeph>set_byte</codeph>(<i>string</i>, <i>offset</i>, <i>newvalue</i>)</entry>
            <entry>
              <codeph>bytea</codeph>
            </entry>
            <entry> Set byte in string </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>substring</codeph>(<i>string</i> [from <codeph>int</codeph>] [for
                  <codeph>int</codeph>])</codeph>
            </entry>
            <entry>
              <codeph>bytea</codeph>
            </entry>
            <entry> Extract substring </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>trim</codeph>([both] <i>bytes</i> from <i>string</i>)</codeph>
            </entry>
            <entry>
              <codeph>bytea</codeph>
            </entry>
            <entry> Remove the longest string containing only the bytes in <i>bytes</i> from the
              start and end of <i>string</i>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p><xref href="#functions-binarystring/table_okh_fmg_4p" format="dita"/> shows usage examples
      for the functions in <xref href="#functions-binarystring/functions-binarystring-sql"
        format="dita"/>.</p>
    <table id="table_okh_fmg_4p">
      <title>SQL Binary String Functions and Operators Examples</title>
      <tgroup cols="2">
        <colspec colnum="1" colname="c1" colwidth="642pt"/>
        <colspec colnum="2" colname="c2" colwidth="346pt"/>
        <thead>
          <row>
            <entry>Example</entry>
            <entry>Result</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <codeph>E'\\\\Post'::bytea || E'\\047gres\\000'::bytea</codeph>
            </entry>
            <entry>
              <codeph>\\Post'gres\000</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>get_bit(E'Th\\000omas'::bytea, 45)</codeph>
            </entry>
            <entry>
              <codeph>1</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>get_byte(E'Th\\000omas'::bytea, 4)</codeph>
            </entry>
            <entry>
              <codeph>109</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>octet_length( E'jo\\000se'::bytea)</codeph>
            </entry>
            <entry>
              <codeph>5</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>position(E'\\000om'::bytea in E'Th\\000omas'::bytea)</codeph>
            </entry>
            <entry>
              <codeph>3</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>set_bit(E'Th\\000omas'::bytea, 45, 0)</codeph>
            </entry>
            <entry>
              <codeph>Th\000omAs</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>set_byte(E'Th\\000omas'::bytea, 4, 64)</codeph>
            </entry>
            <entry>
              <codeph>Th\000o@as</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>substring(E'Th\\000omas'::bytea from 2 for 3)</codeph>
            </entry>
            <entry>
              <codeph>h\000o</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>trim(E'\\000'::bytea from E'\\000Tom\\000'::bytea)</codeph>
            </entry>
            <entry>
              <codeph>Tom</codeph>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p> Additional binary string manipulation functions are available and are listed in <xref
        href="#functions-binarystring/functions-binarystring-other"/>. Some of them are used
      internally to implement the SQL-standard string functions listed in <xref
        href="#functions-binarystring/functions-binarystring-sql"/>. </p>
    <table id="functions-binarystring-other">
      <title>Other Binary String Functions</title>
      <tgroup cols="3">
        <thead>
          <row>
            <entry>Function</entry>
            <entry>Return Type</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <codeph><codeph>btrim</codeph>(<i>string</i>
                <codeph>bytea</codeph>, <i>bytes</i>
                <codeph>bytea</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>bytea</codeph>
            </entry>
            <entry> Remove the longest string consisting only of bytes in <i>bytes</i> from the
              start and end of <i>string</i>
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>decode</codeph>(<i>string</i>
                <codeph>text</codeph>, <i>type</i>
                <codeph>text</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>bytea</codeph>
            </entry>
            <entry> Decode binary string from <i>string</i> previously encoded with
                <codeph>encode</codeph>. Parameter type is same as in <codeph>encode</codeph>.
            </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>encode</codeph>(<i>string</i>
                <codeph>bytea</codeph>, <i>type</i>
                <codeph>text</codeph>)</codeph>
            </entry>
            <entry>
              <codeph>text</codeph>
            </entry>
            <entry> Encode binary string to ASCII-only representation. Supported types are:
                <codeph>base64</codeph>, <codeph>hex</codeph>, <codeph>escape</codeph>. </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>length</codeph>(<i>string</i>)</codeph>
            </entry>
            <entry>
              <codeph>int</codeph>
            </entry>
            <entry> Length of binary string </entry>
          </row>
          <row>
            <entry>
              <codeph><codeph>md5</codeph>(<i>string</i>)</codeph>
            </entry>
            <entry>
              <codeph>text</codeph>
            </entry>
            <entry> Calculates the MD5 hash of <i>string</i>, returning the result in hexadecimal
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p><xref href="#functions-binarystring/table_fk5_qmg_4p" format="dita"/> shows usage examples
      for <xref href="#functions-binarystring/functions-binarystring-other" format="dita"/>.</p>
    <table id="table_fk5_qmg_4p">
      <title>Other Binary String Functions Examples</title>
      <tgroup cols="2">
        <thead>
          <row>
            <entry>Example</entry>
            <entry>Result</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <codeph>btrim(E'\\000trim\\000'::bytea, E'\\000'::bytea)</codeph>
            </entry>
            <entry>
              <codeph>trim</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>decode(E'123\\000456', 'escape')</codeph>
            </entry>
            <entry>
              <codeph>123\000456</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>encode(E'123\\000456'::bytea, 'escape')</codeph>
            </entry>
            <entry>
              <codeph>123\000456</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>length(E'jo\\000se'::bytea)</codeph>
            </entry>
            <entry>
              <codeph>5</codeph>
            </entry>
          </row>
          <row>
            <entry>
              <codeph>md5(E'Th\\000omas'::bytea)</codeph>
            </entry>
            <entry>
              <codeph>8ab2d3c9689aaf18 b4958c334c82d8b1</codeph>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </body>
</topic>
