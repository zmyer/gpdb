<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="functions-array">
 <title>Array Functions and Operators</title>
 <body>
  <p>
   <xref href="#functions-array/array-operators-table"/> shows the operators available for
    <codeph>array</codeph> types. </p>
  <table id="array-operators-table">
   <title>Array Operators</title>
   <tgroup cols="4">
    <colspec colnum="1" colname="c1" colwidth="1*"/>
    <colspec colnum="2" colname="c2" colwidth="1.16*"/>
    <colspec colnum="3" colname="c3" colwidth="1.74*"/>
    <colspec colnum="4" colname="c4" colwidth="1.3*"/>
    <thead>
     <row>
      <entry>Operator</entry>
      <entry>Description</entry>
      <entry>Example</entry>
      <entry>Result</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <codeph>=</codeph>
      </entry>
      <entry>equal</entry>
      <entry>
       <codeph>ARRAY[1.1,2.1,3.1]::int[] = ARRAY[1,2,3]</codeph>
      </entry>
      <entry>
       <codeph>t</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>&lt;&gt;</codeph>
      </entry>
      <entry>not equal</entry>
      <entry>
       <codeph>ARRAY[1,2,3] &lt;&gt; ARRAY[1,2,4]</codeph>
      </entry>
      <entry>
       <codeph>t</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>&lt;</codeph>
      </entry>
      <entry>less than</entry>
      <entry>
       <codeph>ARRAY[1,2,3] &lt; ARRAY[1,2,4]</codeph>
      </entry>
      <entry>
       <codeph>t</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>&gt;</codeph>
      </entry>
      <entry>greater than</entry>
      <entry>
       <codeph>ARRAY[1,4,3] &gt; ARRAY[1,2,4]</codeph>
      </entry>
      <entry>
       <codeph>t</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>&lt;=</codeph>
      </entry>
      <entry>less than or equal</entry>
      <entry>
       <codeph>ARRAY[1,2,3] &lt;= ARRAY[1,2,3]</codeph>
      </entry>
      <entry>
       <codeph>t</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>&gt;=</codeph>
      </entry>
      <entry>greater than or equal</entry>
      <entry>
       <codeph>ARRAY[1,4,3] &gt;= ARRAY[1,4,3]</codeph>
      </entry>
      <entry>
       <codeph>t</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>@&gt;</codeph>
      </entry>
      <entry>contains</entry>
      <entry>
       <codeph>ARRAY[1,4,3] @&gt; ARRAY[3,1]</codeph>
      </entry>
      <entry>
       <codeph>t</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>&lt;@</codeph>
      </entry>
      <entry>is contained by</entry>
      <entry>
       <codeph>ARRAY[2,7] &lt;@ ARRAY[1,7,4,2,6]</codeph>
      </entry>
      <entry>
       <codeph>t</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>&amp;&amp;</codeph>
      </entry>
      <entry>overlap (have elements in common)</entry>
      <entry>
       <codeph>ARRAY[1,4,3] &amp;&amp; ARRAY[2,1]</codeph>
      </entry>
      <entry>
       <codeph>t</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>||</codeph>
      </entry>
      <entry>array-to-array concatenation</entry>
      <entry>
       <codeph>ARRAY[1,2,3] || ARRAY[4,5,6]</codeph>
      </entry>
      <entry>
       <codeph>{1,2,3,4,5,6}</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>||</codeph>
      </entry>
      <entry>array-to-array concatenation</entry>
      <entry>
       <codeph>ARRAY[1,2,3] || ARRAY[[4,5,6],[7,8,9]]</codeph>
      </entry>
      <entry>
       <codeph>{{1,2,3},{4,5,6},{7,8,9}}</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>||</codeph>
      </entry>
      <entry>element-to-array concatenation</entry>
      <entry>
       <codeph>3 || ARRAY[4,5,6]</codeph>
      </entry>
      <entry>
       <codeph>{3,4,5,6}</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>||</codeph>
      </entry>
      <entry>array-to-element concatenation</entry>
      <entry>
       <codeph>ARRAY[4,5,6] || 7</codeph>
      </entry>
      <entry>
       <codeph>{4,5,6,7}</codeph>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <p> Array comparisons compare the array contents element-by-element, using the default B-Tree
   comparison function for the element data type. In multidimensional arrays the elements are
   visited in row-major order (last subscript varies most rapidly). If the contents of two arrays
   are equal but the dimensionality is different, the first difference in the dimensionality
   information determines the sort order. </p>
  <note>All array functions are classified STABLE. They should not be used in statements that
   execute on segments.</note>

  <p>
   <xref href="#functions-array/array-functions-table"/> shows the functions available for use with
   array types. </p>
  <table id="array-functions-table">
   <title>Array Functions</title>
   <tgroup cols="3">
    <colspec colnum="1" colname="c1" colwidth="1.98*"/>
    <colspec colnum="2" colname="c2" colwidth="1*"/>
    <colspec colnum="3" colname="c3" colwidth="1.48*"/>
    <thead>
     <row>
      <entry>Function</entry>
      <entry>Return Type</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <codeph> array_append(<i>anyarray</i>, <i>anyelement</i>) </codeph>
      </entry>
      <entry>
       <codeph>anyarray</codeph>
      </entry>
      <entry>append an element to the end of an array</entry>
     </row>
     <row>
      <entry>
       <codeph> array_cat(<i>anyarray</i>, <i>anyarray</i>) </codeph>
      </entry>
      <entry>
       <codeph>anyarray</codeph>
      </entry>
      <entry>concatenate two arrays</entry>
     </row>
     <row>
      <entry>
       <codeph>array_dims(<i>anyarray</i>) </codeph>
      </entry>
      <entry>
       <codeph>text</codeph>
      </entry>
      <entry>returns a text representation of array's dimensions</entry>
     </row>
     <row>
      <entry>
       <codeph> array_lower(<i>anyarray</i>, <i>int</i>) </codeph>
      </entry>
      <entry>
       <codeph>int</codeph>
      </entry>
      <entry>returns lower bound of the requested array dimension</entry>
     </row>
     <row>
      <entry>
       <codeph> array_prepend(<i>anyelement</i>, <i>anyarray</i>) </codeph>
      </entry>
      <entry>
       <codeph>anyarray</codeph>
      </entry>
      <entry>append an element to the beginning of an array</entry>
     </row>
     <row>
      <entry>
       <codeph> array_to_string(<i>anyarray</i>, <i>text</i>) </codeph>
      </entry>
      <entry>
       <codeph>text</codeph>
      </entry>
      <entry>concatenates array elements using provided delimiter</entry>
     </row>
     <row>
      <entry>
       <codeph> array_upper(<i>anyarray</i>, <i>int</i>) </codeph>
      </entry>
      <entry>
       <codeph>int</codeph>
      </entry>
      <entry>returns upper bound of the requested array dimension</entry>
     </row>
     <row>
      <entry>
       <codeph> string_to_array(<i>text</i>, <i>text</i>) </codeph>
      </entry>
      <entry>
       <codeph>text[]</codeph>
      </entry>
      <entry>splits string into array elements using provided delimiter</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <p>The following table contains examples of the array functions in <xref
    href="#functions-array/array-functions-table" format="dita"/>.</p>
  <table id="table_gx2_kjb_pp">
   <title>Array Functions Examples</title>
   <tgroup cols="2">
    <colspec colnum="1" colname="c4" colwidth="2.47*"/>
    <colspec colnum="2" colname="c5" colwidth="1.13*"/>
    <thead>
     <row>
      <entry>Example</entry>
      <entry>Result</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <codeph>array_append(ARRAY[1,2], 3)</codeph>
      </entry>
      <entry>
       <codeph>{1,2,3}</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>array_cat(ARRAY[1,2,3], ARRAY[4,5])</codeph>
      </entry>
      <entry>
       <codeph>{1,2,3,4,5}</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>array_dims(ARRAY[[1,2,3], [4,5,6]])</codeph>
      </entry>
      <entry>
       <codeph>[1:2][1:3]</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>array_lower('[0:2]={1,2,3}'::int[], 1)</codeph>
      </entry>
      <entry>
       <codeph>0</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>array_prepend(1, ARRAY[2,3])</codeph>
      </entry>
      <entry>
       <codeph>{1,2,3}</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>array_to_string(ARRAY[1, 2, 3], '~^~')</codeph>
      </entry>
      <entry>
       <codeph>1~^~2~^~3</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>array_upper(ARRAY[1,2,3,4], 1)</codeph>
      </entry>
      <entry>
       <codeph>4</codeph>
      </entry>
     </row>
     <row>
      <entry>
       <codeph>string_to_array('xx~^~yy~^~zz', '~^~')</codeph>
      </entry>
      <entry>
       <codeph>{xx,yy,zz}</codeph>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </body>
</topic>
