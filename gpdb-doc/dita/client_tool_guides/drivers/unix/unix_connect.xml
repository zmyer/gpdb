<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1" xml:lang="en">
  <title>Greenplum Database 4.3 Connectivity Tools for UNIX</title>
  <shortdesc otherprops="op-help">Information for installing the Greenplum Database drivers and C
    API software on a client system. </shortdesc>
  <body>
    <p otherprops="op-print">Rev: A07</p>
    <p otherprops="op-print">Updated: June, 2016</p>
    <!--short description and rev information are tagged for help/pdf output.
For PDF, the connectivity tools ditamap requires the pdf-note transform -->
  </body>
  <topic id="topic_ol2_2bp_fp">
    <title>Overview</title>
    <body>
      <p>Greenplum provides database drivers and a C API for connecting to Greenplum Database. In
        this version 4.3 distribution, the following connectivity tools are provided:</p>
      <ul id="ul_c1r_zpx_np">
        <li>psqlODBC</li>
        <li>PostgreSQL JDBC Interface</li>
        <li>libpq</li>
      </ul>
      <p>The supported platforms include RedHat Enterprise Linux, Solaris, and SUSE Linux Enterprise
        Server. See the <i>Greenplum Database Release Notes</i> for the list of currently supported
        platforms for the Connectivity Tools.</p>
      <note type="note">If your Java application on RedHat Enterprise Linux connect to Greenplum
        Database with Kerberos authentication, see "<xref href="#topic12" type="topic" format="dita"
        />."</note>
    </body>
    <topic id="id_rbh_kds_j4" conref="../shared_files/connect_intro.xml#topic1">
      <title/>
    </topic>
    <topic id="id_pyq_kds_j4" conref="../shared_files/connect_intro.xml#topic2">
      <title/>
    </topic>
    <topic id="id_dwz_kds_j4" conref="../shared_files/connect_intro.xml#topic3">
      <title/>
    </topic>
  </topic>
  <topic id="topic5" xml:lang="en">
    <title id="kd155583">Installing the Connectivity Tools</title>
    <body>
      <p>The Greenplum Database connectivity tools installer copies the drivers and
          <codeph>libpq</codeph> API to your system. After installation, some connectivity tools
        require additional configuration steps.</p>
      <section id="kd155678">
        <title>To install the Greenplum Database connectivity tools</title>
        <ol>
          <li id="kd157618">Download the appropriate
                <codeph>greenplum-connectivity-4.3.x.x-<varname>PLATFORM</varname>.bin.zip</codeph>
            installer package for your platform from <xref
              href="https://network.pivotal.io" scope="external" format="html">Pivotal
              Network</xref>.</li>
          <li id="kd157623">Unzip the installer
            package:<codeblock>unzip greenplum-connectivity-4.3.x.x-<varname>PLATFORM</varname>.bin.zip</codeblock></li>
          <li id="kd157543">Run the
            installer:<codeblock>/bin/bash greenplum-connectivity-4.3.x.x-<varname>PLATFORM</varname>.bin</codeblock></li>
          <li id="kd155905">The installer will prompt you to accept the license agreement and to
            provide an installation path. For the installation path, be sure to enter an absolute
            path if you choose not to accept the default location (for example,
              <codeph>/home/mydir/gp-drivers</codeph>). The connectivity tools are installed by
            default into <codeph>/usr/local/greenplum-connectivity-4.3.x.x</codeph>. This
            installation directory is referred to as <codeph>$GPHOME_CONNECTIVITY</codeph>.</li>
        </ol>
      </section>
    </body>
    <topic id="topic6" xml:lang="en">
      <title>About Your Installation</title>
      <body>
        <p>Your Greenplum Database connectivity tools installation contains the following files and
          directories:</p>
        <ul>
          <li id="kd155614"><codeph>GPConnectUnix.pdf</codeph> — documentation for the connectivity
            tools package</li>
          <li id="kd155916"><codeph>drivers</codeph> — PostgreSQL ODBC and JDBC database drivers </li>
          <li id="kd155615"><codeph>greenplum_connectivity_path.sh</codeph> — environment
            variables</li>
          <li id="kd155617"><codeph>include</codeph> — libpq C header files</li>
          <li id="kd155962"><codeph>lib</codeph> — libpq library files</li>
        </ul>
      </body>
    </topic>
  </topic>
  <topic id="topic7" xml:lang="en">
    <title>Configuring Greenplum Database Drivers for Unix</title>
    <body>
      <p>The PostgreSQL ODBC drivers require a data source definition (DSN) file and a compatible
        driver manager. Also, you must set environment variables in
          <codeph>greenplum_connectivity_path.sh</codeph> to specify the correct driver and driver
        manager files.</p>
      <p>For JDBC, you must add the driver's JAR files to your path. </p>
    </body>
    <topic id="topic8" xml:lang="en">
      <title id="kd156439">Configuring the PostgreSQL ODBC Driver</title>
      <body>
        <p>The <codeph>$GPHOME_CONNECTIVITY/drivers/odbc</codeph> directory contains both drivers
          and compatible driver manager program files in subdirectories organized by driver
          version/driver manager. For example, driver files for psqlodbc version 08.02.0500 compiled
          with unixODBC driver manager 2.2.12 are located in the following directory:</p>
        <codeblock>$GPHOME_CONNECTIVITY/drivers/odbc/psqlodbc-08.02.0500/unixodbc-2.2.12</codeblock>
        <p>The <codeph>$GPHOME_CONNECTIVITY/drivers/odbc</codeph> directory contains only the
          driver/driver manager combinations that are supported for a given platform. If you need a
          different combination, contact Greenplum customer support to submit a request.</p>
        <section id="kd156664">
          <title>To configure the PostgreSQL ODBC Driver</title>
          <ol>
            <li id="kd156440">In the directory <codeph>$GPHOME_CONNECTIVITY/drivers/odbc</codeph>,
              locate the correct driver and driver manager. For example, if you are configuring
              psqlodbc-08.02.0400 with the 64-bit Data Direct Driver Manager 5.2, the correct
              program files are found in the following
              directory:<codeblock>$GPHOME_CONNECTIVITY/drivers/odbc/psqlodbc-08.02.0400/datadirect-52_64</codeblock></li>
            <li id="kd156480">Edit <codeph>greenplum_connectivity_path.sh</codeph> and set the
              following
                variables:<codeblock>GP_ODBC_DRIVER = psqlodbc-<varname>VERSION</varname>
GP_ODBC_DRIVER_MANAGER = <varname>DRIVER MANAGER VERSION</varname></codeblock><p>To
                specify the versions, use the same values used in the directory naming. For
                example:</p><codeblock>GP_ODBC_DRIVER = psqlodbc-08.02.0400
GP_ODBC_DRIVER_MANAGER = datadirect-52_64</codeblock></li>
            <li id="kd156571">After editing <codeph>greenplum_connectivity_path.sh</codeph>, source
              it as the correct user to make the changes active. For
              example:<codeblock>source greenplum_connectivity_path.sh</codeblock></li>
            <li id="kd156442">Create a data source definition (DSN). User DSNs are usually stored in
              the Greenplum user's (<codeph>gpadmin</codeph>) home directory in a file named
                <codeph>.odbc.ini</codeph> (note the leading dot). Here is an example
                <codeph>.odbc.ini</codeph>
              file:<codeblock>[Greenplum]
Description = PostgreSQL driver for Greenplum
Driver = 
greenplum-connectivity-4.3.x.x/drivers/odbc/psqlodbc-02.08.0500/unixodbc-2.2.14/psqlodbcw.so
Trace = 1
Debug=1
Database = template1
Servername = gpmaster_hostname
UserName = gpadmin
Password = dbpassword_for_gpadmin
Port = 5432
ReadOnly = No
RowVersioning = No
DisallowPremature = No
ShowSystemTables = Yes
ShowOidColumn = No
FakeOidIndex = No
useDeclareFetch = 1
Fetch = 4096
UpdatableCursors = No
Protocol = 7.4-1</codeblock></li>
          </ol>
        </section>
      </body>
    </topic>
    <topic id="topic9" xml:lang="en">
      <title>Verifying the PostgreSQL ODBC Driver</title>
      <body>
        <p>After installing and configuring the ODBC driver, you can verify its working condition
          with a simple test such as passing a command from iSQL. If you use iSQL for verification
          purposes, make sure you use a version from the unixODBC driver manager 2.2.14 or later,
          and specify the <codeph>-3</codeph> option. Also, you must specify the driver manager
          version in your <codeph>PATH</codeph> and <codeph>LD_LIBRARY PATH</codeph> environment
          variables.</p>
        <section id="kd157084">
          <title>To verify the PostgreSQL ODBC Driver with iSQL:</title>
          <ol>
            <li id="kd157100">Open <codeph>greenplum_connectivity_path.sh</codeph> for edit.</li>
            <li id="kd157127">To the <codeph>PATH</codeph> variable, add
                <codeph>&lt;path_to_unixodbc-2.2.14&gt;/bin</codeph>. For
              example:<codeblock>PATH=${GPHOME_CONNECTIVITY}/bin:<b>${GPHOME_CONNECTIVITY}/drivers/odbc/psqlodbc-08.02.0500/
unixodbc-2.2.14/bin</b>:${PATH}</codeblock></li>
            <li id="kd157177">To the <codeph>LD_LIBRARY_PATH</codeph> variable
                (<codeph>DYLD_LIBRARY_PATH</codeph> on OSX), add
                <codeph>&lt;path_to_unixodbc-2.2.14&gt;/ext/lib</codeph>. For
              example:<codeblock>LD_LIBRARY_PATH=${GPHOME_CONNECTIVITY}/drivers/odbc/${GP_ODB
C_DRIVER}/${GP_ODBC_DRIVER_MANAGER}/:${GPHOME_CONNECTIVITY}/lib:<b>${GPHOME_CONNECTIVITY}/
drivers/odbc/psqlodbc-08.02.0500/unixodbc-2.2.14/ext/lib:</b>${LD_LIBRARY_PATH}</codeblock></li>
            <li id="kd157104">After editing <codeph>greenplum_connectivity_path.sh</codeph>, source
              it as the correct user to make the changes active. For
              example:<codeblock>source greenplum_connectivity_path.sh</codeblock></li>
            <li id="kd157293">Run iSQL, specifing the database name and the <codeph>-3</codeph>
              option. For example:<codeblock>isql -3 <i>&lt;database_name&gt;</i></codeblock></li>
          </ol>
        </section>
      </body>
    </topic>
    <topic id="topic10" xml:lang="en">
      <title id="kd155294">Configuring the PostgreSQL JDBC Driver</title>
      <body>
        <p>The PostgreSQL JDBC drivers are installed by the client tools installer into
            <codeph>greenplum-connectivity-4.3.x.x/drivers/jdbc</codeph>. In order to use a driver,
          you must specify the correct JAR file in the <codeph>GP_JDBC_DRIVER</codeph> variable
          provided in <codeph>greenplum_connectivity_path.sh</codeph>.</p>
        <note>To use a JDBC 4 driver, you use the JAR file based on the Java version being used: <ul
            id="ul_hfn_mrf_ct">
            <li>For Java 1.6, use the JDBC4 driver
              <codeph>postgresql-9.4-1208.jdbc4.jar</codeph>.</li>
            <li>For Java 1.7, use the JDBC41 driver
              <codeph>postgresql-9.4-1208.jdbc41.jar</codeph>.</li>
            <li>For Java 1.8, use the JDBC42 driver
              <codeph>postgresql-9.4-1208.jdbc42.jar</codeph>.</li>
          </ul></note>
        <section id="kd156744">
          <title>To configure the PostgreSQL JDBC Driver</title>
          <ol>
            <li id="kd156779">In the directory <codeph>$GPHOME_CONNECTIVITY/drivers/jdbc</codeph>,
              locate the correct JAR file. For example, if your application requires a JDBC
              4.0-compliant driver and is using Java 1.6, use the following JAR
              file:<codeblock>$GPHOME_CONNECTIVITY/drivers/jdbc/postgresql-9.4-1208.jdbc4.jar</codeblock></li>
            <li id="kd156781">Edit <codeph>greenplum_connectivity_path.sh</codeph> and set
                <codeph>GP_JDBC_DRIVER</codeph> to the correct JAR file
              name:<codeblock><b>GP_JDBC_JARFILE</b>=postgresql-9.4-1208.jdbc4.jar</codeblock></li>
            <li id="kd156751">After editing <codeph>greenplum_connectivity_path.sh</codeph>, source
              it as the correct user to make the changes active. For
              example:<codeblock>source greenplum_connectivity_path.sh</codeblock></li>
          </ol>
        </section>
      </body>
    </topic>
    <topic id="topic11" xml:lang="en">
      <title>Setting Environment Variables</title>
      <body>
        <p>The <codeph>greenplum_connectivity_path.sh</codeph> file is provided in your connectivity
          tools installation directory. It has the following environment variable settings:</p>
        <p><codeph>GPHOME_CONNECTIVITY</codeph> — The installation directory of the Greenplum
          Database connectivity tools.</p>
        <p><codeph>PATH</codeph> — The path to additional library files needed for the drivers.</p>
        <p><codeph>PYTHONPATH</codeph> — The path to Python library files needed for ODBC
          drivers.</p>
        <p><codeph>CLASSPATH</codeph> — The path to the selected JAR file for the JDBC driver. </p>
        <p>This file also stores the variables to specify the selected ODBC and JDBC driver
          files:</p>
        <p><codeph>GP_ODBC_DRIVER</codeph> — Set to the name of the selected ODBC driver (default is
            <codeph>unset</codeph>).</p>
        <p><codeph>GP_ODBC_DRIVER_MANAGER</codeph> — Set to the name of the selected driver manager
          (default is <codeph>unset</codeph>).</p>
        <p><codeph>GP_JDBC_JARFILE</codeph> — Set to the name of the JAR file for the selected JDBC
          driver (default is <codeph>unset</codeph>).</p>
        <p>You can source this file in your user's startup shell profile (such as
            <codeph>.bashrc</codeph> or <codeph>.bash_profile</codeph>). </p>
        <p>For example, you could add a line similar to the following to your chosen profile files
          (making sure the right install path is used):</p>
        <codeblock>source greenplum-connectivity-4.3.x.x/greenplum_connectivity_path.sh</codeblock>
        <p>After editing the chosen profile file, source it as the correct user to make the changes
          active. For example:</p>
        <codeblock>source ~/.bashrc</codeblock>
      </body>
    </topic>
  </topic>
  <topic id="topic12" xml:lang="en">
    <title id="kd157699">Configuring a Client System for Kerberos Authentication</title>
    <body>
      <p>If your JDBC application on RedHat Enterprise Linux uses Kerberos authentication when it
        connects to your Greenplum Database, your client system must be configured to use Kerberos
        authentication. If you are not using Kerberos authentication to connect to a Greenplum
        Database, Kerberos is not needed on your client system.</p>
      <ul>
        <li id="kd158375">
          <xref href="#topic13" type="topic" format="dita"/>
        </li>
        <li id="kd158379">
          <xref href="#topic17" type="topic" format="dita"/>
        </li>
        <li id="kd158383">
          <xref href="#topic18" type="topic" format="dita"/>
        </li>
      </ul>
      <p>For information about enabling Kerberos authentication with Greenplum Database, see the
        chapter "Setting Up Kerberos Authentication" in the <i>Greenplum Database Administrator
          Guide</i>. </p>
    </body>
    <topic id="topic13" xml:lang="en">
      <title id="kd158392">Requirements</title>
      <body>
        <p>The following are requirements to connect to a Greenplum Database that is enabled with
          Kerberos authentication from a client system with a JDBC application.</p>
        <ul>
          <li id="kd158400">
            <xref href="#topic14" type="topic" format="dita"/>
          </li>
          <li id="kd158404">
            <xref href="#topic15" type="topic" format="dita"/>
          </li>
          <li id="kd158408">
            <xref href="#topic16" type="topic" format="dita"/>
          </li>
        </ul>
      </body>
      <topic id="topic14" xml:lang="en">
        <title id="kd158410">Prerequisites</title>
        <body>
          <ul>
            <li id="kd158414">Kerberos must be installed and configured on the Greenplum Database
              master host. <note type="important">Greenplum Database must be configured so that a
                remote user can connect to Greenplum Database with Kerberos authentication.
                Authorization to access Greenplum Database is controlled by the
                  <codeph>pg_hba.conf</codeph> file. For details, see "Editing the pg_hba.conf File"
                in the <i>Greenplum Database Administration Guide</i>, and also see the <i>Greenplum
                  Database Security Configuration Guide</i>.</note></li>
            <li id="kd158429">The client system requires the Kerberos configuration file
                <codeph>krb5.conf</codeph> from the Greenplum Database master. </li>
            <li id="kd158433">The client system requires a Kerberos keytab file that contains the
              authentication credentials for the Greenplum Database user that is used to log into
              the database. </li>
            <li id="kd158440">The client machine must be able to connect to Greenplum Database
              master host. <p>If necessary, add the Greenplum Database master host name and IP
                address to the system <codeph>hosts</codeph> file. On Linux systems, the
                  <codeph>hosts</codeph> file is in <codeph>/etc</codeph>.</p></li>
          </ul>
        </body>
      </topic>
      <topic id="topic15" xml:lang="en">
        <title id="kd158447">Required Software on the Client Machine</title>
        <body>
          <ul>
            <li id="kd158448">The Kerberos <codeph>kinit</codeph> utility is required on the client
              machine. The <codeph>kinit</codeph> utility is available when you install the Kerberos
              packages: <p>
                <ul id="ul_qkg_zhr_l4">
                  <li>krb5-libs</li>
                  <li>krb5-workstation</li>
                </ul>
                <note>When you install the Kerberos packages, you can use other Kerberos utilities
                  such as <codeph>klist</codeph> to display Kerberos ticket information. </note>
              </p></li>
            <li id="kd158450">Java JDK <p>Java JDK 1.7.0_17 is supported on Red Hat Enterprise Linux
                6.x. </p><p>Java JDK 1.6.0_21 is supported on Red Hat Enterprise Linux 5.x.
              </p></li>
          </ul>
        </body>
      </topic>
      <topic id="topic16" xml:lang="en">
        <title id="kd158454">User Environment Variables</title>
        <body>
          <ul>
            <li id="kd158455">Ensure that JAVA_HOME is set to the installation directory of the
              supported Java JDK. </li>
            <li id="kd158456">Ensure <codeph>greenplum_connectivity_path.sh</codeph> and set
                <codeph>GP_JDBC_DRIVER</codeph> to the correct JAR file
                name:<codeblock><b>GP_JDBC_JARFILE</b>=postgresql-8.1-407.jdbc4.jar</codeblock><p>Source
                the file as the user running the Java application to make the changes
              active.</p></li>
          </ul>
        </body>
      </topic>
    </topic>
    <topic id="topic17" xml:lang="en">
      <title id="kd158460">Setting Up Client System with Kerberos Authentication</title>
      <body>
        <p>To connect to Greenplum Database with Kerberos authentication requires a Kerberos ticket.
          On client systems, tickets are generated from Kerberos keytab files with the
            <codeph>kinit</codeph> utility and are stored in a cache file.</p>
        <ol>
          <li id="kd158467">Install a copy of the Kerberos configuration file
              <codeph>krb5.conf</codeph> from the Greenplum Database master. The file is used by the
            Greenplum Database client software and the Kerberos utilities. <p>Install
                <codeph>krb5.conf</codeph> in the directory <codeph>/etc</codeph>. </p><p>If needed,
              add the parameter <codeph>default_ccache_name</codeph> to the
                <codeph>[libdefaults]</codeph> section of the <codeph>krb5.ini</codeph> file and
              specify location of the Kerberos ticket cache file on the client system. </p></li>
          <li id="kd158474">Obtain a Kerberos keytab file that contains the authentication
            credentials for the Greenplum Database user. </li>
          <li id="kd158478">Run <codeph>kinit</codeph> specifying the keytab file to create a ticket
            on the client machine. For this example, the keytab file
              <codeph>gpdb-kerberos.keytab</codeph> is in the the current directory. The ticket
            cache file is in the <codeph>gpadmin</codeph> user home directory.
            <codeblock>&gt; kinit -k -t gpdb-kerberos.keytab -c /home/gpadmin/cache.txt 
   gpadmin/kerberos-gpdb@KRB.EXAMPLE.COM</codeblock></li>
        </ol>
      </body>
    </topic>
    <topic id="topic18" xml:lang="en">
      <title id="kd158481">Running a Java Application </title>
      <body>
        <p>Accessing Greenplum Database from a Java application with Kerberos authentication uses
          the Java Authentication and Authorization Service (JAAS) </p>
        <ol>
          <li id="kd158486">Create the file <codeph>.java.login.config</codeph> in the user home
            folder. <p>For example, on a Linux system, the home folder is similar to
                <codeph>/home/gpadmin</codeph>. </p><p>Add the following text to the
            file:</p><codeblock>pgjdbc {
  com.sun.security.auth.module.Krb5LoginModule required
  doNotPrompt=true
  useTicketCache=true
  ticketCache = "/home/gpadmin/cache.txt"
  debug=true
  client=true;
};</codeblock></li>
          <li id="kd158493">Create a Java application that connects to Greenplum Database using
            Kerberos authentication and run the application as the user. </li>
        </ol>
        <p>This example database connection URL uses a PostgreSQL JDBC driver and specifies
          parameters for Kerberos authentication.</p>
        <codeblock>jdbc:postgresql://kerberos-gpdb:5432/mytest? 
  kerberosServerName=postgres&amp;jaasApplicationName=pgjdbc&amp; 
  user=gpadmin/kerberos-gpdb</codeblock>
        <p>The parameter names and values specified depend on how the Java application performs
          Kerberos authentication.</p>
      </body>
    </topic>
  </topic>
</topic>
