<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
  <title id="ko142863">gp_restore</title>
  <body>
    <p><draft-comment author="kiyamm">Removed 4.3.3.0</draft-comment>Restores Greenplum databases
      that were backed up using <codeph><xref href="gp_dump.xml#topic1" type="topic" format="dita"
        /></codeph>.</p>
    <note>The <codeph>gp_restore</codeph> utility is deprecated and will be removed in a future
      release. Use <codeph><xref href="gpcrondump.xml#topic1" type="topic" format="dita"/></codeph>
      and <codeph><xref href="gpdbrestore.xml#topic1" type="topic" format="dita"/></codeph> to
      backup and restore Greenplum databases. </note>
    <section id="section2">
      <title>Synopsis</title>
      <codeblock><b>gp_restore</b> <b>--gp-k</b>=<varname>timestamp_key</varname> <b>-d</b> <varname>database_name</varname> [<b>-i</b>] [<b>-v</b>] [<b>-a</b>| <b>-s</b>] 
            [<b>-h</b> <varname>hostname</varname>] [<b>-p</b> <varname>port</varname>] [<b>-U</b> <varname>username</varname>] [<b>-W</b>] [<b>--gp-c</b>] 
            [<b>--gp-i</b>] [<b>--gp-d</b>=<varname>directoryname</varname>] [<b>--gp-r</b>=<varname>reportfile</varname>]
            [<b>--gp-l</b>=<varname>dbid</varname> [, ...]]

<b>gp_restore</b> <b>-?</b> | <b>-h</b> | <b>--help</b> 

<b>gp_restore</b> <b>--version</b></codeblock>
    </section>
    <section id="section3">
      <title>Description</title>
      <p>The <codeph>gp_restore</codeph> utility recreates the data definitions (schema) and user
        data in a Greenplum database using the script files created by a <codeph><xref
            href="gp_dump.xml#topic1" type="topic" format="dita"/></codeph> operation. The use of
        this utility assumes:</p>
      <ol>
        <li id="ko142893">You have backup files created by a <codeph><xref href="gp_dump.xml#topic1"
              type="topic" format="dita"/></codeph> operation.</li>
        <li id="ko142897">Your Greenplum Database system up and running.</li>
        <li id="ko142901">Your Greenplum Database system has the exact same number of segment
          instances (primary and mirror) as the system that was backed up using
            <codeph>gp_dump</codeph>. </li>
        <li id="ko142905">(Optional) The <codeph>gp_restore</codeph> utility uses the information in
          the Greenplum system catalog tables to determine the hosts, ports, and data directories
          for the segment instances it is restoring. If you want to change any of this information
          (for example, move the system to a different array of hosts) you must use the
            <codeph>gprebuildsystem</codeph> and <codeph>gprebuildseg</codeph> scripts to
          reconfigure your array before restoring.</li>
        <li id="ko142906">The databases you are restoring have been created in the system.</li>
        <li id="ko142907">If you used the options <codeph>-s</codeph> (schema only) ,
            <codeph>-a</codeph> (data only), <codeph>--gp-c</codeph> (compressed),
            <codeph>--gp-d</codeph> (alternate dump file location) when performing the
            <codeph>gp_dump</codeph> operation, you must specify these options when doing the
            <codeph>gp_restore</codeph> as well.</li>
      </ol>
      <p>The functionality of <codeph>gp_restore</codeph> is analogous to PostgreSQL's
          <codeph>pg_restore</codeph> utility, which restores a database from files created by the
        database backup process. It issues the commands necessary to reconstruct the database to the
        state it was in at the time it was saved.</p>
      <p>The functionality of <codeph>gp_restore</codeph> is modified to accommodate the distributed
        nature of a Greenplum database, and to use files created by a <codeph>gp_dump</codeph>
        operation. Keep in mind that a database in Greenplum is actually comprised of several
        PostgreSQL database instances (the master and all segments), each of which must be restored
        individually. The <codeph>gp_restore</codeph> utility takes care of populating each segment
        in the system with its own distinct portion of data.</p>
      <note type="note">
        <p>The <codeph><xref href="gp_dump.xml#topic1" type="topic" format="dita"/></codeph> utility
          creates a dump file in the master data directory named
            <codeph>gp_dump_1_&lt;</codeph><varname>dbid</varname><codeph>&gt;_&lt;</codeph><varname>timestamp</varname><codeph>&gt;_post_data</codeph>
          that contains commands to rebuild objects associated with the tables. When the database is
          restored with <codeph>gp_restore</codeph>, first, the schema and data are restored, and
          then, the dump file is used to rebuilt the other objects associated with the tables.</p>
      </note>
      <p>The <codeph>gp_restore</codeph> utility performs the following actions:</p>
      <p>
        <b>On the master host</b>
      </p>
      <ul>
        <li id="ko142922">Creates the user database schema(s) using the
            <codeph>gp_dump_1_&lt;</codeph><varname>dbid</varname><codeph>&gt;_&lt;</codeph><varname>timestamp</varname><codeph>&gt;</codeph>
          SQL file created by <codeph>gp_dump</codeph>.</li>
        <li id="ko142923">Creates a log file in the master data directory named
            <codeph>gp_restore_status_1_&lt;</codeph><varname>dbid</varname><codeph>&gt;_&lt;</codeph><varname>timestamp</varname><codeph>&gt;</codeph>.</li>
        <li id="ko142924"><codeph>gp_restore</codeph> launches a <codeph>gp_restore_agent</codeph>
          for each segment instance to be restored. <codeph>gp_restore_agent</codeph> processes run
          on the segment hosts and report status back to the <codeph>gp_restore</codeph> process
          running on the master host. </li>
      </ul>
      <p>
        <b>On the segment hosts</b>
      </p>
      <ul>
        <li id="ko142926">Restores the user data for each segment instance using the
            <codeph>gp_dump_0_&lt;</codeph><varname>dbid</varname><codeph>&gt;_&lt;</codeph><varname>timestamp</varname><codeph>&gt;
          </codeph>files created by <codeph>gp_dump</codeph>. Each segment instance on a host
          (primary and mirror instances) are restored.</li>
        <li id="ko142927">Creates a log file for each segment instance named
            <codeph>gp_restore_status_0_&lt;</codeph><varname>dbid</varname><codeph>&gt;_&lt;</codeph><varname>timestamp</varname><codeph>&gt;</codeph>.</li>
      </ul>
      <p>The 14 digit timestamp is the number that uniquely identifies the backup job to be
        restored, and is part of the filename for each dump file created by a
          <codeph>gp_dump</codeph> operation. This timestamp must be passed to the <codeph><xref
            href="#topic1" type="topic" format="dita"/></codeph> utility when restoring a Greenplum
        Database.</p>
      <note type="note">
        <p>The restore status files are stored under the <codeph>db_dumps/&lt;date&gt;</codeph>
          directory.</p>
      </note>
      <p>After the data in the tables is restored, check the report status files to verify that
        there no errors.</p>
    </section>
    <section id="section4">
      <title>Options</title>
      <parml>
        <plentry>
          <pt>--gp-k=<varname>timestamp_key</varname></pt>
          <pd>Required. The 14 digit timestamp key that uniquely identifies the backup set of data
            to restore. This timestamp can be found in the <codeph><xref href="gp_dump.xml#topic1"
                type="topic" format="dita"/></codeph> log file output, as well as at the end of the
            dump files created by a <codeph><xref href="gp_dump.xml#topic1" type="topic"
                format="dita"/></codeph> operation. It is of the form
              <codeph>YYYYMMDDHHMMSS</codeph>.</pd>
        </plentry>
        <plentry>
          <pt>-d <varname>database_name</varname> | --dbname=<varname>dbname</varname></pt>
          <pd>Required. The name of the database to connect to in order to restore the user data.
            The database(s) you are restoring must exist, <codeph>gp_restore</codeph> does not
            create the database.</pd>
        </plentry>
        <plentry>
          <pt>-i | --ignore-version</pt>
          <pd>Ignores a version mismatch between <codeph>gp_restore</codeph> and the database
            server.</pd>
        </plentry>
        <plentry>
          <pt>-v | --verbose</pt>
          <pd>Specifies verbose mode.</pd>
        </plentry>
        <plentry>
          <pt>-a | --data-only</pt>
          <pd>Restore only the data, not the schema (data definitions).</pd>
        </plentry>
        <plentry>
          <pt>-s | --schema-only</pt>
          <pd>Restores only the schema (data definitions), no user data is restored.</pd>
        </plentry>
        <plentry>
          <pt>-h <varname>hostname</varname> | --host=<varname>hostname</varname></pt>
          <pd>The host name of the Greenplum master host. If not provided, the value of
              <codeph>PGHOST</codeph> or the local host is used.</pd>
        </plentry>
        <plentry>
          <pt>-p <varname>port</varname> | --port=<varname>port</varname></pt>
          <pd>The Greenplum master port. If not provided, the value of <codeph>PGPORT</codeph> or
            the port number provided at compile time is used.</pd>
        </plentry>
        <plentry>
          <pt>-U <varname>username</varname> | --username=<varname>username</varname></pt>
          <pd>The database superuser account name, for example <codeph>gpadmin</codeph>. If not
            provided, the value of <codeph>PGUSER</codeph> or the current OS user name is used.</pd>
        </plentry>
        <plentry>
          <pt>-W (force password prompt)</pt>
          <pd>Forces a password prompt. This will happen automatically if the server requires
            password authentication.</pd>
        </plentry>
        <plentry>
          <pt>--gp-c (use gunzip)</pt>
          <pd>Use <codeph>gunzip</codeph> for inline decompression.</pd>
        </plentry>
        <plentry>
          <pt>--gp-i (ignore errors)</pt>
          <pd>Specifies that processing should ignore any errors that occur. Use this option to
            continue restore processing on errors.</pd>
        </plentry>
        <plentry>
          <pt>--gp-d=<varname>directoryname</varname></pt>
          <pd>Specifies the relative or absolute path to backup files on the hosts. If this is a
            relative path, it is considered to be relative to the data directory. If not specified,
            defaults to the data directory of each instance being restored. Use this option if you
            created your backup files in an alternate location when running <codeph><xref
                href="gp_dump.xml#topic1" type="topic" format="dita"/></codeph>.</pd>
        </plentry>
        <plentry>
          <pt>--gp-r=<varname>reportfile</varname></pt>
          <pd>Specifies the full path name where the restore job report file will be placed on the
            master host. If not specified, defaults to the master data directory.</pd>
        </plentry>
        <plentry>
          <pt>--gp-l=<varname>dbid</varname> [, ...] (restore certain segments)</pt>
          <pd>Specifies whether to check for backup files on only the specified active segment
            instances (followed by a comma-separated list of the segments <varname>dbid</varname>).
            The default is to check for backup files on all active segments, restore the active
            segments, and then syncronize the mirrors.</pd>
        </plentry>
        <plentry>
          <pt>-? | -h | --help (help)</pt>
          <pd>Displays the online help.</pd>
        </plentry>
        <plentry>
          <pt>--version (show utility version)</pt>
          <pd>Displays the version of this utility.</pd>
        </plentry>
      </parml>
    </section>
    <section id="section5">
      <title>Examples</title>
      <p>Restore a Greenplum database using backup files created by <codeph>gp_dump</codeph>:</p>
      <codeblock>gp_restore --gp-k=2005103112453 -d gpdb</codeblock>
      <p>Restore a single segment instance only (by noting the <varname>dbid</varname> of the
        segment instance):</p>
      <codeblock>gp_restore --gp-k=2005103112453 -d gpdb --gp-s=5</codeblock>
    </section>
    <section id="section6">
      <title>See Also</title>
      <p><codeph><xref href="../client_utilities/pg_restore.xml#topic1" type="topic" format="dita"
          /></codeph>, <codeph><xref href="gpdbrestore.xml#topic1" type="topic" format="dita"
          /></codeph></p>
    </section>
  </body>
</topic>
