<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
  <title id="kn142714">gp_dump</title>
  <body>
    <p><draft-comment author="kiyamm"> Removed 4.3.3.0</draft-comment>Writes out a database to SQL
      script files, which can then be used to restore the database using
      <codeph>gp_restore</codeph>. </p>
    <note>The <codeph>gp_dump</codeph> utility is deprecated and will be removed in a future
      release. Use <codeph><xref href="gpcrondump.xml#topic1" type="topic" format="dita"/></codeph>
      and <codeph><xref href="gpdbrestore.xml#topic1" type="topic" format="dita"/></codeph> to
      backup and restore Greenplum databases. </note>
    <section id="section2">
      <title>Synopsis</title>
      <codeblock><b>gp_dump</b> [<b>-a</b> | <b>-s</b>] [<b>-c</b>] [<b>-d</b>] [<b>-D</b>] [<b>-n</b> <varname>schema</varname>] [<b>-o</b>] [<b>-O</b>] 
    [<b>-t</b> <varname>table_name</varname>] [<b>-T</b> <varname>table_name</varname>] [<b>-x</b>] [<b>-h</b> <varname>hostname</varname>] [<b>-p</b> <varname>port</varname>] 
    [<b>-U</b> <varname>username</varname>] [<b>-W</b>] [<b>-i</b>] [<b>-v</b>] [<b>--gp-c</b>] [<b>--gp-d</b>=<varname>backup_directory</varname>] 
    [<b>--gp-r</b>=<varname>reportfile</varname>] [<b>--gp-s</b>=<varname>dbid</varname> [, ...]] <varname>database_name</varname>

<b>gp_dump</b> <b>-?</b> | <b>--help</b> 

<b>gp_dump</b> <b>--version</b></codeblock>
    </section>
    <section id="section3">
      <title>Description</title>
      <p>The <codeph>gp_dump</codeph> utility dumps the contents of a database into SQL script
        files, which can then be used to restore the database schema and user data at a later time
        using <codeph>gp_restore</codeph>. During a dump operation, users will still have full
        access to the database.</p>
      <p>The functionality of <codeph>gp_dump</codeph> is analogous to PostgreSQL's
          <codeph>pg_dump</codeph> utility, which writes out (or dumps) the content of a database
        into a script file. The script file contains SQL commands that can be used to restore the
        databases, data, and global objects such as users, groups, and access permissions.</p>
      <p>The functionality of <codeph>gp_dump</codeph> is modified to accommodate the distributed
        nature of a Greenplum database. Keep in mind that a database in Greenplum Database is
        actually comprised of several PostgreSQL instances (the master and all segments), each of
        which must be dumped individually. The <codeph>gp_dump</codeph> utility takes care of
        dumping all of the individual instances across the system.</p>
      <p>The <codeph>gp_dump</codeph> utility performs the following actions and produces the
        following dump files:</p>
      <ul id="ul_t2r_mcm_z4">
        <li>
          <b>On the master host</b>
          <ul id="ul_b2n_pcm_z4">
            <li id="kn142739">Dumps <codeph>CREATE DATABASE</codeph> SQL statements into a file in
              the master data directory. The default naming convention of this file is
                <codeph>gp_cdatabase_1_</codeph><varname>dbid</varname><codeph>_</codeph><varname>timestamp</varname>.
              This statement can be run on the master instance to recreate the user
              database(s).</li>
            <li id="kn142740">Dumps the user database schema(s) into a SQL file in the master data
              directory. The default naming convention of this file is
                <codeph>gp_dump_1_</codeph><varname>dbid</varname><codeph>_</codeph><varname>timestamp</varname>.
              This file is used by <codeph>gp_restore</codeph> to recreate the database
              schema(s).</li>
            <li id="kn142741">Creates a dump file in the master data directory named
                <codeph>gp_dump_1_</codeph><varname>dbid</varname><codeph>_</codeph><varname>timestamp</varname><codeph>_post_data</codeph>
              that contains commands to rebuild objects associated with the tables.<p>When the
                database is restored with <codeph><xref href="./gp_restore.xml#topic1" type="topic"
                    format="dita"/></codeph>, first, the schema and data are restored, and then, the
                dump file is used to rebuilt the other objects associated with the tables.</p></li>
            <li id="kn142746">Creates a log file in the master data directory named
                <codeph>gp_dump_status_1_</codeph><varname>dbid</varname><codeph>_</codeph><varname>timestamp</varname>.</li>
            <li id="kn142747"><codeph>gp_dump</codeph> launches a <codeph>gp_dump_agent</codeph> for
              each segment instance to be backed up. <codeph>gp_dump_agent</codeph> processes run on
              the segment hosts and report status back to the <codeph>gp_dump</codeph> process
              running on the master host. </li>
          </ul>
        </li>
      </ul>
      <ul id="ul_vzd_4cm_z4">
        <li>
          <b>On the segment hosts</b>
          <ul id="ul_wrb_1dm_z4">
            <li id="kn142749">Dumps the user data for each segment instance into a SQL file in the
              segment instance's data directory. By default, only primary (or active) segment
              instances are backed up. The default naming convention of this file is
                <codeph>gp_dump_0_</codeph><varname>dbid</varname><codeph>_</codeph><varname>timestamp</varname>.
              This file is used by <codeph>gp_restore</codeph> to recreate that particular segment
              of user data.</li>
            <li id="kn142750">Creates a log file in each segment instance's data directory named
                <codeph>gp_dump_status_0_</codeph><varname>dbid</varname><codeph>_</codeph><varname>timestamp</varname>.</li>
          </ul>
        </li>
      </ul>
      <p>Note that the 14 digit timestamp is the number that uniquely identifies the backup job, and
        is part of the filename for each dump file created by a <codeph>gp_dump</codeph> operation.
        This timestamp must be passed to the <codeph><xref href="./gp_restore.xml#topic1"
            type="topic" format="dita"/></codeph> utility when restoring a Greenplum database.</p>
    </section>
    <section id="section4">
      <title>Options</title>
      <parml>
        <plentry>
          <pt>-a | --data-only</pt>
          <pd>Dump only the data, not the schema (data definitions).</pd>
        </plentry>
        <plentry>
          <pt>-s | --schema-only</pt>
          <pd>Dump only the object definitions (schema), not data.</pd>
        </plentry>
        <plentry>
          <pt>-c | --clean</pt>
          <pd>Output commands to clean (drop) database objects prior to (the commands for) creating
            them.</pd>
        </plentry>
        <plentry>
          <pt>-d | --inserts</pt>
          <pd>Dump data as <codeph>INSERT</codeph> commands (rather than <codeph>COPY</codeph>).
            This will make restoration very slow; it is mainly useful for making dumps that can be
            loaded into non-PostgreSQL based databases. Note that the restore may fail altogether if
            you have rearranged column order. The <codeph>-D</codeph> option is safer, though even
            slower. </pd>
        </plentry>
        <plentry>
          <pt>-D | --column-inserts</pt>
          <pd>Dump data as <codeph>INSERT</codeph> commands with explicit column names
              (<codeph>INSERT INTO table (column, ...) VALUES ...</codeph>). This will make
            restoration very slow; it is mainly useful for making dumps that can be loaded into
            non-PostgreSQL based databases.</pd>
        </plentry>
        <plentry>
          <pt>-n <varname>schema</varname> | --schema=<varname>schema</varname></pt>
          <pd>Dumps the contents of the named schema only. If this option is not specified, all
            non-system schemas in the target database will be dumped. You cannot backup system
            catalog schemas (such as <varname>pg_catalog</varname>) with <codeph>gp_dump</codeph>. </pd>
          <pd><b>Caution:</b> In this mode, <codeph>gp_dump</codeph> makes no attempt to dump any
            other database objects that objects in the selected schema may depend upon. Therefore,
            there is no guarantee that the results of a single-schema dump can be successfully
            restored by themselves into a clean database.</pd>
        </plentry>
        <plentry>
          <pt>-o | --oids</pt>
          <pd>Dump object identifiers (OIDs) as part of the data for every table. Use of OIDs is not
            recommended in Greenplum Database, so this option should not be used if restoring data
            to another Greenplum Database installation.</pd>
        </plentry>
        <plentry>
          <pt>-O | --no-owner</pt>
          <pd>Do not output commands to set ownership of objects to match the original database. By
            default, <codeph>gp_dump</codeph> issues <codeph>ALTER OWNER</codeph> or <codeph>SET
              SESSION AUTHORIZATION</codeph> statements to set ownership of created database
            objects. These statements will fail when the script is run unless it is started by a
            superuser (or the same user that owns all of the objects in the script). To make a
            script that can be restored by any user, but will give that user ownership of all the
            objects, specify <codeph>-O</codeph>.</pd>
        </plentry>
        <plentry>
          <pt>-t <varname>table</varname> | --table=<varname>table</varname></pt>
          <pd>Dump only tables (or views or sequences) matching the table pattern. Multiple tables
            can be selected by writing multiple <codeph>-t</codeph> switches. Also, the table
            parameter is interpreted as a pattern according to the same rules used by
              <codeph>psql</codeph>'s <codeph>\d</codeph> commands, so multiple tables can also be
            selected by writing wildcard characters in the pattern. When using wildcards, be careful
            to quote the pattern if needed to prevent the shell from expanding the wildcards. The
              <codeph>-n</codeph> and <codeph>-N</codeph> switches have no effect when
              <codeph>-t</codeph> is used, because tables selected by <codeph>-t</codeph> will be
            dumped regardless of those switches, and non-table objects will not be dumped.<note>When
                <codeph>-t</codeph> is specified, <codeph>gp_dump</codeph> makes no attempt to dump
              any other database objects that the selected table(s) may depend upon. Therefore,
              there is no guarantee that the results of a specific-table dump can be successfully
              restored by themselves into a clean database.</note><note><codeph>-t</codeph> cannot
              be used to specify a child table partition. To dump a partitioned table, you must
              specify the parent table name.</note></pd>
        </plentry>
        <plentry>
          <pt>-T <varname>table</varname> | --exclude-table=<varname>table</varname></pt>
          <pd>Do not dump any tables matching the table pattern. The pattern is interpreted
            according to the same rules as for <codeph>-t</codeph>. <codeph>-T</codeph> can be given
            more than once to exclude tables matching any of several patterns. When both
              <codeph>-t</codeph> and <codeph>-T</codeph> are given, the behavior is to dump just
            the tables that match at least one <codeph>-t</codeph> switch but no <codeph>-T</codeph>
            switches. If <codeph>-T</codeph> appears without <codeph>-t</codeph>, then tables
            matching <codeph>-T</codeph> are excluded from what is otherwise a normal dump.</pd>
        </plentry>
        <plentry>
          <pt>-x | --no-privileges | --no-acl</pt>
          <pd>Prevents the dumping of access privileges (<codeph>GRANT/REVOKE</codeph>
            commands).</pd>
        </plentry>
        <plentry>
          <pt>-h <varname>hostname</varname> | --host=<varname>hostname</varname></pt>
          <pd>The host name of the Greenplum Database master host. If not provided, the value of
              <codeph>$PGHOST</codeph> or the local host is used.</pd>
        </plentry>
        <plentry>
          <pt>-p <varname>port</varname> | --port=<varname>port</varname></pt>
          <pd>The Greenplum Database master port. If not provided, the value of
              <codeph>$PGPORT</codeph> or the port number provided at compile time is used.</pd>
        </plentry>
        <plentry>
          <pt>-U <varname>username</varname> | --username=<varname>user</varname></pt>
          <pd>The database superuser account name, for example <codeph>gpadmin</codeph>. If not
            provided, the value of <codeph>$PGUSER</codeph> or the current OS user name is
            used.</pd>
        </plentry>
        <plentry>
          <pt>-W (force password prompt)</pt>
          <pd>Forces a password prompt. This will happen automatically if the server requires
            password authentication.</pd>
        </plentry>
        <plentry>
          <pt>-i | --ignore-version</pt>
          <pd>Ignores a version mismatch between <codeph>gp_dump</codeph> and the database
            server.</pd>
        </plentry>
        <plentry>
          <pt>-v | --verbose</pt>
          <pd>Specifies verbose mode. This will cause <codeph>gp_dump</codeph> to output detailed
            object comments and start/stop times to the dump file, and progress messages to standard
            error.</pd>
        </plentry>
        <plentry>
          <pt>--gp-c (use gzip)</pt>
          <pd>Use <codeph>gzip</codeph> for inline compression.</pd>
        </plentry>
        <plentry>
          <pt>--gp-d=<varname>directoryname</varname></pt>
          <pd>Specifies the relative or absolute path where the backup files will be placed on each
            host. If this is a relative path, it is considered to be relative to the data directory.
            If the path does not exist, it will be created, if possible. If not specified, defaults
            to the data directory of each instance to be backed up. Using this option may be
            desirable if each segment host has multiple segment instances — it will create the dump
            files in a centralized location.</pd>
        </plentry>
        <plentry>
          <pt>--gp-r=<varname>reportfile</varname></pt>
          <pd>Specifies the full path name where the backup job log file will be placed on the
            master host. If not specified, defaults to the master data directory or if running
            remotely, the current working directory.</pd>
        </plentry>
        <plentry>
          <pt>--gp-s=<varname>dbid</varname> (backup certain segments)</pt>
          <pd>Specifies the set of active segment instances to back up with a comma-separated list
            of the segments <varname>dbid</varname>. The default is to backup all active segment
            instances.</pd>
        </plentry>
        <plentry>
          <pt>
            <varname>database_name</varname>
          </pt>
          <pd>Required. The name of the database you want to dump. If not specified, the value of
              <codeph>$PGDATABASE</codeph> will be used. The database name must be stated last after
            all other options have been specified.</pd>
        </plentry>
        <plentry>
          <pt>-? | --help (help)</pt>
          <pd>Displays the online help.</pd>
        </plentry>
        <plentry>
          <pt>--version (show utility version)</pt>
          <pd>Displays the version of this utility.</pd>
        </plentry>
      </parml>
    </section>
    <section id="section5">
      <title>Examples</title>
      <p>Back up a database:</p>
      <codeblock>gp_dump gpdb</codeblock>
      <p>Back up a database, and create dump files in a centralized location on all hosts:</p>
      <codeblock>gp_dump --gp-d=/home/gpadmin/backups gpdb</codeblock>
      <p>Back up a particular schema only:</p>
      <codeblock>gp_dump -n myschema mydatabase</codeblock>
      <p>Back up a single segment instance only (by noting the <varname>dbid</varname> of the
        segment instance):</p>
      <codeblock>gp_dump --gp-s=5 gpdb</codeblock>
    </section>
    <section id="section6">
      <title>See Also</title>
      <p><codeph><xref href="gpdbrestore.xml#topic1" type="topic" format="dita"/></codeph>,
            <codeph><xref href="gpcrondump.xml#topic1" type="topic" format="dita"/></codeph>,
            <codeph><xref href="../client_utilities/pg_dump.xml#topic1"/></codeph></p>
    </section>
  </body>
</topic>
