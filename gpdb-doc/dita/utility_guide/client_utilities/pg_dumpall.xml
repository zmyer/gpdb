<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="or137116">pg_dumpall</title>
    <body>
        <p id="client_util_desc">Extracts all databases in a Greenplum Database system
            to a single script file or other archive file.</p>
        <section id="section2">
            <title>Synopsis</title>
            <codeblock id="client_util_synopsis"><b>pg_dumpall</b> [<varname>connection_option</varname> ...] [<varname>dump_option</varname> ...]</codeblock>
        </section>
        <section id="section3">
            <title>Description</title>
            <p><codeph>pg_dumpall</codeph> is a standard PostgreSQL utility for backing up all
                databases in a Greenplum Database (or PostgreSQL) instance, and is
                also supported in Greenplum Database. It creates a single
                (non-parallel) dump file. <ph>For routine backups of Greenplum
                    Database it is better to use the Greenplum Database backup utility,
                            <codeph><xref href="../admin_utilities/gpcrondump.xml#topic1"
                    /></codeph>, for the best performance.</ph></p>
            <p><codeph>pg_dumpall</codeph> creates a single script file that contains SQL commands
                that can be used as input to <codeph><xref href="psql.xml#topic1" type="topic"
                        format="dita"/></codeph> to restore the databases. It does this by calling
                        <codeph><xref href="pg_dump.xml#topic1" type="topic" format="dita"
                    /></codeph> for each database. <codeph>pg_dumpall</codeph> also dumps global
                objects that are common to all databases. (<codeph>pg_dump</codeph> does not save
                these objects.) This currently includes information about database users and groups,
                and access permissions that apply to databases as a whole.</p>
            <p>Since <codeph>pg_dumpall</codeph> reads tables from all databases you will most
                likely have to connect as a database superuser in order to produce a complete dump.
                Also you will need superuser privileges to execute the saved script in order to be
                allowed to add users and groups, and to create databases.</p>
            <p>The SQL script will be written to the standard output. Shell operators should be used
                to redirect it into a file.</p>
            <p><codeph>pg_dumpall</codeph> needs to connect several times to the Greenplum Database master server (once per database). If you use password
                authentication it is likely to ask for a password each time. It is convenient to
                have a <codeph>~/.pgpass</codeph> file in such cases.</p>
            <note>The <codeph>--ignore-version</codeph> option is deprecated and will be removed in
                a future release.</note>
        </section>
        <section id="section4">
            <title>Options</title>
            <sectiondiv id="section5">
                <b>Dump Options</b>
                <parml>
                    <plentry>
                        <pt>-a | --data-only</pt>
                        <pd>Dump only the data, not the schema (data definitions). This option is
                            only meaningful for the plain-text format. For the archive formats, you
                            may specify the option when you call <codeph><xref
                                    href="./pg_restore.xml#topic1" type="topic" format="dita"
                                /></codeph>. </pd>
                    </plentry>
                    <plentry>
                        <pt>-c | --clean</pt>
                        <pd>Output commands to clean (drop) database objects prior to (the commands
                            for) creating them. This option is only meaningful for the plain-text
                            format. For the archive formats, you may specify the option when you
                            call <codeph><xref href="./pg_restore.xml#topic1" type="topic"
                                    format="dita"/></codeph>. </pd>
                    </plentry>
                    <plentry>
                        <pt>-d | --inserts</pt>
                        <pd>Dump data as <codeph>INSERT</codeph> commands (rather than
                                <codeph>COPY</codeph>). This will make restoration very slow; it is
                            mainly useful for making dumps that can be loaded into
                            non-PostgreSQL-based databases. Also, since this option generates a
                            separate command for each row, an error in reloading a row causes only
                            that row to be lost rather than the entire table contents. Note that the
                            restore may fail altogether if you have rearranged column order. The
                                <codeph>-D</codeph> option is safe against column order changes,
                            though even slower. </pd>
                    </plentry>
                    <plentry>
                        <pt>-D | --column-inserts | --attribute-inserts</pt>
                        <pd>Dump data as <codeph>INSERT</codeph> commands with explicit column names
                                <codeph>(INSERT INTO <varname>table</varname>
                                    (<varname>column</varname>, ...) VALUES ...)</codeph>. This will
                            make restoration very slow; it is mainly useful for making dumps that
                            can be loaded into non-PostgreSQL-based databases. Also, since this
                            option generates a separate command for each row, an error in reloading
                            a row causes only that row to be lost rather than the entire table
                            contents.</pd>
                    </plentry>
                    <plentry>
                        <pt>-F | --filespaces</pt>
                        <pd>Dump filespace definitions.</pd>
                    </plentry>
                    <plentry>
                        <pt>-f <varname>filename</varname> | --file=<varname>filename</varname></pt>
                        <pd>Send output to the specified file. </pd>
                    </plentry>
                    <plentry>
                        <pt>-g | --globals-only</pt>
                        <pd>Dump only global objects (roles and tablespaces), no databases.</pd>
                    </plentry>
                    <plentry>
                        <pt>-i | --ignore-version</pt>
                        <pd><note>This option is deprecated and will be removed in a future
                                release.</note>Ignore version mismatch between <codeph><xref
                                    href="pg_dump.xml#topic1" type="topic" format="dita"/></codeph>
                            and the database server. <codeph>pg_dump</codeph> can dump from servers
                            running previous releases of Greenplum Database (or
                            PostgreSQL), but very old versions may not be supported anymore. Use
                            this option if you need to override the version check.</pd>
                    </plentry>
                    <plentry>
                        <pt>-o | --oids</pt>
                        <pd>Dump object identifiers (OIDs) as part of the data for every table. Use
                            of this option is not recommended for files that are intended to be
                            restored into Greenplum Database.</pd>
                    </plentry>
                    <plentry>
                        <pt>-O | --no-owner</pt>
                        <pd>Do not output commands to set ownership of objects to match the original
                            database. By default, <codeph><xref href="pg_dump.xml#topic1"
                                    type="topic" format="dita"/></codeph> issues <codeph>ALTER
                                OWNER</codeph> or <codeph>SET SESSION AUTHORIZATION</codeph>
                            statements to set ownership of created database objects. These
                            statements will fail when the script is run unless it is started by a
                            superuser (or the same user that owns all of the objects in the script).
                            To make a script that can be restored by any user, but will give that
                            user ownership of all the objects, specify <codeph>-O</codeph>. This
                            option is only meaningful for the plain-text format. For the archive
                            formats, you may specify the option when you call <codeph><xref
                                    href="./pg_restore.xml#topic1" type="topic" format="dita"
                                /></codeph>.</pd>
                    </plentry>
                    <plentry>
                        <pt>-r | --resource-queues</pt>
                        <pd>Dump resource queue definitions.</pd>
                    </plentry>
                    <plentry>
                        <pt>-s | --schema-only</pt>
                        <pd>Dump only the object definitions (schema), not data.</pd>
                    </plentry>
                    <plentry>
                        <pt>-S <varname>username</varname> |
                            --superuser=<varname>username</varname></pt>
                        <pd>Specify the superuser user name to use when disabling triggers. This is
                            only relevant if <codeph>--disable-triggers</codeph> is used. It is
                            better to leave this out, and instead start the resulting script as a
                                    superuser.<note>Greenplum Database does not
                                support user-defined triggers.</note></pd>
                    </plentry>
                    <plentry>
                        <pt>-v | --verbose</pt>
                        <pd>Specifies verbose mode. This will cause <codeph><xref
                                    href="pg_dump.xml#topic1" type="topic" format="dita"/></codeph>
                            to output detailed object comments and start/stop times to the dump
                            file, and progress messages to standard error.</pd>
                    </plentry>
                    <plentry>
                        <pt>-x | --no-privileges | --no-acl</pt>
                        <pd>Prevent dumping of access privileges (<codeph>GRANT/REVOKE</codeph>
                            commands).</pd>
                    </plentry>
                    <plentry>
                        <pt>--disable-dollar-quoting</pt>
                        <pd>This option disables the use of dollar quoting for function bodies, and
                            forces them to be quoted using SQL standard string syntax.</pd>
                    </plentry>
                    <plentry>
                        <pt>--disable-triggers</pt>
                        <pd>This option is only relevant when creating a data-only dump. It
                            instructs <codeph>pg_dumpall</codeph> to include commands to temporarily
                            disable triggers on the target tables while the data is reloaded. Use
                            this if you have triggers on the tables that you do not want to invoke
                            during data reload. The commands emitted for
                                <codeph>--disable-triggers</codeph> must be done as superuser. So,
                            you should also specify a superuser name with <codeph>-S</codeph>, or
                            preferably be careful to start the resulting script as a
                                    superuser.<note>Greenplum Database does not
                                support user-defined triggers.</note></pd>
                    </plentry>
                    <plentry>
                        <pt>--use-set-session-authorization</pt>
                        <pd>Output SQL-standard <codeph>SET SESSION AUTHORIZATION</codeph> commands
                            instead of <codeph>ALTER OWNER</codeph> commands to determine object
                            ownership. This makes the dump more standards compatible, but depending
                            on the history of the objects in the dump, may not restore properly. A
                            dump using <codeph>SET SESSION AUTHORIZATION</codeph> will require
                            superuser privileges to restore correctly, whereas <codeph>ALTER
                                OWNER</codeph> requires lesser privileges.</pd>
                    </plentry>
                    <plentry>
                        <pt>--gp-syntax</pt>
                        <pd>Output Greenplum Database syntax in the <codeph>CREATE
                                TABLE</codeph> statements. This allows the distribution policy
                                (<codeph>DISTRIBUTED BY</codeph> or <codeph>DISTRIBUTED
                                RANDOMLY</codeph> clauses) of a Greenplum Database
                            table to be dumped, which is useful for restoring into other Greenplum Database systems.</pd>
                    </plentry>
                </parml>
            </sectiondiv>
            <sectiondiv id="section6">
                <b>Connection Options</b>
                <parml>
                    <plentry>
                        <pt>-h <varname>host</varname> | --host <varname>host</varname></pt>
                        <pd>The host name of the machine on which the Greenplum master database server is running. If
                            not specified, reads from the environment variable
                                <codeph>PGHOST</codeph> or defaults to
                            <codeph>localhost</codeph>.</pd>
                    </plentry>
                    <plentry>
                        <pt>-p <varname>port</varname> | --port <varname>port</varname></pt>
                        <pd>The TCP port on which the Greenplum master
                            database server is listening for connections. If not specified, reads
                            from the environment variable <codeph>PGPORT</codeph> or defaults to
                            5432.</pd>
                    </plentry>
                    <plentry>
                        <pt>-U <varname>username</varname> | --username
                            <varname>username</varname></pt>
                        <pd>The database role name to connect as. If not specified, reads from the
                            environment variable <codeph>PGUSER</codeph> or defaults to the current
                            system role name.</pd>
                    </plentry>
                    <plentry>
                        <pt>-W | --password</pt>
                        <pd>Force a password prompt.</pd>
                    </plentry>
                </parml>
            </sectiondiv>
        </section>
        <section id="section7">
            <title>Notes</title>
            <p>Since <codeph>pg_dumpall</codeph> calls <codeph><xref href="pg_dump.xml#topic1"
                        type="topic" format="dita"/></codeph> internally, some diagnostic messages
                will refer to <codeph>pg_dump</codeph>. </p>
            <p>Once restored, it is wise to run <codeph>ANALYZE</codeph> on each database so the
                query planner has useful statistics. You can also run <codeph>vacuumdb -a
                    -z</codeph> to analyze all databases. </p>
            <p><codeph>pg_dumpall</codeph> requires all needed tablespace (filespace) directories to
                exist before the restore or database creation will fail for databases in non-default
                locations.</p>
        </section>
        <section id="section8">
            <title>Examples</title>
            <p>To dump all databases: </p>
            <codeblock>pg_dumpall &gt; db.out</codeblock>
            <p>To reload this file:</p>
            <codeblock>psql template1 -f db.out</codeblock>
            <p>To dump only global objects (including filespaces and resource queues):</p>
            <codeblock>pg_dumpall -g -f -r</codeblock>
        </section>
        <section id="section9">
            <title>See Also</title>
            <p>
                <codeph>
                    <xref href="pg_dump.xml#topic1" type="topic" format="dita"/>
                </codeph>
            </p>
        </section>
    </body>
</topic>
