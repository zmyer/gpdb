#
# PostgreSQL top level makefile
#
# $PostgreSQL: pgsql/GNUmakefile.in,v 1.46 2007/02/09 15:55:57 petere Exp $
#

subdir =
top_builddir = .
include $(top_builddir)/src/Makefile.global


all:
#	$(MAKE) -C doc all
	$(MAKE) -C src all
	$(MAKE) -C config all
	$(MAKE) -C contrib/xlogdump all
	$(MAKE) -C contrib/changetrackingdump all
	$(MAKE) -C contrib/formatter all
	$(MAKE) -C contrib/formatter_fixedwidth all
	$(MAKE) -C contrib/fuzzystrmatch all
	$(MAKE) -C contrib/extprotocol all	
	$(MAKE) -C contrib/gp_sparse_vector all
	$(MAKE) -C contrib/gp_distribution_policy all
	$(MAKE) -C contrib/gp_internal_tools all
	$(MAKE) -C contrib/gp_cancel_query all
	$(MAKE) -C contrib/indexscan all
	$(MAKE) -C contrib/pg_upgrade_support all
	$(MAKE) -C contrib/pg_upgrade all
	$(MAKE) -C gpAux/extensions mapreduce
	@echo "All of Greenplum Database successfully made. Ready to install."

install:
#	$(MAKE) -C doc $@
	$(MAKE) -C src $@
	$(MAKE) -C config $@
	$(MAKE) -C contrib/xlogdump $@
	$(MAKE) -C contrib/changetrackingdump $@
	$(MAKE) -C contrib/formatter $@
	$(MAKE) -C contrib/formatter_fixedwidth $@
	$(MAKE) -C contrib/fuzzystrmatch $@
	$(MAKE) -C contrib/extprotocol $@
	$(MAKE) -C contrib/gp_sparse_vector $@
	$(MAKE) -C contrib/gp_distribution_policy $@
	$(MAKE) -C contrib/gp_internal_tools $@
	$(MAKE) -C contrib/gp_cancel_query $@
	$(MAKE) -C contrib/indexscan $@ 
	$(MAKE) -C contrib/pg_upgrade_support $@
	$(MAKE) -C contrib/pg_upgrade $@
	$(MAKE) -C gpMgmt $@
	$(MAKE) -C gpAux/extensions $@

	@echo "Greenplum Database installation complete."

installdirs uninstall:
#	$(MAKE) -C doc $@
	$(MAKE) -C src $@
	$(MAKE) -C config $@
	$(MAKE) -C contrib/xlogdump $@
	$(MAKE) -C contrib/changetrackingdump $@
	$(MAKE) -C contrib/formatter $@
	$(MAKE) -C contrib/formatter_fixedwidth $@
	$(MAKE) -C contrib/fuzzystrmatch $@
	$(MAKE) -C contrib/extprotocol $@
	$(MAKE) -C contrib/gp_sparse_vector $@
	$(MAKE) -C contrib/gp_distribution_policy $@
	$(MAKE) -C contrib/gp_internal_tools $@
	$(MAKE) -C contrib/gp_cancel_query $@
	$(MAKE) -C contrib/indexscan $@ 
	$(MAKE) -C contrib/pg_upgrade_support $@
	$(MAKE) -C contrib/pg_upgrade $@

distprep:
#	$(MAKE) -C doc $@
	$(MAKE) -C src $@
	$(MAKE) -C config $@
	$(MAKE) -C contrib $@

# clean, distclean, etc should apply to contrib too, even though
# it's not built by default
clean:
#	$(MAKE) -C doc $@
	$(MAKE) -C contrib $@
	$(MAKE) -C src $@
	$(MAKE) -C config $@
	$(MAKE) -C contrib/xlogdump $@
	$(MAKE) -C contrib/changetrackingdump $@
	$(MAKE) -C contrib/formatter $@
	$(MAKE) -C contrib/formatter_fixedwidth $@
	$(MAKE) -C contrib/fuzzystrmatch $@
	$(MAKE) -C contrib/extprotocol $@
	$(MAKE) -C contrib/gp_sparse_vector $@
	$(MAKE) -C contrib/gp_distribution_policy $@
	$(MAKE) -C contrib/gp_internal_tools $@
	$(MAKE) -C contrib/gp_cancel_query $@
	$(MAKE) -C contrib/indexscan $@
	$(MAKE) -C contrib/pg_upgrade_support $@
	$(MAKE) -C contrib/pg_upgrade $@
	$(MAKE) -C gpAux/extensions $@
	$(MAKE) -C gpMgmt $@
# Garbage from autoconf:
	@rm -rf autom4te.cache/

# Important: distclean `src' last, otherwise Makefile.global
# will be gone too soon.
distclean maintainer-clean:
#	-$(MAKE) -C doc $@
	-$(MAKE) -C gpAux/extensions $@
	-$(MAKE) -C contrib $@
	-$(MAKE) -C config $@
	-$(MAKE) -C src $@
	-rm -f config.cache config.log config.status GNUmakefile
# Garbage from autoconf:
	@rm -rf autom4te.cache/

# This is a top-level target that runs "all" regression test suites against
# a running server. This is what the CI pipeline runs.
installcheck-world:
	$(MAKE) -C src/test installcheck-good
	$(MAKE) -C src/test installcheck-bugbuster
	$(MAKE) -C src/test/isolation installcheck
	$(MAKE) -C src/pl installcheck
	#$(MAKE) -C src/interfaces/ecpg installcheck
	#$(MAKE) -C contrib installcheck
	$(MAKE) -C gpAux/extensions installcheck
	$(MAKE) -C src/bin/gpfdist installcheck


# Run mock tests, that don't require a running server. Arguably these should
# be part of [install]check-world, but we treat them more like part of
# compilation than regression testing, in the CI. But they are too heavy-weight
# to put into "make all", either.
.PHONY : unittest-check
unittest-check:
	$(MAKE) -C src/backend unittest-check
	$(MAKE) -C src/bin unittest-check


GNUmakefile: GNUmakefile.in $(top_builddir)/config.status
	./config.status $@


##########################################################################

distdir	= postgresql-$(VERSION)
dummy	= =install=
garbage = =*  "#"*  ."#"*  *~*  *.orig  *.rej  core  postgresql-*

dist: $(distdir).tar.gz $(distdir).tar.bz2
ifeq ($(split-dist), yes)
dist: postgresql-base-$(VERSION).tar.gz postgresql-docs-$(VERSION).tar.gz postgresql-opt-$(VERSION).tar.gz postgresql-test-$(VERSION).tar.gz 
endif
dist:
	-rm -rf $(distdir)

$(distdir).tar: distdir
	$(TAR) chf $@ $(distdir)

.INTERMEDIATE: $(distdir).tar

opt_files = \
	src/tools src/tutorial \
	$(addprefix src/pl/, plperl plpython tcl)

docs_files =

postgresql-base-$(VERSION).tar: distdir
	$(TAR) -c $(addprefix --exclude $(distdir)/, $(docs_files) $(opt_files) src/test) \
	  -f $@ $(distdir)

postgresql-docs-$(VERSION).tar: distdir
	$(TAR) cf $@ $(addprefix $(distdir)/, $(docs_files))

postgresql-opt-$(VERSION).tar: distdir
	$(TAR) cf $@ $(addprefix $(distdir)/, $(opt_files))

postgresql-test-$(VERSION).tar: distdir
	$(TAR) cf $@ $(distdir)/src/test

distdir:
	-rm -rf $(distdir)* $(dummy)
	for x in `cd $(top_srcdir) && find . \( -name CVS -prune \) -o \( -name .git -prune \) -o -print`; do \
	  file=`expr X$$x : 'X\./\(.*\)'`; \
	  if test -d "$(top_srcdir)/$$file" ; then \
	    mkdir "$(distdir)/$$file" && chmod 777 "$(distdir)/$$file";	\
	  else \
	    ln "$(top_srcdir)/$$file" "$(distdir)/$$file" >/dev/null 2>&1 \
	      || cp "$(top_srcdir)/$$file" "$(distdir)/$$file"; \
	  fi || exit; \
	done
	$(MAKE) -C $(distdir) distprep
	#$(MAKE) -C $(distdir)/doc/src/sgml/ HISTORY INSTALL regress_README
	#cp $(distdir)/doc/src/sgml/HISTORY $(distdir)/
	#cp $(distdir)/doc/src/sgml/INSTALL $(distdir)/
	#cp $(distdir)/doc/src/sgml/regress_README $(distdir)/src/test/regress/README
	$(MAKE) -C $(distdir) distclean
	#rm -f $(distdir)/README.git

distcheck: dist
	-rm -rf $(dummy)
	mkdir $(dummy)
	$(GZIP) -d -c $(distdir).tar.gz | $(TAR) xf -
	install_prefix=`cd $(dummy) && pwd`; \
	cd $(distdir) \
	&& ./configure --prefix="$$install_prefix"
	$(MAKE) -C $(distdir) -q distprep
	$(MAKE) -C $(distdir)
	$(MAKE) -C $(distdir) install
	$(MAKE) -C $(distdir) uninstall
	@echo "checking whether \`$(MAKE) uninstall' works"
	test `find $(dummy) ! -type d | wc -l` -eq 0
	$(MAKE) -C $(distdir) dist
# Room for improvement: Check here whether this distribution tarball
# is sufficiently similar to the original one.
	-rm -rf $(distdir) $(dummy)
	@echo "Distribution integrity checks out."

.PHONY: dist distdir distcheck
unexport split-dist
